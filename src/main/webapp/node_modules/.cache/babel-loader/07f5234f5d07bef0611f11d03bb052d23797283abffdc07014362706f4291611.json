{"ast":null,"code":"var _jsxFileName = \"C:\\\\Spring Boot\\\\workspacebranch\\\\flirdog\\\\src\\\\main\\\\webapp\\\\src\\\\components\\\\login\\\\join\\\\ScratchCard.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ScratchCard = ({\n  frontImageSrc,\n  backImageSrc,\n  width,\n  height\n}) => {\n  _s();\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    canvas.style.backgroundImage = `url(${backImageSrc})`; // 뒷 배경 이미지 설정\n    canvas.style.backgroundSize = \"cover\";\n    const ctx = canvas.getContext(\"2d\");\n\n    // 전면 이미지 로드\n    const frontImage = new Image();\n    frontImage.src = frontImageSrc; // 전면 이미지 URL\n    frontImage.onload = () => {\n      ctx.drawImage(frontImage, 0, 0, canvas.width, canvas.height);\n    };\n\n    // 드래그 이벤트 핸들러\n    const handleMouseMove = e => {\n      const rect = canvas.getBoundingClientRect();\n      const x = e.clientX - rect.left;\n      const y = e.clientY - rect.top;\n      ctx.globalCompositeOperation = \"destination-out\";\n      ctx.beginPath();\n      ctx.arc(x, y, 20, 0, Math.PI * 2, false);\n      ctx.fill();\n    };\n    canvas.addEventListener(\"mousemove\", handleMouseMove);\n    return () => {\n      canvas.removeEventListener(\"mousemove\", handleMouseMove);\n    };\n  }, [frontImageSrc]);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef,\n    width: width,\n    height: height\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 10\n  }, this);\n};\n_s(ScratchCard, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n_c = ScratchCard;\nexport default ScratchCard;\nvar _c;\n$RefreshReg$(_c, \"ScratchCard\");","map":{"version":3,"names":["React","useRef","useEffect","jsxDEV","_jsxDEV","ScratchCard","frontImageSrc","backImageSrc","width","height","_s","canvasRef","canvas","current","style","backgroundImage","backgroundSize","ctx","getContext","frontImage","Image","src","onload","drawImage","handleMouseMove","e","rect","getBoundingClientRect","x","clientX","left","y","clientY","top","globalCompositeOperation","beginPath","arc","Math","PI","fill","addEventListener","removeEventListener","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Spring Boot/workspacebranch/flirdog/src/main/webapp/src/components/login/join/ScratchCard.js"],"sourcesContent":["import React, { useRef, useEffect } from \"react\";\r\n\r\nconst ScratchCard = ({ frontImageSrc, backImageSrc, width, height }) => {\r\n  const canvasRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    canvas.style.backgroundImage = `url(${backImageSrc})`; // 뒷 배경 이미지 설정\r\n    canvas.style.backgroundSize = \"cover\";\r\n    const ctx = canvas.getContext(\"2d\");\r\n\r\n    // 전면 이미지 로드\r\n    const frontImage = new Image();\r\n    frontImage.src = frontImageSrc; // 전면 이미지 URL\r\n    frontImage.onload = () => {\r\n      ctx.drawImage(frontImage, 0, 0, canvas.width, canvas.height);\r\n    };\r\n\r\n    // 드래그 이벤트 핸들러\r\n    const handleMouseMove = (e) => {\r\n      const rect = canvas.getBoundingClientRect();\r\n      const x = e.clientX - rect.left;\r\n      const y = e.clientY - rect.top;\r\n      ctx.globalCompositeOperation = \"destination-out\";\r\n      ctx.beginPath();\r\n      ctx.arc(x, y, 20, 0, Math.PI * 2, false);\r\n      ctx.fill();\r\n    };\r\n\r\n    canvas.addEventListener(\"mousemove\", handleMouseMove);\r\n    return () => {\r\n      canvas.removeEventListener(\"mousemove\", handleMouseMove);\r\n    };\r\n  }, [frontImageSrc]);\r\n\r\n  return <canvas ref={canvasRef} width={width} height={height} />;\r\n};\r\n\r\nexport default ScratchCard;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,WAAW,GAAGA,CAAC;EAAEC,aAAa;EAAEC,YAAY;EAAEC,KAAK;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EACtE,MAAMC,SAAS,GAAGV,MAAM,CAAC,IAAI,CAAC;EAE9BC,SAAS,CAAC,MAAM;IACd,MAAMU,MAAM,GAAGD,SAAS,CAACE,OAAO;IAChCD,MAAM,CAACE,KAAK,CAACC,eAAe,GAAI,OAAMR,YAAa,GAAE,CAAC,CAAC;IACvDK,MAAM,CAACE,KAAK,CAACE,cAAc,GAAG,OAAO;IACrC,MAAMC,GAAG,GAAGL,MAAM,CAACM,UAAU,CAAC,IAAI,CAAC;;IAEnC;IACA,MAAMC,UAAU,GAAG,IAAIC,KAAK,CAAC,CAAC;IAC9BD,UAAU,CAACE,GAAG,GAAGf,aAAa,CAAC,CAAC;IAChCa,UAAU,CAACG,MAAM,GAAG,MAAM;MACxBL,GAAG,CAACM,SAAS,CAACJ,UAAU,EAAE,CAAC,EAAE,CAAC,EAAEP,MAAM,CAACJ,KAAK,EAAEI,MAAM,CAACH,MAAM,CAAC;IAC9D,CAAC;;IAED;IACA,MAAMe,eAAe,GAAIC,CAAC,IAAK;MAC7B,MAAMC,IAAI,GAAGd,MAAM,CAACe,qBAAqB,CAAC,CAAC;MAC3C,MAAMC,CAAC,GAAGH,CAAC,CAACI,OAAO,GAAGH,IAAI,CAACI,IAAI;MAC/B,MAAMC,CAAC,GAAGN,CAAC,CAACO,OAAO,GAAGN,IAAI,CAACO,GAAG;MAC9BhB,GAAG,CAACiB,wBAAwB,GAAG,iBAAiB;MAChDjB,GAAG,CAACkB,SAAS,CAAC,CAAC;MACflB,GAAG,CAACmB,GAAG,CAACR,CAAC,EAAEG,CAAC,EAAE,EAAE,EAAE,CAAC,EAAEM,IAAI,CAACC,EAAE,GAAG,CAAC,EAAE,KAAK,CAAC;MACxCrB,GAAG,CAACsB,IAAI,CAAC,CAAC;IACZ,CAAC;IAED3B,MAAM,CAAC4B,gBAAgB,CAAC,WAAW,EAAEhB,eAAe,CAAC;IACrD,OAAO,MAAM;MACXZ,MAAM,CAAC6B,mBAAmB,CAAC,WAAW,EAAEjB,eAAe,CAAC;IAC1D,CAAC;EACH,CAAC,EAAE,CAAClB,aAAa,CAAC,CAAC;EAEnB,oBAAOF,OAAA;IAAQsC,GAAG,EAAE/B,SAAU;IAACH,KAAK,EAAEA,KAAM;IAACC,MAAM,EAAEA;EAAO;IAAAkC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACjE,CAAC;AAACpC,EAAA,CAlCIL,WAAW;AAAA0C,EAAA,GAAX1C,WAAW;AAoCjB,eAAeA,WAAW;AAAC,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}