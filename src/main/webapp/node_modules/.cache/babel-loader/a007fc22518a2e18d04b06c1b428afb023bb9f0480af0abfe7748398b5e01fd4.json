{"ast":null,"code":"var _jsxFileName = \"C:\\\\Spring Boot\\\\workspacebranch\\\\flirdog\\\\src\\\\main\\\\webapp\\\\src\\\\components\\\\somoim\\\\Reactquill.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from 'react';\nimport ReactQuill from \"react-quill\";\n//import \"react-quill/dist/quill.snow.css\";\nimport '../../css/somoim/main/quill.snow.css';\nimport Quill from 'quill';\nimport ImageResize from '@looop/quill-image-resize-module-react';\n\n//Quill.register('modules/ImageResize', ImageResize);\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Reactquill = ({\n  onContentChange,\n  isDisable\n}) => {\n  _s();\n  const quillElement = useRef();\n  const [quillValue, setQuillValue] = useState(\"\");\n\n  //const handleQuillChange = (content, delta, source, editor) => {\n  const handleQuillChange = e => {\n    //setQuillValue(editor.getHTML()); // HTML 코드 가져오기\n    //const htmlContent = editor.getHTML();\n    //setQuillValue(editor.getContents());\n    //setQuillValue(content);\n    //onContentChange(quillValue); // HTML 코드를 부모 컴포넌트로 전달\n    setQuillValue(e);\n    onContentChange(quillValue);\n    console.log('상세정보: ' + quillValue);\n  };\n  const modules = {\n    toolbar: [\n    // [{ 'font': [] }],            \n    [{\n      'header': [1, 2, 3, false]\n    }], ['bold', 'italic', 'underline', 'strike', 'blockquote'], [{\n      'list': 'ordered'\n    }, {\n      'list': 'bullet'\n    }, {\n      'indent': '-1'\n    }, {\n      'indent': '+1'\n    }],\n    //['link','image'],\n    ['link'], [{\n      'align': []\n    }, {\n      'color': []\n    }, {\n      'background': []\n    }],\n    // dropdown with defaults from theme            \n    ['clean']]\n    //ImageResize: { modules: ['Resize'] },    \n  };\n  const formats = [\n  // 'font',        \n  'header', 'bold', 'italic', 'underline', 'strike', 'blockquote', 'list', 'bullet', 'indent', 'link', 'image',\n  //'image',\n  'align', 'color', 'background'];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      sx: {\n        \"  .ql-editor\": {\n          padding: \"30px\",\n          boxShadow: \"0 0 5px 0 rgba(0, 0, 0, 0.5)\",\n          margin: \"2px\",\n          width: \"100%\",\n          maxHeight: \"75vh\",\n          minHeight: \"75vh\",\n          backgroundColor: \"white\"\n        },\n        \"  .ql-container.ql-snow\": {\n          border: \"none\",\n          display: \"flex\",\n          justifyContent: \"center\"\n        }\n      },\n      ref: quillElement,\n      children: /*#__PURE__*/_jsxDEV(ReactQuill, {\n        className: \"form-control text-editor\",\n        theme: \"snow\",\n        modules: modules,\n        formats: formats,\n        value: quillValue || ''\n        //onChange = {() => handleQuillChange} \n        ,\n        onChange: handleQuillChange,\n        style: {\n          width: '100%',\n          height: '300px'\n        },\n        placeholder: \"\\uC18C\\uBAA8\\uC784\\uC5D0 \\uB300\\uD55C \\uC0C1\\uC138\\uC815\\uBCF4\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",\n        readOnly: isDisable\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(Reactquill, \"/65tgSiOr8rotQ1oXmCQt/B7g7g=\");\n_c = Reactquill;\nexport default Reactquill;\nvar _c;\n$RefreshReg$(_c, \"Reactquill\");","map":{"version":3,"names":["React","useRef","useState","ReactQuill","Quill","ImageResize","jsxDEV","_jsxDEV","Fragment","_Fragment","Reactquill","onContentChange","isDisable","_s","quillElement","quillValue","setQuillValue","handleQuillChange","e","console","log","modules","toolbar","formats","children","sx","padding","boxShadow","margin","width","maxHeight","minHeight","backgroundColor","border","display","justifyContent","ref","className","theme","value","onChange","style","height","placeholder","readOnly","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Spring Boot/workspacebranch/flirdog/src/main/webapp/src/components/somoim/Reactquill.js"],"sourcesContent":["import React, { useRef, useState } from 'react';\r\nimport ReactQuill from \"react-quill\";\r\n//import \"react-quill/dist/quill.snow.css\";\r\nimport '../../css/somoim/main/quill.snow.css';\r\nimport Quill from 'quill';\r\nimport ImageResize from '@looop/quill-image-resize-module-react';\r\n\r\n\r\n//Quill.register('modules/ImageResize', ImageResize);\r\n\r\nconst Reactquill = ({onContentChange, isDisable}) => {\r\n    const quillElement = useRef();\r\n\r\n    const [quillValue, setQuillValue] = useState(\"\");\r\n\r\n    //const handleQuillChange = (content, delta, source, editor) => {\r\n    const handleQuillChange = (e) => {\r\n        //setQuillValue(editor.getHTML()); // HTML 코드 가져오기\r\n        //const htmlContent = editor.getHTML();\r\n        //setQuillValue(editor.getContents());\r\n        //setQuillValue(content);\r\n        //onContentChange(quillValue); // HTML 코드를 부모 컴포넌트로 전달\r\n        setQuillValue(e);\r\n        onContentChange(quillValue); \r\n        console.log('상세정보: ' +  quillValue );\r\n    };\r\n\r\n    const modules = {        \r\n        toolbar: [            \r\n            // [{ 'font': [] }],            \r\n            [{ 'header': [1, 2, 3, false] }],            \r\n            ['bold', 'italic', 'underline','strike', 'blockquote'],            \r\n            [{'list': 'ordered'}, {'list': 'bullet'}, {'indent': '-1'}, {'indent': '+1'}],            \r\n            //['link','image'],\r\n            ['link'],                  \r\n            [{ 'align': [] }, { 'color': [] }, { 'background': [] }],  // dropdown with defaults from theme            \r\n            ['clean']        \r\n        ],        \r\n        //ImageResize: { modules: ['Resize'] },    \r\n    }        \r\n    \r\n    const formats = [        \r\n        // 'font',        \r\n        'header', \r\n        'bold', 'italic', 'underline', 'strike', 'blockquote', \r\n        'list', 'bullet','indent', \r\n        'link', 'image',\r\n        //'image',\r\n        'align', 'color', 'background'            \r\n    ]\r\n\r\n    return (\r\n        <>\r\n            <div\r\n                sx={{\r\n                    \"  .ql-editor\": {\r\n                      padding: \"30px\",\r\n                      boxShadow: \"0 0 5px 0 rgba(0, 0, 0, 0.5)\",\r\n                      margin: \"2px\",\r\n                      width: \"100%\",\r\n                      maxHeight: \"75vh\",\r\n                      minHeight: \"75vh\",\r\n                      backgroundColor: \"white\",\r\n                    },\r\n                    \"  .ql-container.ql-snow\": {\r\n                      border: \"none\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"center\",\r\n                    },\r\n                  }}\r\n                  ref={quillElement}\r\n            >\r\n                <ReactQuill                    \r\n                    className=\"form-control text-editor\"            \r\n                    theme = 'snow'            \r\n                    modules = {modules}            \r\n                    formats = {formats}            \r\n                    value = {quillValue || ''}       \r\n                    //onChange = {() => handleQuillChange} \r\n                    onChange={handleQuillChange}         \r\n                    style = {{ width: '100%', height: '300px' }}        \r\n                    placeholder='소모임에 대한 상세정보를 입력해주세요.'    \r\n                    readOnly={isDisable}        \r\n                />\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Reactquill;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}