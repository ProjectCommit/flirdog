{"ast":null,"code":"var _jsxFileName = \"C:\\\\Spring Boot\\\\workspacebranch\\\\flirdog\\\\src\\\\main\\\\webapp\\\\src\\\\components\\\\somoim\\\\detail\\\\ImageReply.js\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useContext, useEffect, useState } from 'react';\nimport { Button, Form, InputGroup } from 'react-bootstrap';\nimport { UserContext } from '../../../contexts/UserContext';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageReply = ({\n  onSubmitComment,\n  selectedPhotoInfo,\n  onUpdateComments\n}) => {\n  _s();\n  const [photoComment, setPhotoComment] = useState({\n    comment: '',\n    userId: '',\n    somoimId: '',\n    photoId: ''\n  });\n  //const [comment, setComment] = useState('');\n  const [comments, setComments] = useState([{}]);\n\n  // 해당 글 정보\n  const {\n    createdAt,\n    modifiedAt,\n    id,\n    photoTitle,\n    photoContent,\n    photoLink,\n    photoLike,\n    hit,\n    somoimPhoto,\n    somoim\n  } = selectedPhotoInfo || {};\n  console.log('사진첩 댓글 somoimId : ', somoim === null || somoim === void 0 ? void 0 : somoim.id);\n\n  // 해당 유저 정보\n  const {\n    user\n  } = useContext(UserContext); // 유저 컨텍스트\n  console.log('사진첩 댓글창에서 부르는 로그인 유저 아이디 : ' + (user ? user.id : 'User 정보 없음'));\n  useEffect(() => {\n    console.log('ImageReply - Selected Photo Info:', selectedPhotoInfo);\n    if (selectedPhotoInfo) {\n      setPhotoComment(prevComment => ({\n        ...prevComment,\n        userId: user === null || user === void 0 ? void 0 : user.id,\n        somoimId: somoim === null || somoim === void 0 ? void 0 : somoim.id,\n        photoId: id\n      }));\n    }\n  }, [selectedPhotoInfo, somoim === null || somoim === void 0 ? void 0 : somoim.id, id, user === null || user === void 0 ? void 0 : user.id]);\n  console.log('photoComment:', photoComment);\n\n  // 댓글목록 조회\n  const fetchComments = useCallback(async () => {\n    //const fetchComments = async () => {\n    try {\n      const response = await axios.get(`/somoim/somoimPhotoComments?photoId=${id}`);\n      setComments(response.data);\n      onUpdateComments(response.data);\n      console.log('댓글 불러온 목록 : ', response.data);\n    } catch (error) {\n      console.error('Error fetching comments:', error);\n    }\n    // };\n  }, [id, setComments]);\n  useEffect(() => {\n    // 최초 렌더링 시 댓글 목록을 가져옴\n    fetchComments();\n  }, [fetchComments]);\n\n  // 댓글 submit\n  const onSubmitPhotoComment = async () => {\n    if (window.confirm('댓글을 등록하시겠습니까?')) {\n      try {\n        const postData = {\n          comment: photoComment.comment,\n          userId: photoComment.userId,\n          somoimId: photoComment.somoimId,\n          photoId: photoComment.photoId\n        };\n        console.log('postData:', postData);\n        await axios.post('/somoim/somoimPhotoComment', postData).then(res => {\n          console.log('댓글이 등록되었습니다!');\n          // 댓글 등록 후 서버에서 최신 댓글 목록을 다시 받아옴\n          fetchComments();\n          onSubmitComment(photoComment.comment);\n          console.log('Submitted comment:', photoComment.comment);\n          setPhotoComment({\n            ...photoComment,\n            comment: '' // 댓글 입력 초기화\n          });\n        }).catch(e => console.log(e));\n      } catch (error) {\n        console.error('Error submitting comment:', error);\n      }\n    }\n  };\n\n  // 입력값이 변경될 때마다 콘솔에 출력\n  const handleCommentChange = e => {\n    const newComment = e.target.value;\n    console.log('Comment changed:', newComment);\n    setPhotoComment({\n      ...photoComment,\n      comment: newComment\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Form.Group, {\n    controlId: \"formFile\",\n    className: \"mb-3\",\n    children: /*#__PURE__*/_jsxDEV(InputGroup, {\n      className: \"mb-1\",\n      children: [/*#__PURE__*/_jsxDEV(InputGroup.Text, {\n        children: \"\\uB313\\uAE00 \\uC791\\uC131\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"text\",\n        placeholder: \"\\uC0C1\\uB300\\uB97C \\uBC30\\uB824\\uD558\\uB294 \\uB313\\uAE00\\uC744 \\uB2EC\\uC544\\uC8FC\\uC138\\uC694.\",\n        \"aria-label\": \"\\uC18C\\uBAA8\\uC784 \\uC0AC\\uC9C4\\uCCA9 \\uB313\\uAE00\\uB780\",\n        value: photoComment.comment // 입력된 댓글을 표시\n        ,\n        onChange: handleCommentChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outline-secondary\",\n        onClick: onSubmitPhotoComment,\n        children: \"\\uB4F1\\uB85D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 9\n  }, this);\n};\n_s(ImageReply, \"yhbdHHMYucZqSDdMklfzkKrdPcw=\");\n_c = ImageReply;\nexport default ImageReply;\nvar _c;\n$RefreshReg$(_c, \"ImageReply\");","map":{"version":3,"names":["React","useCallback","useContext","useEffect","useState","Button","Form","InputGroup","UserContext","axios","jsxDEV","_jsxDEV","ImageReply","onSubmitComment","selectedPhotoInfo","onUpdateComments","_s","photoComment","setPhotoComment","comment","userId","somoimId","photoId","comments","setComments","createdAt","modifiedAt","id","photoTitle","photoContent","photoLink","photoLike","hit","somoimPhoto","somoim","console","log","user","prevComment","fetchComments","response","get","data","error","onSubmitPhotoComment","window","confirm","postData","post","then","res","catch","e","handleCommentChange","newComment","target","value","Group","controlId","className","children","Text","fileName","_jsxFileName","lineNumber","columnNumber","Control","type","placeholder","onChange","variant","onClick","_c","$RefreshReg$"],"sources":["C:/Spring Boot/workspacebranch/flirdog/src/main/webapp/src/components/somoim/detail/ImageReply.js"],"sourcesContent":["import React, { useCallback, useContext, useEffect, useState } from 'react';\r\nimport { Button, Form, InputGroup } from 'react-bootstrap';\r\nimport { UserContext } from '../../../contexts/UserContext';\r\nimport axios from 'axios';\r\n\r\nconst ImageReply = ({ onSubmitComment, selectedPhotoInfo, onUpdateComments  }) => {\r\n    const [photoComment, setPhotoComment] = useState({\r\n        comment: '',\r\n        userId: '',\r\n        somoimId: '',\r\n        photoId: '',\r\n    });\r\n    //const [comment, setComment] = useState('');\r\n    const [comments, setComments] = useState([{}]);\r\n\r\n    // 해당 글 정보\r\n    const { createdAt, modifiedAt, id, photoTitle, photoContent, \r\n        photoLink, photoLike, hit, somoimPhoto, somoim } = selectedPhotoInfo || {};\r\n    console.log('사진첩 댓글 somoimId : ', somoim?.id);\r\n    \r\n    // 해당 유저 정보\r\n    const { user } = useContext(UserContext); // 유저 컨텍스트\r\n    console.log('사진첩 댓글창에서 부르는 로그인 유저 아이디 : ' + (user ? user.id : 'User 정보 없음'));\r\n\r\n    useEffect(() => {\r\n        console.log('ImageReply - Selected Photo Info:', selectedPhotoInfo);\r\n        if (selectedPhotoInfo) {\r\n            setPhotoComment(prevComment => ({\r\n                ...prevComment,\r\n                userId: user?.id,\r\n                somoimId: somoim?.id,\r\n                photoId: id,\r\n            }));\r\n        }\r\n    }, [selectedPhotoInfo, somoim?.id, id, user?.id]);\r\n\r\n    console.log('photoComment:', photoComment);\r\n\r\n    \r\n    // 댓글목록 조회\r\n    const fetchComments = useCallback(async () => {\r\n    //const fetchComments = async () => {\r\n        try {\r\n            const response = await axios.get(`/somoim/somoimPhotoComments?photoId=${id}`);\r\n            setComments(response.data);\r\n            onUpdateComments(response.data);\r\n            console.log('댓글 불러온 목록 : ', response.data)\r\n        } catch (error) {\r\n            console.error('Error fetching comments:', error);\r\n        }\r\n   // };\r\n}, [id, setComments]);\r\n\r\n    useEffect(() => {\r\n        // 최초 렌더링 시 댓글 목록을 가져옴\r\n        fetchComments();\r\n    }, [fetchComments]);\r\n\r\n\r\n    // 댓글 submit\r\n    const onSubmitPhotoComment = async () => {\r\n        if(window.confirm('댓글을 등록하시겠습니까?')) {\r\n            try {\r\n                const postData = {\r\n                    comment: photoComment.comment,\r\n                    userId: photoComment.userId,\r\n                    somoimId: photoComment.somoimId,\r\n                    photoId: photoComment.photoId,\r\n                };\r\n                console.log('postData:', postData);\r\n    \r\n                await axios.post('/somoim/somoimPhotoComment', postData)\r\n                .then(res => {\r\n                    console.log('댓글이 등록되었습니다!')\r\n                    // 댓글 등록 후 서버에서 최신 댓글 목록을 다시 받아옴\r\n                    fetchComments();\r\n                    onSubmitComment(photoComment.comment);\r\n            \r\n                    console.log('Submitted comment:', photoComment.comment);\r\n            \r\n                    setPhotoComment({\r\n                        ...photoComment,\r\n                        comment: '', // 댓글 입력 초기화\r\n                    });\r\n                })\r\n                .catch(e => console.log(e))\r\n            } catch (error) {\r\n                console.error('Error submitting comment:', error);\r\n            }\r\n        }\r\n    };\r\n\r\n    // 입력값이 변경될 때마다 콘솔에 출력\r\n    const handleCommentChange = (e) => {\r\n        const newComment = e.target.value;\r\n        console.log('Comment changed:', newComment);\r\n        setPhotoComment({\r\n            ...photoComment,\r\n            comment: newComment,\r\n        });\r\n    };\r\n\r\n    return (\r\n        <Form.Group controlId=\"formFile\" className=\"mb-3\">\r\n            <InputGroup className=\"mb-1\">\r\n                <InputGroup.Text>댓글 작성</InputGroup.Text>\r\n                <Form.Control type=\"text\" \r\n                    placeholder=\"상대를 배려하는 댓글을 달아주세요.\"\r\n                    aria-label=\"소모임 사진첩 댓글란\" \r\n                    value={photoComment.comment} // 입력된 댓글을 표시\r\n                    onChange={handleCommentChange}\r\n                    />\r\n                <Button variant=\"outline-secondary\" onClick={onSubmitPhotoComment}>등록</Button>\r\n            </InputGroup>\r\n        </Form.Group>\r\n    );\r\n};\r\n\r\nexport default ImageReply;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}