{"ast":null,"code":"var _jsxFileName = \"C:\\\\Spring Boot\\\\workspacebranch\\\\flirdog\\\\src\\\\main\\\\webapp\\\\src\\\\contexts\\\\UserContext.js\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { createContext, useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Swal from \"sweetalert2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserContext = /*#__PURE__*/createContext();\nconst UserProvider = ({\n  children\n}) => {\n  _s();\n  // const [user, setUser] = useState({\n  //   id: \"\",\n  //   email: \"\",\n  //   passwd: \"\",\n  //   name: \"\",\n  //   nickname: \"\",\n  //   communityScore: \"\",\n  //   point: \"\",\n  //   createdAt: \"\",\n  //   modifiedAt: \"\",\n  //   userRole: \"\",\n  // });\n  const [user, setUser] = useState({});\n  const navigate = useNavigate();\n\n  // 임시방편으로 로컬 스토리지에 로그인 정보를 저장하고, 그 정보를 가져옴\n  useEffect(() => {\n    const storedUser = localStorage.getItem(\"user\");\n    if (storedUser) {\n      try {\n        const parsedUser = JSON.parse(storedUser);\n\n        // JSON.parse가 정상적으로 되었을 때만 setUser 호출\n        if (parsedUser && parsedUser.id) {\n          setUser(parsedUser);\n        } else if (parsedUser.user && parsedUser.user.id) {\n          setUser(parsedUser.user);\n        }\n      } catch (error) {\n        console.error(\"Error parsing stored user data:\", error);\n      }\n    }\n\n    // if (storedUser) {\n    //   setUser(JSON.parse(storedUser));\n    // }\n  }, []);\n  const login = userData => {\n    axios.post(\"http://localhost:8080/access/login\", null, {\n      params: {\n        email: userData.email,\n        passwd: userData.passwd\n      }\n    }).then(res => {\n      setUser(res.data);\n      console.log(\"localStorage\");\n      console.log(res.data);\n      localStorage.setItem(\"user\", JSON.stringify(res.data));\n      localStorage.setItem(\"address\", JSON.stringify(res.data));\n      navigate(\"/\");\n      console.log(\"user\");\n      console.log(user);\n    }).catch(e => {\n      //swal로 로그인실패\n      Swal.fire({\n        icon: \"error\",\n        title: \"이메일과 비밀번호를 확인해주세요.\",\n        showConfirmButton: false,\n        timer: 700\n      });\n      console.log(e);\n    });\n  };\n  const logout = () => {\n    if (window.confirm(\"정말 로그아웃하시겠습니까?\")) {\n      localStorage.removeItem(\"user\");\n      setUser({});\n      alert(\"로그아웃 되었습니다.\");\n      window.location.reload();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      user,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n_s(UserProvider, \"CS/+sbWrftxgoO6YIJIYUuaOh2A=\", false, function () {\n  return [useNavigate];\n});\n_c = UserProvider;\nexport default UserProvider;\nvar _c;\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"names":["axios","createContext","useEffect","useState","useNavigate","Swal","jsxDEV","_jsxDEV","UserContext","UserProvider","children","_s","user","setUser","navigate","storedUser","localStorage","getItem","parsedUser","JSON","parse","id","error","console","login","userData","post","params","email","passwd","then","res","data","log","setItem","stringify","catch","e","fire","icon","title","showConfirmButton","timer","logout","window","confirm","removeItem","alert","location","reload","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Spring Boot/workspacebranch/flirdog/src/main/webapp/src/contexts/UserContext.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { createContext, useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nexport const UserContext = createContext();\r\n\r\nconst UserProvider = ({ children }) => {\r\n  // const [user, setUser] = useState({\r\n  //   id: \"\",\r\n  //   email: \"\",\r\n  //   passwd: \"\",\r\n  //   name: \"\",\r\n  //   nickname: \"\",\r\n  //   communityScore: \"\",\r\n  //   point: \"\",\r\n  //   createdAt: \"\",\r\n  //   modifiedAt: \"\",\r\n  //   userRole: \"\",\r\n  // });\r\n  const [user, setUser] = useState({});\r\n  const navigate = useNavigate();\r\n\r\n  // 임시방편으로 로컬 스토리지에 로그인 정보를 저장하고, 그 정보를 가져옴\r\n  useEffect(() => {\r\n    const storedUser = localStorage.getItem(\"user\");\r\n\r\n    if (storedUser) {\r\n      try {\r\n        const parsedUser = JSON.parse(storedUser);\r\n\r\n        // JSON.parse가 정상적으로 되었을 때만 setUser 호출\r\n        if (parsedUser && parsedUser.id) {\r\n          setUser(parsedUser);\r\n        }else if(parsedUser.user && parsedUser.user.id){\r\n          setUser(parsedUser.user);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error parsing stored user data:\", error);\r\n      }\r\n    }\r\n\r\n    // if (storedUser) {\r\n    //   setUser(JSON.parse(storedUser));\r\n    // }\r\n  }, []);\r\n\r\n  const login = (userData) => {\r\n    axios\r\n      .post(\"http://localhost:8080/access/login\", null, {\r\n        params: {\r\n          email: userData.email,\r\n          passwd: userData.passwd,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        setUser(res.data);\r\n        console.log(\"localStorage\");\r\n        console.log(res.data);\r\n        localStorage.setItem(\"user\", JSON.stringify(res.data));\r\n        localStorage.setItem(\"address\", JSON.stringify(res.data));\r\n\r\n        navigate(\"/\");\r\n        console.log(\"user\");\r\n        console.log(user);\r\n      })\r\n      .catch((e) => {\r\n        //swal로 로그인실패\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"이메일과 비밀번호를 확인해주세요.\",\r\n          showConfirmButton: false,\r\n          timer: 700,\r\n        });\r\n\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  const logout = () => {\r\n    if (window.confirm(\"정말 로그아웃하시겠습니까?\")) {\r\n      localStorage.removeItem(\"user\");\r\n      setUser({});\r\n      alert(\"로그아웃 되었습니다.\");\r\n      window.location.reload();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <UserContext.Provider value={{ user, login, logout }}>\r\n      {children}\r\n    </UserContext.Provider>\r\n  );\r\n};\r\n\r\nexport default UserProvider;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}