{"ast":null,"code":"var _jsxFileName = \"C:\\\\Spring Boot\\\\workspacebranch\\\\flirdog\\\\src\\\\main\\\\webapp\\\\src\\\\components\\\\main\\\\MainBody.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Container from \"react-bootstrap/esm/Container\";\nimport NavigateBtn from \"./NavigateBtn\";\nimport MainScreen from \"./1메인화면/MainScreen\";\nimport BestFlirdog from \"./2베스트플러독/BestFlirdog\";\nimport SmallGroupMain from \"./3강아지소모임/SmallGroupMain\";\nimport CommunityMain from \"./4커뮤니티/CommunityMain\";\nimport BestProductMain from \"./5인기상품/BestProductMain\";\nimport axios from \"axios\";\nimport Chatting from \"../Chatting\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MainBody = () => {\n  _s();\n  const [userInfoArray, setUserInfoArray] = React.useState([]);\n  const [dogsInfoArray, setDogsInfoArray] = React.useState([]);\n  const [selectedCategory, setSelectedCategory] = useState(\"전국 랭킹\");\n  const [selectedLocation, setSelectedLocation] = useState(\"지역 선택\");\n  const [isOpenChatting, setIsOpenChatting] = useState(false);\n  const [selectedRadio, setSelectedRadio] = useState(\"미모 점수 높은 순\");\n  const navigate = useNavigate();\n  const openChatting = e => {\n    if (localStorage.getItem(\"user\") === null) {\n      alert(\"로그인 후 이용해주세요.\");\n      navigate(\"/login\");\n      return;\n    }\n    setIsOpenChatting(!isOpenChatting);\n    // 카카오 로그인으로 진행했을 때\n    const userIdLocal = localStorage.getItem(\"user\");\n    const userIdParsing = JSON.parse(userIdLocal);\n    let userId = userIdParsing.id;\n    if (userId === undefined) {\n      // 만약 일반적인 로그인으로 진행했다면 ??\n      userId = userIdParsing.user.id;\n    }\n    if (userId === null) {\n      alert(\"로그인 후 이용해주세요.\");\n      navigate(\"/login\");\n      return;\n    }\n    const otherUserId = e.currentTarget.id;\n    alert(\"내 아이디: \" + userId);\n    alert(\"상대 개의 아이디: \" + otherUserId);\n    axios.post(\"http://localhost:8080/message/createRoom\", null, {\n      params: {\n        userIds: `${userId},${otherUserId}`,\n        name: `1:1채팅방${userId}${otherUserId}`\n      }\n    }).then(res => {\n      alert(\"채팅방 생성 성공! res.data: \" + res.data);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  //서버에서 userInfoArray를 가져온다.(communityScore가 높은 순으로 3개)\n  //userInfoArray.map으로, 1등 2등 3등의 id를 통해 dogsInfoArray(첫번째값만)를 가져온다.\n  //각각의 dogsInfoArray의 값들을 BestFlirdogImg에 넣어준다.\n  //BestFlirdogImg에는 text로 communityScore를 넣어준다.\n  const fetchData = async () => {\n    try {\n      if (selectedRadio === \"커뮤니티 점수 높은 순\") {\n        let url = \"http://localhost:8080/access/getUserInfoArray\";\n        const res1 = await axios.post(url);\n        setUserInfoArray(res1.data);\n        console.log(\"전체 유저데이터\");\n        console.log(res1.data);\n        const dogsInfoPromises = res1.data.map(item => axios.post(\"http://localhost:8080/access/getDogsInfoArray\", null, {\n          params: {\n            userId: item.id\n          }\n        }));\n        const dogsInfoResults = await Promise.all(dogsInfoPromises);\n        const combinedDogsInfo = dogsInfoResults.map(res => res.data);\n        setDogsInfoArray(combinedDogsInfo.flat());\n        console.log(\"전체 개데이터\");\n        console.log(combinedDogsInfo.flat());\n      } else {\n        const res1 = await axios.post(\"http://localhost:8080/access/getDogsInfoArrayByBeautyScore\");\n        console.log(\"미모점수 높은 순 강아지데이터\");\n        console.log(res1.data);\n        const topThreeDogsData = res1.data.slice(0, 3);\n        setDogsInfoArray(topThreeDogsData);\n        const topThreeUsersData = topThreeDogsData.map(dog => dog.user);\n        setUserInfoArray(topThreeUsersData);\n        console.log(\"Top 3 Users Info:\");\n        console.log(topThreeUsersData);\n      }\n    } catch (error) {\n      console.log(\"error: \" + error);\n    }\n  };\n  const fetchDataLocal = async location => {\n    if (selectedRadio === \"커뮤니티 점수 높은 순\") {\n      try {\n        let url = \"http://localhost:8080/access/getUserInfoArrayLocation\";\n        const res1 = await axios.post(url, null, {\n          params: {\n            location: location\n          }\n        });\n        setUserInfoArray(res1.data);\n        console.log(\"로컬 유저데이터\" + res1.data);\n        const dogsInfoPromises = res1.data.map(item => axios.post(\"http://localhost:8080/access/getDogsInfoArray\", null, {\n          params: {\n            userId: item.id\n          }\n        }));\n        const dogsInfoResults = await Promise.all(dogsInfoPromises);\n        const combinedDogsInfo = dogsInfoResults.map(res => res.data);\n        setDogsInfoArray(combinedDogsInfo.flat());\n        console.log(\"로컬 개데이터\" + combinedDogsInfo.flat());\n      } catch (error) {\n        console.log(\"error: \" + error);\n      }\n    } else {\n      const url = `http://localhost:8080/access/getDogsInfoByLocationAndBeautyScore?location=${encodeURIComponent(location)}`;\n      const res1 = await axios.get(url);\n      console.log(\"미모 점수 높은 순 강아지데이터\");\n      console.log(res1.data);\n\n      // 강아지 정보 저장\n      const dogsInfo = res1.data.slice(0, 3); // 0, 1, 2번째 강아지 정보만 저장\n      setDogsInfoArray(dogsInfo);\n      console.log(\"강아지데이터 저장\");\n      console.log(dogsInfo);\n\n      // 유저 정보 추출 및 저장\n      const userInfo = dogsInfo.map(dog => dog.user); // 각 강아지 정보에서 유저 정보 추출\n      setUserInfoArray(userInfo);\n      console.log(\"유저데이터 저장\");\n      console.log(userInfo);\n    }\n  };\n  useEffect(() => {\n    if (selectedCategory === \"전국 랭킹\") {\n      fetchData();\n    } else if (selectedCategory === \"지역 랭킹\" && selectedLocation !== \"지역 선택\" && selectedLocation !== \"\" && selectedLocation !== \"전체\") {\n      fetchDataLocal(selectedLocation);\n    }\n  }, [selectedCategory, selectedLocation, selectedRadio]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Chatting, {\n      isOpenChatting: isOpenChatting\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MainScreen, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      className: \"px-10\",\n      children: /*#__PURE__*/_jsxDEV(BestFlirdog, {\n        userInfoArray: userInfoArray,\n        dogsInfoArray: dogsInfoArray,\n        selectedCategory: selectedCategory,\n        setSelectedCategory: setSelectedCategory,\n        selectedLocation: selectedLocation,\n        setSelectedLocation: setSelectedLocation,\n        openChatting: openChatting,\n        selectedRadio: selectedRadio,\n        setSelectedRadio: setSelectedRadio\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SmallGroupMain, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CommunityMain, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      className: \"px-10\",\n      children: [/*#__PURE__*/_jsxDEV(BestProductMain, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-7 d-flex justify-content-center align-items-center\",\n        children: /*#__PURE__*/_jsxDEV(NavigateBtn, {\n          text: \"\\uC1FC\\uD551\\uBAB0 \\uC774\\uB3D9\",\n          url: \"/product\",\n          fontSize: \"2.5vw\",\n          btnWidth: \"25vw\",\n          btnHeight: \"80px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(MainBody, \"VIl0Wt528XaLjPguRfey1TQn9O4=\", false, function () {\n  return [useNavigate];\n});\n_c = MainBody;\nexport default MainBody;\nvar _c;\n$RefreshReg$(_c, \"MainBody\");","map":{"version":3,"names":["React","useState","useEffect","Container","NavigateBtn","MainScreen","BestFlirdog","SmallGroupMain","CommunityMain","BestProductMain","axios","Chatting","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","MainBody","_s","userInfoArray","setUserInfoArray","dogsInfoArray","setDogsInfoArray","selectedCategory","setSelectedCategory","selectedLocation","setSelectedLocation","isOpenChatting","setIsOpenChatting","selectedRadio","setSelectedRadio","navigate","openChatting","e","localStorage","getItem","alert","userIdLocal","userIdParsing","JSON","parse","userId","id","undefined","user","otherUserId","currentTarget","post","params","userIds","name","then","res","data","catch","error","console","log","fetchData","url","res1","dogsInfoPromises","map","item","dogsInfoResults","Promise","all","combinedDogsInfo","flat","topThreeDogsData","slice","topThreeUsersData","dog","fetchDataLocal","location","encodeURIComponent","get","dogsInfo","userInfo","children","fileName","_jsxFileName","lineNumber","columnNumber","className","text","fontSize","btnWidth","btnHeight","_c","$RefreshReg$"],"sources":["C:/Spring Boot/workspacebranch/flirdog/src/main/webapp/src/components/main/MainBody.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Container from \"react-bootstrap/esm/Container\";\r\nimport NavigateBtn from \"./NavigateBtn\";\r\nimport MainScreen from \"./1메인화면/MainScreen\";\r\nimport BestFlirdog from \"./2베스트플러독/BestFlirdog\";\r\nimport SmallGroupMain from \"./3강아지소모임/SmallGroupMain\";\r\nimport CommunityMain from \"./4커뮤니티/CommunityMain\";\r\nimport BestProductMain from \"./5인기상품/BestProductMain\";\r\n\r\nimport axios from \"axios\";\r\nimport Chatting from \"../Chatting\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst MainBody = () => {\r\n  const [userInfoArray, setUserInfoArray] = React.useState([]);\r\n  const [dogsInfoArray, setDogsInfoArray] = React.useState([]);\r\n  const [selectedCategory, setSelectedCategory] = useState(\"전국 랭킹\");\r\n  const [selectedLocation, setSelectedLocation] = useState(\"지역 선택\");\r\n  const [isOpenChatting, setIsOpenChatting] = useState(false);\r\n\r\n  const [selectedRadio, setSelectedRadio] = useState(\"미모 점수 높은 순\");\r\n  const navigate = useNavigate();\r\n\r\n  const openChatting = (e) => {\r\n    if (localStorage.getItem(\"user\") === null) {\r\n      alert(\"로그인 후 이용해주세요.\");\r\n      navigate(\"/login\");\r\n      return;\r\n    }\r\n    setIsOpenChatting(!isOpenChatting);\r\n    // 카카오 로그인으로 진행했을 때\r\n    const userIdLocal = localStorage.getItem(\"user\");\r\n    const userIdParsing = JSON.parse(userIdLocal);\r\n    let userId = userIdParsing.id;\r\n\r\n    if (userId === undefined) {\r\n      // 만약 일반적인 로그인으로 진행했다면 ??\r\n      userId = userIdParsing.user.id;\r\n    }\r\n\r\n    if (userId === null) {\r\n      alert(\"로그인 후 이용해주세요.\");\r\n      navigate(\"/login\");\r\n      return;\r\n    }\r\n\r\n    const otherUserId = e.currentTarget.id;\r\n    alert(\"내 아이디: \" + userId);\r\n    alert(\"상대 개의 아이디: \" + otherUserId);\r\n\r\n    axios\r\n      .post(\"http://localhost:8080/message/createRoom\", null, {\r\n        params: {\r\n          userIds: `${userId},${otherUserId}`,\r\n          name: `1:1채팅방${userId}${otherUserId}`,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        alert(\"채팅방 생성 성공! res.data: \" + res.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  //서버에서 userInfoArray를 가져온다.(communityScore가 높은 순으로 3개)\r\n  //userInfoArray.map으로, 1등 2등 3등의 id를 통해 dogsInfoArray(첫번째값만)를 가져온다.\r\n  //각각의 dogsInfoArray의 값들을 BestFlirdogImg에 넣어준다.\r\n  //BestFlirdogImg에는 text로 communityScore를 넣어준다.\r\n  const fetchData = async () => {\r\n    try {\r\n      if (selectedRadio === \"커뮤니티 점수 높은 순\") {\r\n        let url = \"http://localhost:8080/access/getUserInfoArray\";\r\n        const res1 = await axios.post(url);\r\n        setUserInfoArray(res1.data);\r\n        console.log(\"전체 유저데이터\");\r\n        console.log(res1.data);\r\n\r\n        const dogsInfoPromises = res1.data.map((item) =>\r\n          axios.post(\"http://localhost:8080/access/getDogsInfoArray\", null, {\r\n            params: {\r\n              userId: item.id,\r\n            },\r\n          })\r\n        );\r\n        const dogsInfoResults = await Promise.all(dogsInfoPromises);\r\n        const combinedDogsInfo = dogsInfoResults.map((res) => res.data);\r\n        setDogsInfoArray(combinedDogsInfo.flat());\r\n        console.log(\"전체 개데이터\");\r\n        console.log(combinedDogsInfo.flat());\r\n      } else {\r\n        const res1 = await axios.post(\r\n          \"http://localhost:8080/access/getDogsInfoArrayByBeautyScore\"\r\n        );\r\n\r\n        console.log(\"미모점수 높은 순 강아지데이터\");\r\n        console.log(res1.data);\r\n        const topThreeDogsData = res1.data.slice(0, 3);\r\n        setDogsInfoArray(topThreeDogsData);\r\n\r\n        const topThreeUsersData = topThreeDogsData.map((dog) => dog.user);\r\n        setUserInfoArray(topThreeUsersData);\r\n\r\n        console.log(\"Top 3 Users Info:\");\r\n        console.log(topThreeUsersData);\r\n      }\r\n    } catch (error) {\r\n      console.log(\"error: \" + error);\r\n    }\r\n  };\r\n\r\n  const fetchDataLocal = async (location) => {\r\n    if (selectedRadio === \"커뮤니티 점수 높은 순\") {\r\n      try {\r\n        let url = \"http://localhost:8080/access/getUserInfoArrayLocation\";\r\n\r\n        const res1 = await axios.post(url, null, {\r\n          params: { location: location },\r\n        });\r\n        setUserInfoArray(res1.data);\r\n        console.log(\"로컬 유저데이터\" + res1.data);\r\n\r\n        const dogsInfoPromises = res1.data.map((item) =>\r\n          axios.post(\"http://localhost:8080/access/getDogsInfoArray\", null, {\r\n            params: {\r\n              userId: item.id,\r\n            },\r\n          })\r\n        );\r\n\r\n        const dogsInfoResults = await Promise.all(dogsInfoPromises);\r\n        const combinedDogsInfo = dogsInfoResults.map((res) => res.data);\r\n        setDogsInfoArray(combinedDogsInfo.flat());\r\n        console.log(\"로컬 개데이터\" + combinedDogsInfo.flat());\r\n      } catch (error) {\r\n        console.log(\"error: \" + error);\r\n      }\r\n    } else {\r\n      const url = `http://localhost:8080/access/getDogsInfoByLocationAndBeautyScore?location=${encodeURIComponent(\r\n        location\r\n      )}`;\r\n      const res1 = await axios.get(url);\r\n      console.log(\"미모 점수 높은 순 강아지데이터\");\r\n      console.log(res1.data);\r\n\r\n      // 강아지 정보 저장\r\n      const dogsInfo = res1.data.slice(0, 3); // 0, 1, 2번째 강아지 정보만 저장\r\n      setDogsInfoArray(dogsInfo);\r\n      console.log(\"강아지데이터 저장\");\r\n      console.log(dogsInfo);\r\n\r\n      // 유저 정보 추출 및 저장\r\n      const userInfo = dogsInfo.map((dog) => dog.user); // 각 강아지 정보에서 유저 정보 추출\r\n      setUserInfoArray(userInfo);\r\n      console.log(\"유저데이터 저장\");\r\n      console.log(userInfo);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    if (selectedCategory === \"전국 랭킹\") {\r\n      fetchData();\r\n    } else if (\r\n      selectedCategory === \"지역 랭킹\" &&\r\n      selectedLocation !== \"지역 선택\" &&\r\n      selectedLocation !== \"\" &&\r\n      selectedLocation !== \"전체\"\r\n    ) {\r\n      fetchDataLocal(selectedLocation);\r\n    }\r\n  }, [selectedCategory, selectedLocation, selectedRadio]);\r\n\r\n  return (\r\n    <>\r\n      <Chatting isOpenChatting={isOpenChatting}></Chatting>\r\n\r\n      <MainScreen></MainScreen>\r\n\r\n      <Container className=\"px-10\">\r\n        <BestFlirdog\r\n          userInfoArray={userInfoArray}\r\n          dogsInfoArray={dogsInfoArray}\r\n          selectedCategory={selectedCategory}\r\n          setSelectedCategory={setSelectedCategory}\r\n          selectedLocation={selectedLocation}\r\n          setSelectedLocation={setSelectedLocation}\r\n          openChatting={openChatting}\r\n          selectedRadio={selectedRadio}\r\n          setSelectedRadio={setSelectedRadio}\r\n        />\r\n      </Container>\r\n      <SmallGroupMain></SmallGroupMain>\r\n      <CommunityMain></CommunityMain>\r\n      <Container className=\"px-10\">\r\n        <BestProductMain></BestProductMain>\r\n\r\n        <div className=\"mt-7 d-flex justify-content-center align-items-center\">\r\n          <NavigateBtn\r\n            text=\"쇼핑몰 이동\"\r\n            url=\"/product\"\r\n            fontSize=\"2.5vw\"\r\n            btnWidth=\"25vw\"\r\n            btnHeight=\"80px\"\r\n          ></NavigateBtn>\r\n        </div>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MainBody;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}