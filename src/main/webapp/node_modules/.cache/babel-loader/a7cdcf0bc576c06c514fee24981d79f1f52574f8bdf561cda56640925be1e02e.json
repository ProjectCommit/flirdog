{"ast":null,"code":"var _jsxFileName = \"C:\\\\Spring Boot\\\\workspacebranch\\\\flirdog\\\\src\\\\main\\\\webapp\\\\src\\\\components\\\\somoim\\\\detail\\\\SomoimDetailPhoto.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { MasonryInfiniteGrid } from \"@egjs/react-infinitegrid\";\nimport { Button, Container, Modal } from 'react-bootstrap';\nimport styles from '../../../css/somoim/detail/SomoimPhotoModal_style.module.css';\nimport ImageModal from './ImageModal';\nimport axios from 'axios';\nimport ImageDetail from './ImageDetail';\nimport { useLocation } from 'react-router-dom';\n// import Pin from './Pin';\n// import Modal from './Modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst getItems = (nextGroupKey, count) => {\n  const nextItems = [];\n  const nextKey = nextGroupKey * count;\n  for (let i = 0; i < count; ++i) {\n    nextItems.push({\n      groupKey: nextGroupKey,\n      key: nextKey + i\n    });\n  }\n  return nextItems;\n};\nconst SomoimDetailPhoto = ({\n  somoimId,\n  user,\n  isAdmin\n}) => {\n  _s();\n  // const updateItems = (newItem) => { // imageModal을 통한 아이템 상태 업데이트\n  //     setItems([...items, newItem]);\n  // }\n  const [admin, setAdmin] = useState();\n  const [somoimNum, setSomoimNum] = useState();\n  const [items, setItems] = useState(() => getItems(0, 10));\n  const [loading, setLoading] = useState(false); // 로딩 상태를 추적합니다.\n\n  const [hasMoreImages, setHasMoreImages] = useState(true); // 이미지가 더 이상 없을 때 더 이상 요청하지 않도록 하는 state\n  const [somoimPhotoList, setSomoimPhotoList] = useState([{}]); // 전체 소모임 목록\n  const [firstPhotoArray, setFirstPhotoArray] = useState([]); // 첫번째 이미지만 추출한 배열\n  const {\n    createdAt,\n    modifiedAt,\n    id,\n    photoTitle,\n    photoContent,\n    photoLink,\n    photoLike,\n    hit,\n    somoimPhoto,\n    somoim\n  } = somoimPhotoList;\n  const imageModalRef = useRef(); // 이미지 업로드를 위한 useRef\n\n  useEffect(() => {\n    console.log('소모임 사진첩에서 부르는 로그인 유저 아이디 :' + (user && user.id ? user.id : 'User 정보 없음'));\n    console.log('소모임 사진첩에서 부르는 소모임 아이디 :' + somoimId);\n  }, [somoimId]);\n  const igRef = useRef();\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  //const handleShow = () => setShow(true);\n  const handleShow = () => {\n    // 소모임 가입 여부를 확인\n    if (isAdmin === 2) {\n      alert(\"소모임에 먼저 가입하세요.\");\n      return;\n    }\n\n    // 가입되어 있다면 모달을 열기\n    setShow(true);\n  };\n  // 상세보기 구현\n  const [showModal, setShowModal] = useState(false);\n  const [selectedPhotoInfo, setSelectedPhotoInfo] = useState({});\n  const handleModalOpen = (num, isAdmin, somoimId) => {\n    const selectedPhoto = somoimPhotoList[num];\n    setSelectedPhotoInfo(selectedPhoto);\n    setShowImageDetail(true); // 이미지 상세 모달 열기\n    setAdmin(isAdmin);\n    setSomoimNum(somoimId);\n  };\n  const [showImageDetail, setShowImageDetail] = useState(false);\n  const [clickedPhotoIndex, setClickedPhotoIndex] = useState({});\n  const handleImageClick = num => {\n    const clickedPhoto = somoimPhotoList[num];\n    setSelectedPhotoInfo(clickedPhoto); // 이미지 클릭 시 선택된 정보 설정\n    setShowImageDetail(true);\n    setShowModal(false); // 이미지 클릭 시 상세보기 모달은 닫히도록 설정\n  };\n\n  // SomoimDetailPhoto 컴포넌트 내에서 이미지 정보 추출\n  const {\n    search\n  } = useLocation();\n  const params = new URLSearchParams(search);\n  const photoId = params.get('photoId');\n\n  // 선택된 이미지 정보 저장\n  useEffect(() => {\n    if (!photoId || !somoimPhotoList) {\n      return; // photoIndex가 없거나 somoimPhotoList가 없으면 종료\n    }\n    const selectedPhoto = somoimPhotoList.find(photo => photo.id === parseInt(photoId, 10));\n    if (selectedPhoto) {\n      setSelectedPhotoInfo(selectedPhoto);\n      setShowImageDetail(true);\n      setAdmin(isAdmin);\n      setSomoimNum(somoimId);\n    }\n  }, [photoId, somoimPhotoList]);\n\n  // 각 게시글의 첫번째 사진만 추출\n  useEffect(() => {\n    console.log(igRef.current.getItems());\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(`/somoim/somoimPhotoList?id=${somoimId}`);\n        console.log('해당 소모임 사진첩 목록 : ', response.data);\n        setSomoimPhotoList(response.data);\n        const newFirstPhotoArray = [];\n        if (Array.isArray(response.data) && response.data.length > 0) {\n          response.data.forEach(item => {\n            if (item.somoimPhoto) {\n              const photoArray = item.somoimPhoto.replace(/\"/g, '').split(',');\n\n              // 각 항목에 대해 첫 번째 사진 선택\n              if (photoArray.length > 0) {\n                const firstPhoto = photoArray[0];\n                newFirstPhotoArray.push(firstPhoto);\n              } else {\n                console.log('somoimPhotoList is not a valid array');\n              }\n            } else {\n              console.log('somoimPhotoList is not available');\n            }\n          });\n          setFirstPhotoArray(newFirstPhotoArray);\n\n          // 이미지 개수가 10개 미만이면 추가 요청 중지\n          if (newFirstPhotoArray.length < 10) {\n            setHasMoreImages(false);\n          }\n        } else {\n          console.log('somoimPhotoList is not a valid array or is empty');\n          setHasMoreImages(false);\n        }\n      } catch (error) {\n        console.error(error);\n        setHasMoreImages(false);\n      }\n    };\n    fetchData();\n    console.log('somoimPhotoList 전체 : ', somoimPhotoList);\n  }, [somoimId]);\n\n  // const onRequestAppend = (e) => {\n\n  //     if (!hasMoreImages) {\n  //         // 이미지가 더 이상 없으면 추가 요청 중지\n  //         return;\n  //       }\n\n  //     const nextGroupKey = (e.groupKey || 0) + 1;\n  //     const currentKeys = items.map((item) => item.key);\n\n  //     // 새로 추가할 이미지 중에서 현재까지 추가된 이미지와 중복되지 않은 것만 선택\n  //     const newItems = getItems(nextGroupKey, firstPhotoArray.length).filter(\n  //         (item) => !currentKeys.includes(item.key)\n  //       );\n\n  //     // 이미지가 더 이상 없다면 hasMoreItems를 false로 설정\n  //     if (newItems.length === 0) {\n  //       setHasMoreImages(false);\n  //       return;\n  //     }\n\n  //     setItems([...items, ...newItems]);    \n  // };\n  const onRequestAppend = e => {\n    const nextGroupKey = (e.groupKey || 0) + 1;\n\n    // 로딩 중이면 추가 요청을 중단합니다.\n    if (loading) {\n      return;\n    }\n\n    // 로딩 상태를 true로 설정합니다.\n    setLoading(true);\n\n    // e.wait()를 호출하여 MasonryInfiniteGrid에게 로딩 중임을 알립니다.\n    e.wait();\n\n    // setTimeout을 사용하여 일정 시간 후에 로딩을 완료하고 이미지를 가져오도록 합니다.\n    setTimeout(async () => {\n      try {\n        // 이미지 데이터를 가져오는 API 호출 (5개씩)\n        const response = await axios.get(`/somoim/somoimPhotoList?id=${somoimId}&page=${nextGroupKey}`);\n\n        // 가져온 이미지 데이터를 새로운 아이템으로 설정\n        const newItems = response.data.map((item, index) => ({\n          groupKey: nextGroupKey,\n          key: items.length + index\n        }));\n\n        // MasonryInfiniteGrid에게 로딩이 완료되었음을 알립니다.\n        e.ready();\n\n        // 현재 아이템 목록에 새로운 아이템을 추가합니다.\n        setItems([...items, ...newItems]);\n      } catch (error) {\n        console.error(error);\n        // 에러 처리를 원하는 대로 수행하세요.\n      } finally {\n        // 로딩 상태를 false로 설정합니다.\n        setLoading(false);\n      }\n    }, 2000); // 3초의 지연 시간을 설정합니다.\n  };\n\n  // ImageModal에서 이미지 저장시 모달창 닫기\n  const handleSaveAndAdd = data => {\n    // 여기에서 데이터를 사용하거나 추가로 로직 수행\n    console.log('이미지 업로드 후 처리:', data);\n    handleClose();\n  };\n\n  // 이미지 리스트를 담을 Item 처리\n  const Item = ({\n    num\n  }) => {\n    if (firstPhotoArray[num] === undefined) {\n      return null; // undefined일 경우 이미지를 생성하지 않음\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${styles.item} mb-5`,\n      style: {\n        width: \"250px\",\n        marginBottom: '5rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"thumbnail\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: `${styles.box}`,\n          src: `https://kr.object.ncloudstorage.com/bitcamp-edu-bucket-112/${firstPhotoArray[num]}`,\n          alt: `egjs-${num}`,\n          style: {\n            maxWidth: \"250px\"\n          },\n          onClick: () => handleImageClick(num)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'flex-start'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info\",\n            style: {\n              display: 'flex',\n              alignItems: 'center',\n              whiteSpace: 'nowrap',\n              overflow: 'hidden',\n              textOverflow: 'ellipsis',\n              maxWidth: '160px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                marginRight: '0.5rem'\n              },\n              children: \"\\u203B \\uC81C\\uBAA9:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                overflow: 'hidden',\n                textOverflow: 'ellipsis'\n              },\n              children: somoimPhotoList[num].photoTitle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info\",\n            children: [\"\\u203B \\uC791\\uC131\\uC790: \", somoimPhotoList[num].user.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info\",\n            children: [\"\\u203B \\uC791\\uC131\\uC77C: \", formatDate(somoimPhotoList[num].createdAt)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"danger\",\n          size: \"sm\",\n          onClick: () => handleModalOpen(num, isAdmin, somoimId),\n          children: \"\\uC0C1\\uC138 \\uBCF4\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 9\n    }, this);\n  };\n\n  // 날짜 형식 변환\n  function formatDate(dateString) {\n    const options = {\n      year: '2-digit',\n      month: 'numeric',\n      day: 'numeric'\n    };\n    const formattedDate = new Date(dateString).toLocaleDateString('ko-KR', options);\n    return formattedDate;\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navigation_bar d-flex justify-content-end\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: handleShow,\n          className: `${styles.pint_mock_icon_container} add_pin`,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/image/somoim/add.png\",\n            alt: \"add_pin\",\n            className: `${styles.pint_mock_icon}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        show: show,\n        onHide: handleClose,\n        size: \"lg\",\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          closeButton: true,\n          children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n            children: \"\\uC0AC\\uC9C4 \\uC5C5\\uB85C\\uB4DC\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          style: {\n            height: '600px'\n          },\n          children: /*#__PURE__*/_jsxDEV(ImageModal, {\n            ref: imageModalRef,\n            onSavePin: handleSaveAndAdd,\n            somoimId: somoimId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"secondary\",\n            onClick: handleClose,\n            children: \"\\uB2EB\\uAE30\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"danger\",\n            onClick: () => imageModalRef.current.savePin(),\n            children: \"\\uC0AC\\uC9C4 \\uC800\\uC7A5 \\uBC0F \\uCD94\\uAC00\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MasonryInfiniteGrid, {\n        loading: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading\",\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 30\n        }, this)\n        //groupBy={(jsx) => jsx.props[\"data-grid-groupkey\"]}\n        ,\n        itemBy: jsx => jsx.key,\n        placeholder: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"placeholder\",\n          children: \"\\uD50C\\uB808\\uC774\\uC2A4 \\uD640\\uB354\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 36\n        }, this),\n        className: \"container mt-3\",\n        align: \"center\",\n        gap: 20 // margin\n        ,\n        defaultDirection: \"end\",\n        sizeWeight: 2,\n        ratioWeight: 1,\n        aspectRatio: 1,\n        weightPriority: \"custom\"\n        // frame={[[1, 1, 2, 3, 3], [1, 1, 4, 4, 5]]} // 한 행의 열크기\n        ,\n        attributePrefix: \"data-grid-\",\n        column: 0,\n        ref: igRef,\n        columnCalculationThreshold: 1\n        // threshold={1000}\n        ,\n        onRequestAppend: onRequestAppend,\n        onRenderComplete: e => {\n          console.log(e);\n        },\n        isEqualSize: false,\n        useResizeObserver: true,\n        outlineLength: 0,\n        children: items.map((item, index) => {\n          return /*#__PURE__*/_jsxDEV(Item, {\n            className: \"item\",\n            \"data-grid-groupkey\": item.groupKey,\n            num: item.key\n          }, item.key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 17\n      }, this), showImageDetail && /*#__PURE__*/_jsxDEV(ImageDetail, {\n        show: showImageDetail,\n        onClose: () => {\n          setShowImageDetail(false);\n          setSelectedPhotoInfo(null);\n        },\n        selectedPhotoInfo: selectedPhotoInfo,\n        isAdmin: admin,\n        somoimId: somoimNum\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 19\n      }, this), showModal && /*#__PURE__*/_jsxDEV(ImageDetail, {\n        show: showModal,\n        onClose: () => {\n          setShowModal(false);\n          setSelectedPhotoInfo(null);\n        },\n        selectedPhotoInfo: selectedPhotoInfo,\n        isAdmin: admin,\n        somoimId: somoimNum\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(SomoimDetailPhoto, \"vRM4xWKDrz8qUCQOqEtVosgV1U0=\", false, function () {\n  return [useLocation];\n});\n_c = SomoimDetailPhoto;\nexport default SomoimDetailPhoto;\nvar _c;\n$RefreshReg$(_c, \"SomoimDetailPhoto\");","map":{"version":3,"names":["React","useEffect","useRef","useState","MasonryInfiniteGrid","Button","Container","Modal","styles","ImageModal","axios","ImageDetail","useLocation","jsxDEV","_jsxDEV","Fragment","_Fragment","getItems","nextGroupKey","count","nextItems","nextKey","i","push","groupKey","key","SomoimDetailPhoto","somoimId","user","isAdmin","_s","admin","setAdmin","somoimNum","setSomoimNum","items","setItems","loading","setLoading","hasMoreImages","setHasMoreImages","somoimPhotoList","setSomoimPhotoList","firstPhotoArray","setFirstPhotoArray","createdAt","modifiedAt","id","photoTitle","photoContent","photoLink","photoLike","hit","somoimPhoto","somoim","imageModalRef","console","log","igRef","show","setShow","handleClose","handleShow","alert","showModal","setShowModal","selectedPhotoInfo","setSelectedPhotoInfo","handleModalOpen","num","selectedPhoto","setShowImageDetail","showImageDetail","clickedPhotoIndex","setClickedPhotoIndex","handleImageClick","clickedPhoto","search","params","URLSearchParams","photoId","get","find","photo","parseInt","current","fetchData","response","data","newFirstPhotoArray","Array","isArray","length","forEach","item","photoArray","replace","split","firstPhoto","error","onRequestAppend","e","wait","setTimeout","newItems","map","index","ready","handleSaveAndAdd","Item","undefined","className","style","width","marginBottom","children","box","src","alt","maxWidth","onClick","fileName","_jsxFileName","lineNumber","columnNumber","display","justifyContent","alignItems","flexDirection","whiteSpace","overflow","textOverflow","marginRight","name","formatDate","variant","size","dateString","options","year","month","day","formattedDate","Date","toLocaleDateString","pint_mock_icon_container","pint_mock_icon","onHide","Header","closeButton","Title","Body","height","ref","onSavePin","Footer","savePin","itemBy","jsx","placeholder","align","gap","defaultDirection","sizeWeight","ratioWeight","aspectRatio","weightPriority","attributePrefix","column","columnCalculationThreshold","onRenderComplete","isEqualSize","useResizeObserver","outlineLength","onClose","_c","$RefreshReg$"],"sources":["C:/Spring Boot/workspacebranch/flirdog/src/main/webapp/src/components/somoim/detail/SomoimDetailPhoto.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\n\r\nimport { MasonryInfiniteGrid } from \"@egjs/react-infinitegrid\";\r\nimport { Button, Container, Modal } from 'react-bootstrap';\r\n\r\nimport styles from '../../../css/somoim/detail/SomoimPhotoModal_style.module.css';\r\nimport ImageModal from './ImageModal';\r\nimport axios from 'axios';\r\nimport ImageDetail from './ImageDetail';\r\nimport { useLocation } from 'react-router-dom';\r\n// import Pin from './Pin';\r\n// import Modal from './Modal';\r\n\r\n\r\nconst getItems = (nextGroupKey, count) => {\r\n    const nextItems = [];\r\n    const nextKey = nextGroupKey * count;\r\n  \r\n    for (let i = 0; i < count; ++i) {\r\n      nextItems.push({ groupKey: nextGroupKey, key: nextKey + i });\r\n    }\r\n    return nextItems;\r\n  };\r\n  \r\n\r\nconst SomoimDetailPhoto = ({ somoimId, user, isAdmin } ) => {\r\n\r\n    // const updateItems = (newItem) => { // imageModal을 통한 아이템 상태 업데이트\r\n    //     setItems([...items, newItem]);\r\n    // }\r\n    const [admin, setAdmin] = useState();\r\n    const [somoimNum, setSomoimNum] = useState();\r\n\r\n    const [items, setItems] = useState(() => getItems(0, 10));\r\n    const [loading, setLoading] = useState(false); // 로딩 상태를 추적합니다.\r\n\r\n    const [hasMoreImages, setHasMoreImages] = useState(true); // 이미지가 더 이상 없을 때 더 이상 요청하지 않도록 하는 state\r\n    const [somoimPhotoList, setSomoimPhotoList] = useState([{}]); // 전체 소모임 목록\r\n    const [firstPhotoArray, setFirstPhotoArray] = useState([]); // 첫번째 이미지만 추출한 배열\r\n    const {createdAt, modifiedAt, id, photoTitle, photoContent, \r\n            photoLink, photoLike, hit, somoimPhoto, somoim} = somoimPhotoList\r\n    const imageModalRef = useRef(); // 이미지 업로드를 위한 useRef\r\n\r\n    useEffect(() => {\r\n        console.log('소모임 사진첩에서 부르는 로그인 유저 아이디 :' + (user && user.id ? user.id : 'User 정보 없음'));\r\n        console.log('소모임 사진첩에서 부르는 소모임 아이디 :' + somoimId)\r\n    },[somoimId])\r\n    \r\n    const igRef = useRef();\r\n\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleClose = () => setShow(false);\r\n    //const handleShow = () => setShow(true);\r\n    const handleShow = () => {\r\n      // 소모임 가입 여부를 확인\r\n      if (isAdmin === 2) {\r\n        alert(\"소모임에 먼저 가입하세요.\");\r\n        return;\r\n      }\r\n    \r\n      // 가입되어 있다면 모달을 열기\r\n      setShow(true);\r\n    };\r\n    // 상세보기 구현\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [selectedPhotoInfo, setSelectedPhotoInfo] = useState({});\r\n    const handleModalOpen = (num, isAdmin, somoimId) => {\r\n      const selectedPhoto = somoimPhotoList[num];\r\n      setSelectedPhotoInfo(selectedPhoto);\r\n      setShowImageDetail(true); // 이미지 상세 모달 열기\r\n      setAdmin(isAdmin);\r\n      setSomoimNum(somoimId);\r\n    };\r\n    const [showImageDetail, setShowImageDetail] = useState(false);\r\n    const [clickedPhotoIndex, setClickedPhotoIndex] = useState({});\r\n    const handleImageClick = (num) => {\r\n      const clickedPhoto = somoimPhotoList[num];\r\n      setSelectedPhotoInfo(clickedPhoto); // 이미지 클릭 시 선택된 정보 설정\r\n      setShowImageDetail(true);\r\n      setShowModal(false); // 이미지 클릭 시 상세보기 모달은 닫히도록 설정\r\n    };\r\n\r\n    // SomoimDetailPhoto 컴포넌트 내에서 이미지 정보 추출\r\n    const { search } = useLocation();\r\n    const params = new URLSearchParams(search);\r\n    const photoId = params.get('photoId');\r\n\r\n    // 선택된 이미지 정보 저장\r\n    useEffect(() => {\r\n      if (!photoId || !somoimPhotoList) {\r\n        return; // photoIndex가 없거나 somoimPhotoList가 없으면 종료\r\n      }\r\n    \r\n      const selectedPhoto = somoimPhotoList.find(photo => photo.id === parseInt(photoId, 10));\r\n      \r\n      if (selectedPhoto) {\r\n        setSelectedPhotoInfo(selectedPhoto);\r\n        setShowImageDetail(true);\r\n        setAdmin(isAdmin);\r\n        setSomoimNum(somoimId);\r\n      }\r\n    }, [photoId, somoimPhotoList]);\r\n    \r\n\r\n    // 각 게시글의 첫번째 사진만 추출\r\n    useEffect(() => {\r\n        console.log(igRef.current.getItems());\r\n      \r\n        const fetchData = async () => {\r\n          try {\r\n            const response = await axios.get(`/somoim/somoimPhotoList?id=${somoimId}`);\r\n            console.log('해당 소모임 사진첩 목록 : ', response.data);\r\n      \r\n            setSomoimPhotoList(response.data);\r\n      \r\n            const newFirstPhotoArray = [];\r\n      \r\n            if (Array.isArray(response.data) && response.data.length > 0) {\r\n              response.data.forEach((item) => {\r\n                if (item.somoimPhoto) {\r\n                  const photoArray = item.somoimPhoto.replace(/\"/g, '').split(',');\r\n      \r\n                  // 각 항목에 대해 첫 번째 사진 선택\r\n                  if (photoArray.length > 0) {\r\n                    const firstPhoto = photoArray[0];\r\n                    newFirstPhotoArray.push(firstPhoto);\r\n                  } else {\r\n                    console.log('somoimPhotoList is not a valid array');\r\n                  }\r\n                } else {\r\n                  console.log('somoimPhotoList is not available');\r\n                }\r\n              });\r\n      \r\n              setFirstPhotoArray(newFirstPhotoArray);\r\n      \r\n              // 이미지 개수가 10개 미만이면 추가 요청 중지\r\n              if (newFirstPhotoArray.length < 10) {\r\n                setHasMoreImages(false);\r\n              }\r\n            } else {\r\n              console.log('somoimPhotoList is not a valid array or is empty');\r\n              setHasMoreImages(false);\r\n            }\r\n          } catch (error) {\r\n            console.error(error);\r\n            setHasMoreImages(false);\r\n          }\r\n        };\r\n      \r\n        fetchData();\r\n        console.log('somoimPhotoList 전체 : ', somoimPhotoList);\r\n      }, [somoimId]);\r\n\r\n    // const onRequestAppend = (e) => {\r\n        \r\n    //     if (!hasMoreImages) {\r\n    //         // 이미지가 더 이상 없으면 추가 요청 중지\r\n    //         return;\r\n    //       }\r\n\r\n    //     const nextGroupKey = (e.groupKey || 0) + 1;\r\n    //     const currentKeys = items.map((item) => item.key);\r\n\r\n    //     // 새로 추가할 이미지 중에서 현재까지 추가된 이미지와 중복되지 않은 것만 선택\r\n    //     const newItems = getItems(nextGroupKey, firstPhotoArray.length).filter(\r\n    //         (item) => !currentKeys.includes(item.key)\r\n    //       );\r\n\r\n    //     // 이미지가 더 이상 없다면 hasMoreItems를 false로 설정\r\n    //     if (newItems.length === 0) {\r\n    //       setHasMoreImages(false);\r\n    //       return;\r\n    //     }\r\n\r\n    //     setItems([...items, ...newItems]);    \r\n    // };\r\n    const onRequestAppend = (e) => {\r\n      const nextGroupKey = (e.groupKey || 0) + 1;\r\n  \r\n      // 로딩 중이면 추가 요청을 중단합니다.\r\n      if (loading) {\r\n        return;\r\n      }\r\n  \r\n      // 로딩 상태를 true로 설정합니다.\r\n      setLoading(true);\r\n  \r\n      // e.wait()를 호출하여 MasonryInfiniteGrid에게 로딩 중임을 알립니다.\r\n      e.wait();\r\n  \r\n      // setTimeout을 사용하여 일정 시간 후에 로딩을 완료하고 이미지를 가져오도록 합니다.\r\n      setTimeout(async () => {\r\n        try {\r\n          // 이미지 데이터를 가져오는 API 호출 (5개씩)\r\n          const response = await axios.get(`/somoim/somoimPhotoList?id=${somoimId}&page=${nextGroupKey}`);\r\n  \r\n          // 가져온 이미지 데이터를 새로운 아이템으로 설정\r\n          const newItems = response.data.map((item, index) => ({\r\n            groupKey: nextGroupKey,\r\n            key: items.length + index,\r\n          }));\r\n  \r\n          // MasonryInfiniteGrid에게 로딩이 완료되었음을 알립니다.\r\n          e.ready();\r\n  \r\n          // 현재 아이템 목록에 새로운 아이템을 추가합니다.\r\n          setItems([...items, ...newItems]);\r\n        } catch (error) {\r\n          console.error(error);\r\n          // 에러 처리를 원하는 대로 수행하세요.\r\n        } finally {\r\n          // 로딩 상태를 false로 설정합니다.\r\n          setLoading(false);\r\n        }\r\n      }, 2000); // 3초의 지연 시간을 설정합니다.\r\n    };\r\n\r\n    // ImageModal에서 이미지 저장시 모달창 닫기\r\n    const handleSaveAndAdd = (data) => {\r\n        // 여기에서 데이터를 사용하거나 추가로 로직 수행\r\n        console.log('이미지 업로드 후 처리:', data);\r\n        handleClose();\r\n    };\r\n\r\n    // 이미지 리스트를 담을 Item 처리\r\n    const Item = ({ num }) => {\r\n      if (firstPhotoArray[num] === undefined) {\r\n        return null; // undefined일 경우 이미지를 생성하지 않음\r\n      }\r\n    \r\n      return (\r\n        <div className={`${styles.item} mb-5`} style={{ width: \"250px\", marginBottom: '5rem' }}>\r\n          <div className=\"thumbnail\">\r\n            <img\r\n              className={`${styles.box}`}\r\n              src={`https://kr.object.ncloudstorage.com/bitcamp-edu-bucket-112/${firstPhotoArray[num]}`}\r\n              alt={`egjs-${num}`}\r\n              style={{ maxWidth: \"250px\" }}\r\n              onClick={() => handleImageClick(num)}\r\n            />\r\n          </div>\r\n          \r\n          <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n              <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'flex-start' }}>\r\n                  <div className=\"info\" style={{ display: 'flex', alignItems: 'center', whiteSpace: 'nowrap', \r\n                                              overflow: 'hidden', textOverflow: 'ellipsis', maxWidth: '160px' }}>\r\n                      <span style={{ marginRight: '0.5rem' }}>※ 제목:</span>\r\n                      <span style={{ overflow: 'hidden', textOverflow: 'ellipsis' }}>{somoimPhotoList[num].photoTitle}</span>\r\n                  </div>\r\n                  <div className=\"info\">※ 작성자: {somoimPhotoList[num].user.name}</div>\r\n                  <div className=\"info\">※ 작성일: {formatDate(somoimPhotoList[num].createdAt)}</div>\r\n              </div>\r\n              <Button \r\n                  variant=\"danger\" size=\"sm\" \r\n                  onClick={() => handleModalOpen(num, isAdmin, somoimId)}>\r\n                  상세 보기\r\n              </Button>\r\n          </div>\r\n        </div>\r\n      );\r\n    };\r\n\r\n    // 날짜 형식 변환\r\n    function formatDate(dateString) {\r\n      const options = { year: '2-digit', month: 'numeric', day: 'numeric' };\r\n      const formattedDate = new Date(dateString).toLocaleDateString('ko-KR', options);\r\n      return formattedDate;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Container className=\"mb-3\">\r\n              {/* (이즈머드민 : {isAdmin}) */}\r\n              {/* {\r\n                isAdmin === 2 && (\r\n                    <div>\r\n                        <div>(당신은 아직 미가입자 입니다.)</div><br/>\r\n                    </div>\r\n                )\r\n              } */}\r\n                <div className=\"navigation_bar d-flex justify-content-end\">\r\n                    <div\r\n                        onClick={handleShow}\r\n                        className={`${styles.pint_mock_icon_container} add_pin`}\r\n                    >\r\n                        <img src=\"/image/somoim/add.png\" alt=\"add_pin\" className={`${styles.pint_mock_icon}`} />\r\n                    </div>\r\n                </div>\r\n\r\n                <Modal show={show} onHide={handleClose} size=\"lg\">\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>사진 업로드</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body style={{height:'600px'}}>\r\n                        <ImageModal ref={imageModalRef} onSavePin={handleSaveAndAdd} somoimId={somoimId} />\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={handleClose}>\r\n                            닫기\r\n                        </Button>\r\n                        <Button variant=\"danger\" onClick={() => imageModalRef.current.savePin()}>\r\n                            사진 저장 및 추가\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n\r\n\r\n                <MasonryInfiniteGrid\r\n                    loading={<div className=\"loading\">Loading...</div>}\r\n                    //groupBy={(jsx) => jsx.props[\"data-grid-groupkey\"]}\r\n                    itemBy={(jsx) => jsx.key}\r\n                      placeholder={<div className=\"placeholder\">플레이스 홀더</div>}\r\n                      className=\"container mt-3\"\r\n                      align=\"center\"\r\n                      gap={20} // margin\r\n                      defaultDirection={\"end\"}\r\n                      sizeWeight={2}\r\n                      ratioWeight={1}\r\n                      aspectRatio={1}\r\n                      weightPriority={\"custom\"}\r\n                      // frame={[[1, 1, 2, 3, 3], [1, 1, 4, 4, 5]]} // 한 행의 열크기\r\n                      attributePrefix={\"data-grid-\"}\r\n                      column={0}\r\n                      ref={igRef}\r\n                      columnCalculationThreshold={1}\r\n                      // threshold={1000}\r\n                      onRequestAppend={onRequestAppend}\r\n                      onRenderComplete={(e) => { \r\n                          console.log(e);\r\n                        }}\r\n                      isEqualSize={false}\r\n                      useResizeObserver={true}\r\n                      outlineLength={0} \r\n                    >\r\n                      {/* {items ? (\r\n                          items.map((item, index) => (\r\n                            <Item className=\"item\" data-grid-groupkey={item.groupKey} key={item.key} num={item.key}></Item>\r\n                          ))\r\n                        ) : (\r\n                          <div>아직 올라온 게시글이 없습니다.</div>\r\n                        )} => 적용 안됌 */}\r\n                        { items.map((item ,index) => {\r\n                            return (\r\n                                <Item className=\"item\" data-grid-groupkey={item.groupKey} key={item.key} num={item.key}></Item>\r\n                                )\r\n                        })}\r\n                </MasonryInfiniteGrid>\r\n                {showImageDetail && (\r\n                  <ImageDetail\r\n                    show={showImageDetail}\r\n                    onClose={() => {\r\n                      setShowImageDetail(false);\r\n                      setSelectedPhotoInfo(null);\r\n                    }}\r\n                    selectedPhotoInfo={selectedPhotoInfo}\r\n                    isAdmin={admin}\r\n                    somoimId={somoimNum}\r\n                  />\r\n                )}\r\n                {showModal && (\r\n                  <ImageDetail\r\n                    show={showModal}\r\n                    onClose={() => {\r\n                      setShowModal(false);\r\n                      setSelectedPhotoInfo(null);\r\n                    }}\r\n                    selectedPhotoInfo={selectedPhotoInfo}\r\n                    isAdmin={admin}\r\n                    somoimId={somoimNum}\r\n                  />\r\n                )}\r\n\r\n            </Container>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SomoimDetailPhoto;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}