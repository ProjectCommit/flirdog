{"ast":null,"code":"var _jsxFileName = \"C:\\\\Spring Boot\\\\workspacebranch\\\\flirdog\\\\src\\\\main\\\\webapp\\\\src\\\\components\\\\admin\\\\0\\uAD00\\uB9AC\\uC790\\uD648\\\\AdminMainContent.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport rightContent from \"../../../css/admin/rightContent.module.css\";\nimport styles from \"../../../css/admin/adminMainContent.module.css\";\nimport AiSupportList from \"./AiSupportList\";\nimport Banner from \"./Banner\";\nimport AiOutput from \"./AiOutput\";\nimport { Alert } from \"react-bootstrap\";\nimport ChatAi from \"./ChatAi\";\nimport axios from \"axios\";\nimport { Pie, Bar, Doughnut } from \"react-chartjs-2\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, ArcElement, BarElement } from \"chart.js\";\nimport { Line } from \"react-chartjs-2\";\nimport dogsBreed from \"../../login/join/dogsBreeds\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nChartJS.register(ArcElement, Tooltip, Legend, BarElement, LinearScale, PointElement, LineElement, ArcElement, CategoryScale);\n\n//---------------------------------\n\nconst AdminMainContent = () => {\n  _s();\n  const [aiDogProfileImgUrl, setAiDogProfileImgUrl] = useState(\"\");\n  const [AiImageInputText, setAiImageInputText] = useState(\"\");\n  const [isContent, setIsContent] = useState(false);\n  const [address, setAddress] = useState([]);\n  const [locationOfUserData, setLocationOfUserData] = useState({\n    labels: [\"서울\", \"부산\", \"대구\", \"인천\", \"광주\", \"대전\", \"울산\", \"세종\", \"경기\", \"강원\", \"충북\", \"충남\", \"전북\", \"전남\", \"경북\", \"경남\", \"제주특별자치도\"],\n    datasets: [{\n      label: \"인원수\",\n      data: [],\n      backgroundColor: [\"rgba(255, 99, 132, 0.2)\",\n      // 빨간색\n      \"rgba(54, 162, 235, 0.2)\",\n      // 파란색\n      \"rgba(255, 206, 86, 0.2)\",\n      // 노란색\n      \"rgba(75, 192, 192, 0.2)\",\n      // 청록색\n      \"rgba(153, 102, 255, 0.2)\",\n      // 보라색\n      \"rgba(255, 159, 64, 0.2)\",\n      // 주황색\n      \"rgba(201, 203, 207, 0.2)\",\n      // 회색\n      \"rgba(255, 99, 255, 0.2)\",\n      // 분홍색\n      \"rgba(255, 159, 132, 0.2)\",\n      // 살구색\n      \"rgba(54, 162, 132, 0.2)\",\n      // 청록색 변형\n      \"rgba(255, 206, 175, 0.2)\",\n      // 연노랑\n      \"rgba(75, 192, 255, 0.2)\",\n      // 하늘색\n      \"rgba(153, 102, 132, 0.2)\",\n      // 자주색\n      \"rgba(255, 99, 64, 0.2)\",\n      // 다크오렌지\n      \"rgba(54, 162, 192, 0.2)\",\n      // 다크블루\n      \"rgba(255, 206, 132, 0.2)\",\n      // 연주황\n      \"rgba(75, 192, 132, 0.2)\" // 연청록\n      ],\n      borderColor: [\"rgba(255, 99, 132, 1)\", \"rgba(54, 162, 235, 1)\", \"rgba(255, 206, 86, 1)\", \"rgba(75, 192, 192, 1)\", \"rgba(153, 102, 255, 1)\", \"rgba(255, 159, 64, 1)\", \"rgba(201, 203, 207, 1)\", \"rgba(255, 99, 255, 1)\", \"rgba(255, 159, 132, 1)\", \"rgba(54, 162, 132, 1)\", \"rgba(255, 206, 175, 1)\", \"rgba(75, 192, 255, 1)\", \"rgba(153, 102, 132, 1)\", \"rgba(255, 99, 64, 1)\", \"rgba(54, 162, 192, 1)\", \"rgba(255, 206, 132, 1)\", \"rgba(75, 192, 132, 1)\"],\n      borderWidth: 1\n    }]\n  });\n\n  //-----지역별 강아지 종류 분포---------------\n  const [dogsData, setDogsData] = useState({\n    labels: dogsBreed.map(breed => breed.text),\n    // 한글 이름을 라벨로 사용\n    datasets: [{\n      label: \"Dog Breed Count\",\n      data: Array(dogsBreed.length).fill(0),\n      // 데이터 초기화\n      backgroundColor: [\"rgba(255, 99, 132, 0.2)\", \"rgba(54, 162, 235, 0.2)\", \"rgba(255, 206, 86, 0.2)\", \"rgba(75, 192, 192, 0.2)\", \"rgba(153, 102, 255, 0.2)\", \"rgba(255, 159, 64, 0.2)\", \"rgba(199, 99, 132, 0.2)\", \"rgba(54, 100, 235, 0.2)\", \"rgba(255, 150, 86, 0.2)\", \"rgba(75, 100, 192, 0.2)\", \"rgba(153, 50, 255, 0.2)\", \"rgba(255, 99, 64, 0.2)\", \"rgba(195, 162, 132, 0.2)\", \"rgba(54, 162, 200, 0.2)\", \"rgba(255, 206, 150, 0.2)\", \"rgba(100, 192, 192, 0.2)\"],\n      borderColor: [\"rgba(255, 99, 132, 0.8)\", \"rgba(54, 162, 235, 0.8)\", \"rgba(255, 206, 86, 0.8)\", \"rgba(75, 192, 192, 0.8)\", \"rgba(153, 102, 255, 0.8)\", \"rgba(255, 159, 64, 0.8)\", \"rgba(199, 99, 132, 0.8)\", \"rgba(54, 100, 235, 0.8)\", \"rgba(255, 150, 86, 0.8)\", \"rgba(75, 100, 192, 0.8)\", \"rgba(153, 50, 255, 0.8)\", \"rgba(255, 99, 64, 0.8)\", \"rgba(195, 162, 132, 0.8)\", \"rgba(54, 162, 200, 0.8)\", \"rgba(255, 206, 150, 0.8)\", \"rgba(100, 192, 192, 0.8)\"],\n      borderWidth: 1\n    }]\n  });\n\n  //---------------------------------\n\n  //-----------애견 성별에 따른 매칭 건수----------\n  const [dogSexData, setDogSexData] = useState({\n    labels: [0],\n    datasets: [{\n      label: \"여아\",\n      data: [],\n      borderColor: \"rgb(255, 99, 132)\",\n      backgroundColor: \"rgba(255, 99, 132, 0.5)\"\n    }, {\n      label: \"남아\",\n      data: [],\n      borderColor: \"rgb(53, 162, 235)\",\n      backgroundColor: \"rgba(53, 162, 235, 0.5)\"\n    }, {\n      label: \"중성견\",\n      data: [],\n      borderColor: \"rgb(87, 255, 87)\",\n      backgroundColor: \"rgb(87, 255, 87)\"\n    }]\n  });\n\n  ///--------------매칭 완료 비율--------------------\n  const [matchingState, setMatchingState] = useState({\n    labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"],\n    datasets: [{\n      label: \"매칭 완료 비율\",\n      data: [60, 60, 70, 60, 80, 87, 90],\n      backgroundColor: \"rgba(255, 99, 132, 0.5)\"\n    }]\n  });\n\n  //------------신규 회원 지역 분포 ----------------\n\n  useEffect(() => {\n    axios.get(\"http://localhost:8080/admin/getAddress\").then(res => {\n      setAddress(res.data);\n      const countByCity = res.data.reduce((acc, item) => {\n        const city = item.address.split(\" \")[0]; // 주소에서 첫 번째 단어(도시)를 추출\n        acc[city] = (acc[city] || 0) + 1; // 도시별 카운트\n        return acc;\n      }, {});\n\n      // 레이블 순서에 맞게 데이터 배열 생성\n      const dataForChart = locationOfUserData.labels.map(label => {\n        return label === \"전체\" ? res.data.length : countByCity[label] || 0;\n      });\n\n      // 차트 데이터 업데이트\n      setLocationOfUserData(prevData => ({\n        ...prevData,\n        datasets: [{\n          ...prevData.datasets[0],\n          data: dataForChart\n        }]\n      }));\n    }).catch(err => {\n      console.log(err);\n    });\n    axios.get(\"http://localhost:8080/admin/getDogList\").then(res => {\n      console.log(\"개품종\");\n      console.log(res.data);\n      const countByBreed = res.data.reduce((acc, item) => {\n        const breed = item.dogsBreed; // 강아지 품종의 영어 이름 추출\n\n        acc[breed] = (acc[breed] || 0) + 1; // 품종별 카운트\n        return acc;\n      }, {});\n\n      // 레이블 순서에 맞게 데이터 배열 생성\n      // 영어 이름을 기준으로 데이터 배열 생성하되 라벨은 한글로 표시\n      const dataForChart = dogsBreed.map(breed => countByBreed[breed.value] || 0);\n\n      // 차트 데이터 업데이트\n      setDogsData(prevData => ({\n        ...prevData,\n        datasets: [{\n          ...prevData.datasets[0],\n          data: dataForChart\n        }]\n      }));\n    }).catch(err => {\n      console.log(err);\n    });\n    axios.get(\"http://localhost:8080/admin/getDogList\").then(res => {\n      const dogsData = res.data;\n      const recentDates = [];\n\n      // 오늘 날짜를 기준으로 과거 7일의 날짜 생성\n      for (let i = 6; i >= 0; i--) {\n        const date = new Date();\n        date.setDate(date.getDate() - i);\n        recentDates.push(date.toISOString().split(\"T\")[0]);\n      }\n\n      // 날짜별 데이터 초기화\n      const dateCounts = recentDates.reduce((acc, date) => {\n        acc[date] = {\n          male: 0,\n          female: 0,\n          neutralized: 0\n        };\n        return acc;\n      }, {});\n\n      // 날짜별로 각 개의 성별 및 중성화 여부 카운트\n      dogsData.forEach(dog => {\n        const date = dog.createdAt.split(\"T\")[0];\n        if (recentDates.includes(date)) {\n          if (dog.isNeutralized) {\n            dateCounts[date].neutralized++;\n          } else if (dog.gender === \"Male\") {\n            dateCounts[date].male++;\n          } else if (dog.gender === \"Female\") {\n            dateCounts[date].female++;\n          }\n        }\n      });\n      setDogSexData(prevData => ({\n        labels: recentDates,\n        // 과거 7일의 날짜를 라벨로 설정 (최신 날짜가 먼저 오도록)\n        datasets: [{\n          ...prevData.datasets[0],\n          data: recentDates.map(date => dateCounts[date].female)\n        }, {\n          ...prevData.datasets[1],\n          data: recentDates.map(date => dateCounts[date].male)\n        }, {\n          ...prevData.datasets[2],\n          data: recentDates.map(date => dateCounts[date].neutralized)\n        }]\n      }));\n      axios.get(\"http://localhost:8080/admin/getMatchingList\").then(res => {\n        console.log(\"매칭리스트\");\n        console.log(res.data);\n        const recentDates = [];\n\n        // 오늘 날짜를 기준으로 과거 7일의 날짜 생성\n        for (let i = 6; i >= 0; i--) {\n          const date = new Date();\n          date.setDate(date.getDate() - i);\n          recentDates.push(date.toISOString().split(\"T\")[0]);\n        }\n\n        // 날짜별 데이터 초기화\n        const dateCounts = recentDates.reduce((acc, date) => {\n          acc[date] = {\n            total: 0,\n            completed: 0\n          };\n          return acc;\n        }, {});\n\n        // 날짜별로 매칭 완료여부 카운트\n        res.data.forEach(item => {\n          const date = item.createdAt.split(\"T\")[0];\n          if (recentDates.includes(date)) {\n            dateCounts[date].total++;\n            if (item.matchingState !== \"매칭대기\") {\n              dateCounts[date].completed++;\n            }\n          }\n        });\n\n        // 매칭 완료 비율 계산\n        const completionRates = recentDates.map(date => {\n          const {\n            total,\n            completed\n          } = dateCounts[date];\n          return total > 0 ? completed / total * 100 : 0;\n        });\n        console.log(completionRates);\n        setMatchingState(prevData => ({\n          ...prevData,\n          labels: recentDates,\n          datasets: [{\n            ...prevData.datasets[0],\n            data: completionRates\n          }]\n        }));\n      }).catch(err => {\n        console.log(err);\n      });\n    });\n  }, []);\n  useEffect(() => {\n    console.log(\"dogSexData\");\n    console.log(dogSexData);\n  }, [dogSexData]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: ` d-flex justify-content-start flex-column`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${rightContent.rightContent} d-flex justify-content-start`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${rightContent.dataBoxContainer} m-2 d-flex flex-column`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: `d-flex justify-content-center align-items-center`,\n            children: \"\\uC2E0\\uADDC \\uD68C\\uC6D0 \\uC9C0\\uC5ED \\uBD84\\uD3EC\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `${rightContent.dataBox} d-flex justify-content-center align-items-center`,\n            children: /*#__PURE__*/_jsxDEV(Pie, {\n              data: locationOfUserData\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 392,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${rightContent.dataBoxContainer} m-2 d-flex flex-column`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: `d-flex justify-content-center align-items-center`,\n            children: \"\\uD68C\\uC6D0 \\uAC15\\uC544\\uC9C0 \\uC885\\uB958 \\uBD84\\uD3EC\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `${rightContent.dataBox} d-flex justify-content-center align-items-center`,\n            children: /*#__PURE__*/_jsxDEV(Doughnut, {\n              data: dogsData\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 404,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${rightContent.rightContent2} d-flex justify-content-start`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${rightContent.dataBoxContainer} m-2 d-flex flex-column`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: `d-flex justify-content-center align-items-center`,\n            children: \"\\uC560\\uACAC \\uC131\\uBCC4\\uC5D0 \\uB530\\uB978 \\uB9E4\\uCE6D \\uB4F1\\uB85D \\uAC74\\uC218\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 416,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `${rightContent.dataBox} d-flex justify-content-center align-items-center`,\n            children: /*#__PURE__*/_jsxDEV(Line, {\n              data: dogSexData\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 422,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 419,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${rightContent.dataBoxContainer} m-2 d-flex flex-column`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: `d-flex justify-content-center align-items-center`,\n            children: \"\\uB9E4\\uCE6D \\uC644\\uB8CC \\uBE44\\uC728\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `${rightContent.dataBox} d-flex justify-content-center align-items-center`,\n            children: /*#__PURE__*/_jsxDEV(Bar, {\n              data: matchingState\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 434,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 431,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(AdminMainContent, \"9L4jeKDeWy2IHmxUySg/pHZj0GU=\");\n_c = AdminMainContent;\nexport default AdminMainContent;\n\n//--아래는 ai관리자 페이지를 시도하려했으나 시간상 생략한부분.\n{\n  /* <div className=\"d-flex flex-column justify-content-start\">\r\n          <img\r\n            alt=\"\"\r\n            className={styles.mainBanner}\r\n            src=\"/image/admin/openaiAutoMain.png\"\r\n          />\r\n            <p\r\n            className={`${rightContent.title}`}\r\n            // onClick={testGo}\r\n          >\r\n            Ai 관리자 컨설팅 메뉴\r\n          </p>\r\n            <div className={` d-flex jsutify-content-between algin-items-center`}>\r\n            <div\r\n              className={`${styles.leftContainer} d-flex jsutify-content-center algin-items-center`}\r\n            ></div>\r\n          </div>\r\n            <div className=\" d-flex justify-content-start\">\r\n            <div className={`${styles.leftContainer}`}>\r\n              <div>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <div className={`${styles.aiContents} ${styles.col12M1}`}>\r\n                    <AiSupportList\r\n                      subTitle=\"ai로 세부 작업을 제안합니다.\"\r\n                      title=\"To Do List\"\r\n                    ></AiSupportList>\r\n                  </div>\r\n                    <div\r\n                    className={`${styles.aiContentsContainer} d-flex justify-content-between align-items-center`}\r\n                  >\r\n                    <div className={`${styles.aiContents} ${styles.col4M1}`}>\r\n                      <AiSupportList\r\n                        subTitle=\"ai가 판단한\"\r\n                        title=\"현재 사업 단계\"\r\n                      ></AiSupportList>\r\n                    </div>\r\n                    <div className={`${styles.aiContents} ${styles.col4M1}`}>\r\n                      <AiSupportList\r\n                        subTitle=\"ai 추천\"\r\n                        title=\"사업 단계별 확장사업 추천\"\r\n                      ></AiSupportList>\r\n                    </div>\r\n                    <div className={`${styles.aiContents} ${styles.col4M1}`}>\r\n                      {\" \"}\r\n                      <AiSupportList\r\n                        subTitle=\"ai 추천\"\r\n                        title=\"확장사업별 세부작업 추천\"\r\n                      ></AiSupportList>\r\n                    </div>\r\n                  </div>\r\n                  <div\r\n                    className={`${styles.aiOutput} ${styles.col12M1} d-flex justify-content-center align-items-center`}\r\n                  >\r\n                    <div\r\n                      className={`d-flex justify-content-center align-items-center flex-column`}\r\n                    >\r\n                      {isContent ? (\r\n                        <AiOutput aiDogProfileImgUrl={aiDogProfileImgUrl} />\r\n                      ) : (\r\n                        <>\r\n                          <span className={`${styles.aiOutputTextExplain}`}>\r\n                            컨텐츠 표시 화면\r\n                          </span>\r\n                          <span\r\n                            className={`${styles.aiOutputText} ${styles.flicker}`}\r\n                          >\r\n                            I'll save your time.\r\n                          </span>\r\n                        </>\r\n                      )}\r\n                    </div>\r\n                    <div>\r\n                      <div\r\n                        className={`d-flex justify-content-center align-items-start flex-column`}\r\n                      ></div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className={`${styles.leftContainerElement} p-3`}></div>\r\n            </div>\r\n            <div\r\n              className={`${styles.rightContainer} d-flex flex-column justify-content-start`}\r\n            >\r\n              <div\r\n                className={`${styles.rightContainerElement} ${styles.relative} mt-2`}\r\n              >\r\n                <Alert variant=\"warning\">\r\n                  메뉴 설명\r\n                  <br></br>\r\n                  1. 화면의 ai 컨설팅들을 통해 사업을 확장하세요.<br></br>2.\r\n                  하단 채팅을 통해 세부 작업을 제안받으세요.{\" \"}\r\n                </Alert>\r\n                  <div\r\n                  className={`${styles.closeAd} d-flex justify-content-center align-items-center`}\r\n                >\r\n                  광고제거\r\n                </div>\r\n                <img\r\n                  alt=\"\"\r\n                  src=\"/image/admin/aiAdminAdBanner.png\"\r\n                  style={{ width: \"100%\" }}\r\n                ></img>\r\n              </div>\r\n              <div className={`${styles.rightContainerElement} mt-2`}>\r\n                <Banner\r\n                  imgSrc1=\"/image/admin/aiAdminAdBanner2.png\"\r\n                  imgSrc2=\"/image/admin/aiAdminAdBanner2.png\"\r\n                ></Banner>\r\n              </div>\r\n              <div className={`${styles.rightContainerElement} mt-2`}>\r\n                <Banner\r\n                  imgSrc1=\"/image/admin/aiAdminAdBanner3.png\"\r\n                  imgSrc2=\"/image/admin/aiAdminAdBanner3.png\"\r\n                ></Banner>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <ChatAi\r\n            AiImageInputText={AiImageInputText}\r\n            setAiImageInputText={setAiImageInputText}\r\n          ></ChatAi>\r\n            <div style={{ height: \"300px\" }}></div>\r\n        </div> */\n}\nvar _c;\n$RefreshReg$(_c, \"AdminMainContent\");","map":{"version":3,"names":["React","useState","useEffect","rightContent","styles","AiSupportList","Banner","AiOutput","Alert","ChatAi","axios","Pie","Bar","Doughnut","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","ArcElement","BarElement","Line","dogsBreed","jsxDEV","_jsxDEV","Fragment","_Fragment","register","AdminMainContent","_s","aiDogProfileImgUrl","setAiDogProfileImgUrl","AiImageInputText","setAiImageInputText","isContent","setIsContent","address","setAddress","locationOfUserData","setLocationOfUserData","labels","datasets","label","data","backgroundColor","borderColor","borderWidth","dogsData","setDogsData","map","breed","text","Array","length","fill","dogSexData","setDogSexData","matchingState","setMatchingState","get","then","res","countByCity","reduce","acc","item","city","split","dataForChart","prevData","catch","err","console","log","countByBreed","value","recentDates","i","date","Date","setDate","getDate","push","toISOString","dateCounts","male","female","neutralized","forEach","dog","createdAt","includes","isNeutralized","gender","total","completed","completionRates","children","className","dataBoxContainer","fileName","_jsxFileName","lineNumber","columnNumber","dataBox","rightContent2","_c","$RefreshReg$"],"sources":["C:/Spring Boot/workspacebranch/flirdog/src/main/webapp/src/components/admin/0관리자홈/AdminMainContent.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport rightContent from \"../../../css/admin/rightContent.module.css\";\r\nimport styles from \"../../../css/admin/adminMainContent.module.css\";\r\nimport AiSupportList from \"./AiSupportList\";\r\nimport Banner from \"./Banner\";\r\nimport AiOutput from \"./AiOutput\";\r\nimport { Alert } from \"react-bootstrap\";\r\nimport ChatAi from \"./ChatAi\";\r\nimport axios from \"axios\";\r\nimport { Pie, Bar, Doughnut } from \"react-chartjs-2\";\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n  ArcElement,\r\n  BarElement,\r\n} from \"chart.js\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport dogsBreed from \"../../login/join/dogsBreeds\";\r\n\r\nChartJS.register(\r\n  ArcElement,\r\n  Tooltip,\r\n  Legend,\r\n  BarElement,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  ArcElement,\r\n\r\n  CategoryScale\r\n);\r\n\r\n//---------------------------------\r\n\r\nconst AdminMainContent = () => {\r\n  const [aiDogProfileImgUrl, setAiDogProfileImgUrl] = useState(\"\");\r\n  const [AiImageInputText, setAiImageInputText] = useState(\"\");\r\n  const [isContent, setIsContent] = useState(false);\r\n  const [address, setAddress] = useState([]);\r\n\r\n  const [locationOfUserData, setLocationOfUserData] = useState({\r\n    labels: [\r\n      \"서울\",\r\n      \"부산\",\r\n      \"대구\",\r\n      \"인천\",\r\n      \"광주\",\r\n      \"대전\",\r\n      \"울산\",\r\n      \"세종\",\r\n      \"경기\",\r\n      \"강원\",\r\n      \"충북\",\r\n      \"충남\",\r\n      \"전북\",\r\n      \"전남\",\r\n      \"경북\",\r\n      \"경남\",\r\n      \"제주특별자치도\",\r\n    ],\r\n    datasets: [\r\n      {\r\n        label: \"인원수\",\r\n        data: [],\r\n        backgroundColor: [\r\n          \"rgba(255, 99, 132, 0.2)\", // 빨간색\r\n          \"rgba(54, 162, 235, 0.2)\", // 파란색\r\n          \"rgba(255, 206, 86, 0.2)\", // 노란색\r\n          \"rgba(75, 192, 192, 0.2)\", // 청록색\r\n          \"rgba(153, 102, 255, 0.2)\", // 보라색\r\n          \"rgba(255, 159, 64, 0.2)\", // 주황색\r\n          \"rgba(201, 203, 207, 0.2)\", // 회색\r\n          \"rgba(255, 99, 255, 0.2)\", // 분홍색\r\n          \"rgba(255, 159, 132, 0.2)\", // 살구색\r\n          \"rgba(54, 162, 132, 0.2)\", // 청록색 변형\r\n          \"rgba(255, 206, 175, 0.2)\", // 연노랑\r\n          \"rgba(75, 192, 255, 0.2)\", // 하늘색\r\n          \"rgba(153, 102, 132, 0.2)\", // 자주색\r\n          \"rgba(255, 99, 64, 0.2)\", // 다크오렌지\r\n          \"rgba(54, 162, 192, 0.2)\", // 다크블루\r\n          \"rgba(255, 206, 132, 0.2)\", // 연주황\r\n          \"rgba(75, 192, 132, 0.2)\", // 연청록\r\n        ],\r\n        borderColor: [\r\n          \"rgba(255, 99, 132, 1)\",\r\n          \"rgba(54, 162, 235, 1)\",\r\n          \"rgba(255, 206, 86, 1)\",\r\n          \"rgba(75, 192, 192, 1)\",\r\n          \"rgba(153, 102, 255, 1)\",\r\n          \"rgba(255, 159, 64, 1)\",\r\n          \"rgba(201, 203, 207, 1)\",\r\n          \"rgba(255, 99, 255, 1)\",\r\n          \"rgba(255, 159, 132, 1)\",\r\n          \"rgba(54, 162, 132, 1)\",\r\n          \"rgba(255, 206, 175, 1)\",\r\n          \"rgba(75, 192, 255, 1)\",\r\n          \"rgba(153, 102, 132, 1)\",\r\n          \"rgba(255, 99, 64, 1)\",\r\n          \"rgba(54, 162, 192, 1)\",\r\n          \"rgba(255, 206, 132, 1)\",\r\n          \"rgba(75, 192, 132, 1)\",\r\n        ],\r\n        borderWidth: 1,\r\n      },\r\n    ],\r\n  });\r\n\r\n  //-----지역별 강아지 종류 분포---------------\r\n  const [dogsData, setDogsData] = useState({\r\n    labels: dogsBreed.map((breed) => breed.text), // 한글 이름을 라벨로 사용\r\n    datasets: [\r\n      {\r\n        label: \"Dog Breed Count\",\r\n        data: Array(dogsBreed.length).fill(0), // 데이터 초기화\r\n        backgroundColor: [\r\n          \"rgba(255, 99, 132, 0.2)\",\r\n          \"rgba(54, 162, 235, 0.2)\",\r\n          \"rgba(255, 206, 86, 0.2)\",\r\n          \"rgba(75, 192, 192, 0.2)\",\r\n          \"rgba(153, 102, 255, 0.2)\",\r\n          \"rgba(255, 159, 64, 0.2)\",\r\n          \"rgba(199, 99, 132, 0.2)\",\r\n          \"rgba(54, 100, 235, 0.2)\",\r\n          \"rgba(255, 150, 86, 0.2)\",\r\n          \"rgba(75, 100, 192, 0.2)\",\r\n          \"rgba(153, 50, 255, 0.2)\",\r\n          \"rgba(255, 99, 64, 0.2)\",\r\n          \"rgba(195, 162, 132, 0.2)\",\r\n          \"rgba(54, 162, 200, 0.2)\",\r\n          \"rgba(255, 206, 150, 0.2)\",\r\n          \"rgba(100, 192, 192, 0.2)\",\r\n        ],\r\n        borderColor: [\r\n          \"rgba(255, 99, 132, 0.8)\",\r\n          \"rgba(54, 162, 235, 0.8)\",\r\n          \"rgba(255, 206, 86, 0.8)\",\r\n          \"rgba(75, 192, 192, 0.8)\",\r\n          \"rgba(153, 102, 255, 0.8)\",\r\n          \"rgba(255, 159, 64, 0.8)\",\r\n          \"rgba(199, 99, 132, 0.8)\",\r\n          \"rgba(54, 100, 235, 0.8)\",\r\n          \"rgba(255, 150, 86, 0.8)\",\r\n          \"rgba(75, 100, 192, 0.8)\",\r\n          \"rgba(153, 50, 255, 0.8)\",\r\n          \"rgba(255, 99, 64, 0.8)\",\r\n          \"rgba(195, 162, 132, 0.8)\",\r\n          \"rgba(54, 162, 200, 0.8)\",\r\n          \"rgba(255, 206, 150, 0.8)\",\r\n          \"rgba(100, 192, 192, 0.8)\",\r\n        ],\r\n        borderWidth: 1,\r\n      },\r\n    ],\r\n  });\r\n\r\n  //---------------------------------\r\n\r\n  //-----------애견 성별에 따른 매칭 건수----------\r\n  const [dogSexData, setDogSexData] = useState({\r\n    labels: [0],\r\n    datasets: [\r\n      {\r\n        label: \"여아\",\r\n        data: [],\r\n        borderColor: \"rgb(255, 99, 132)\",\r\n        backgroundColor: \"rgba(255, 99, 132, 0.5)\",\r\n      },\r\n      {\r\n        label: \"남아\",\r\n        data: [],\r\n        borderColor: \"rgb(53, 162, 235)\",\r\n        backgroundColor: \"rgba(53, 162, 235, 0.5)\",\r\n      },\r\n      {\r\n        label: \"중성견\",\r\n        data: [],\r\n        borderColor: \"rgb(87, 255, 87)\",\r\n        backgroundColor: \"rgb(87, 255, 87)\",\r\n      },\r\n    ],\r\n  });\r\n\r\n  ///--------------매칭 완료 비율--------------------\r\n  const [matchingState, setMatchingState] = useState({\r\n    labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"],\r\n    datasets: [\r\n      {\r\n        label: \"매칭 완료 비율\",\r\n        data: [60, 60, 70, 60, 80, 87, 90],\r\n        backgroundColor: \"rgba(255, 99, 132, 0.5)\",\r\n      },\r\n    ],\r\n  });\r\n\r\n  //------------신규 회원 지역 분포 ----------------\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"http://localhost:8080/admin/getAddress\")\r\n      .then((res) => {\r\n        setAddress(res.data);\r\n\r\n        const countByCity = res.data.reduce((acc, item) => {\r\n          const city = item.address.split(\" \")[0]; // 주소에서 첫 번째 단어(도시)를 추출\r\n          acc[city] = (acc[city] || 0) + 1; // 도시별 카운트\r\n          return acc;\r\n        }, {});\r\n\r\n        // 레이블 순서에 맞게 데이터 배열 생성\r\n        const dataForChart = locationOfUserData.labels.map((label) => {\r\n          return label === \"전체\" ? res.data.length : countByCity[label] || 0;\r\n        });\r\n\r\n        // 차트 데이터 업데이트\r\n        setLocationOfUserData((prevData) => ({\r\n          ...prevData,\r\n          datasets: [\r\n            {\r\n              ...prevData.datasets[0],\r\n              data: dataForChart,\r\n            },\r\n          ],\r\n        }));\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n\r\n    axios\r\n      .get(\"http://localhost:8080/admin/getDogList\")\r\n      .then((res) => {\r\n        console.log(\"개품종\");\r\n        console.log(res.data);\r\n        const countByBreed = res.data.reduce((acc, item) => {\r\n          const breed = item.dogsBreed; // 강아지 품종의 영어 이름 추출\r\n\r\n          acc[breed] = (acc[breed] || 0) + 1; // 품종별 카운트\r\n          return acc;\r\n        }, {});\r\n\r\n        // 레이블 순서에 맞게 데이터 배열 생성\r\n        // 영어 이름을 기준으로 데이터 배열 생성하되 라벨은 한글로 표시\r\n        const dataForChart = dogsBreed.map(\r\n          (breed) => countByBreed[breed.value] || 0\r\n        );\r\n\r\n        // 차트 데이터 업데이트\r\n        setDogsData((prevData) => ({\r\n          ...prevData,\r\n          datasets: [\r\n            {\r\n              ...prevData.datasets[0],\r\n              data: dataForChart,\r\n            },\r\n          ],\r\n        }));\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n\r\n    axios.get(\"http://localhost:8080/admin/getDogList\").then((res) => {\r\n      const dogsData = res.data;\r\n      const recentDates = [];\r\n\r\n      // 오늘 날짜를 기준으로 과거 7일의 날짜 생성\r\n      for (let i = 6; i >= 0; i--) {\r\n        const date = new Date();\r\n        date.setDate(date.getDate() - i);\r\n        recentDates.push(date.toISOString().split(\"T\")[0]);\r\n      }\r\n\r\n      // 날짜별 데이터 초기화\r\n      const dateCounts = recentDates.reduce((acc, date) => {\r\n        acc[date] = { male: 0, female: 0, neutralized: 0 };\r\n        return acc;\r\n      }, {});\r\n\r\n      // 날짜별로 각 개의 성별 및 중성화 여부 카운트\r\n      dogsData.forEach((dog) => {\r\n        const date = dog.createdAt.split(\"T\")[0];\r\n        if (recentDates.includes(date)) {\r\n          if (dog.isNeutralized) {\r\n            dateCounts[date].neutralized++;\r\n          } else if (dog.gender === \"Male\") {\r\n            dateCounts[date].male++;\r\n          } else if (dog.gender === \"Female\") {\r\n            dateCounts[date].female++;\r\n          }\r\n        }\r\n      });\r\n\r\n      setDogSexData((prevData) => ({\r\n        labels: recentDates, // 과거 7일의 날짜를 라벨로 설정 (최신 날짜가 먼저 오도록)\r\n        datasets: [\r\n          {\r\n            ...prevData.datasets[0],\r\n            data: recentDates.map((date) => dateCounts[date].female),\r\n          },\r\n          {\r\n            ...prevData.datasets[1],\r\n            data: recentDates.map((date) => dateCounts[date].male),\r\n          },\r\n          {\r\n            ...prevData.datasets[2],\r\n            data: recentDates.map((date) => dateCounts[date].neutralized),\r\n          },\r\n        ],\r\n      }));\r\n\r\n      axios\r\n        .get(\"http://localhost:8080/admin/getMatchingList\")\r\n        .then((res) => {\r\n          console.log(\"매칭리스트\");\r\n          console.log(res.data);\r\n          const recentDates = [];\r\n\r\n          // 오늘 날짜를 기준으로 과거 7일의 날짜 생성\r\n          for (let i = 6; i >= 0; i--) {\r\n            const date = new Date();\r\n            date.setDate(date.getDate() - i);\r\n            recentDates.push(date.toISOString().split(\"T\")[0]);\r\n          }\r\n\r\n          // 날짜별 데이터 초기화\r\n          const dateCounts = recentDates.reduce((acc, date) => {\r\n            acc[date] = { total: 0, completed: 0 };\r\n            return acc;\r\n          }, {});\r\n\r\n          // 날짜별로 매칭 완료여부 카운트\r\n          res.data.forEach((item) => {\r\n            const date = item.createdAt.split(\"T\")[0];\r\n            if (recentDates.includes(date)) {\r\n              dateCounts[date].total++;\r\n              if (item.matchingState !== \"매칭대기\") {\r\n                dateCounts[date].completed++;\r\n              }\r\n            }\r\n          });\r\n\r\n          // 매칭 완료 비율 계산\r\n          const completionRates = recentDates.map((date) => {\r\n            const { total, completed } = dateCounts[date];\r\n            return total > 0 ? (completed / total) * 100 : 0;\r\n          });\r\n          console.log(completionRates);\r\n\r\n          setMatchingState((prevData) => ({\r\n            ...prevData,\r\n            labels: recentDates,\r\n            datasets: [\r\n              {\r\n                ...prevData.datasets[0],\r\n                data: completionRates,\r\n              },\r\n            ],\r\n          }));\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(\"dogSexData\");\r\n    console.log(dogSexData);\r\n  }, [dogSexData]);\r\n\r\n  return (\r\n    <>\r\n      <div className={` d-flex justify-content-start flex-column`}>\r\n        <div\r\n          className={`${rightContent.rightContent} d-flex justify-content-start`}\r\n        >\r\n          <div\r\n            className={`${rightContent.dataBoxContainer} m-2 d-flex flex-column`}\r\n          >\r\n            <div className={`d-flex justify-content-center align-items-center`}>\r\n              신규 회원 지역 분포\r\n            </div>\r\n            <div\r\n              className={`${rightContent.dataBox} d-flex justify-content-center align-items-center`}\r\n            >\r\n              <Pie data={locationOfUserData} />\r\n            </div>\r\n          </div>\r\n          <div\r\n            className={`${rightContent.dataBoxContainer} m-2 d-flex flex-column`}\r\n          >\r\n            <div className={`d-flex justify-content-center align-items-center`}>\r\n              회원 강아지 종류 분포\r\n            </div>\r\n            <div\r\n              className={`${rightContent.dataBox} d-flex justify-content-center align-items-center`}\r\n            >\r\n              <Doughnut data={dogsData} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <div\r\n          className={`${rightContent.rightContent2} d-flex justify-content-start`}\r\n        >\r\n          <div\r\n            className={`${rightContent.dataBoxContainer} m-2 d-flex flex-column`}\r\n          >\r\n            <div className={`d-flex justify-content-center align-items-center`}>\r\n              애견 성별에 따른 매칭 등록 건수\r\n            </div>\r\n            <div\r\n              className={`${rightContent.dataBox} d-flex justify-content-center align-items-center`}\r\n            >\r\n              <Line data={dogSexData} />\r\n            </div>\r\n          </div>\r\n          <div\r\n            className={`${rightContent.dataBoxContainer} m-2 d-flex flex-column`}\r\n          >\r\n            <div className={`d-flex justify-content-center align-items-center`}>\r\n              매칭 완료 비율\r\n            </div>\r\n            <div\r\n              className={`${rightContent.dataBox} d-flex justify-content-center align-items-center`}\r\n            >\r\n              <Bar data={matchingState} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdminMainContent;\r\n\r\n//--아래는 ai관리자 페이지를 시도하려했으나 시간상 생략한부분.\r\n{\r\n  /* <div className=\"d-flex flex-column justify-content-start\">\r\n          <img\r\n            alt=\"\"\r\n            className={styles.mainBanner}\r\n            src=\"/image/admin/openaiAutoMain.png\"\r\n          />\r\n\r\n          <p\r\n            className={`${rightContent.title}`}\r\n            // onClick={testGo}\r\n          >\r\n            Ai 관리자 컨설팅 메뉴\r\n          </p>\r\n\r\n          <div className={` d-flex jsutify-content-between algin-items-center`}>\r\n            <div\r\n              className={`${styles.leftContainer} d-flex jsutify-content-center algin-items-center`}\r\n            ></div>\r\n          </div>\r\n\r\n          <div className=\" d-flex justify-content-start\">\r\n            <div className={`${styles.leftContainer}`}>\r\n              <div>\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                  <div className={`${styles.aiContents} ${styles.col12M1}`}>\r\n                    <AiSupportList\r\n                      subTitle=\"ai로 세부 작업을 제안합니다.\"\r\n                      title=\"To Do List\"\r\n                    ></AiSupportList>\r\n                  </div>\r\n\r\n                  <div\r\n                    className={`${styles.aiContentsContainer} d-flex justify-content-between align-items-center`}\r\n                  >\r\n                    <div className={`${styles.aiContents} ${styles.col4M1}`}>\r\n                      <AiSupportList\r\n                        subTitle=\"ai가 판단한\"\r\n                        title=\"현재 사업 단계\"\r\n                      ></AiSupportList>\r\n                    </div>\r\n                    <div className={`${styles.aiContents} ${styles.col4M1}`}>\r\n                      <AiSupportList\r\n                        subTitle=\"ai 추천\"\r\n                        title=\"사업 단계별 확장사업 추천\"\r\n                      ></AiSupportList>\r\n                    </div>\r\n                    <div className={`${styles.aiContents} ${styles.col4M1}`}>\r\n                      {\" \"}\r\n                      <AiSupportList\r\n                        subTitle=\"ai 추천\"\r\n                        title=\"확장사업별 세부작업 추천\"\r\n                      ></AiSupportList>\r\n                    </div>\r\n                  </div>\r\n                  <div\r\n                    className={`${styles.aiOutput} ${styles.col12M1} d-flex justify-content-center align-items-center`}\r\n                  >\r\n                    <div\r\n                      className={`d-flex justify-content-center align-items-center flex-column`}\r\n                    >\r\n                      {isContent ? (\r\n                        <AiOutput aiDogProfileImgUrl={aiDogProfileImgUrl} />\r\n                      ) : (\r\n                        <>\r\n                          <span className={`${styles.aiOutputTextExplain}`}>\r\n                            컨텐츠 표시 화면\r\n                          </span>\r\n                          <span\r\n                            className={`${styles.aiOutputText} ${styles.flicker}`}\r\n                          >\r\n                            I'll save your time.\r\n                          </span>\r\n                        </>\r\n                      )}\r\n                    </div>\r\n                    <div>\r\n                      <div\r\n                        className={`d-flex justify-content-center align-items-start flex-column`}\r\n                      ></div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className={`${styles.leftContainerElement} p-3`}></div>\r\n            </div>\r\n            <div\r\n              className={`${styles.rightContainer} d-flex flex-column justify-content-start`}\r\n            >\r\n              <div\r\n                className={`${styles.rightContainerElement} ${styles.relative} mt-2`}\r\n              >\r\n                <Alert variant=\"warning\">\r\n                  메뉴 설명\r\n                  <br></br>\r\n                  1. 화면의 ai 컨설팅들을 통해 사업을 확장하세요.<br></br>2.\r\n                  하단 채팅을 통해 세부 작업을 제안받으세요.{\" \"}\r\n                </Alert>\r\n\r\n                <div\r\n                  className={`${styles.closeAd} d-flex justify-content-center align-items-center`}\r\n                >\r\n                  광고제거\r\n                </div>\r\n                <img\r\n                  alt=\"\"\r\n                  src=\"/image/admin/aiAdminAdBanner.png\"\r\n                  style={{ width: \"100%\" }}\r\n                ></img>\r\n              </div>\r\n              <div className={`${styles.rightContainerElement} mt-2`}>\r\n                <Banner\r\n                  imgSrc1=\"/image/admin/aiAdminAdBanner2.png\"\r\n                  imgSrc2=\"/image/admin/aiAdminAdBanner2.png\"\r\n                ></Banner>\r\n              </div>\r\n              <div className={`${styles.rightContainerElement} mt-2`}>\r\n                <Banner\r\n                  imgSrc1=\"/image/admin/aiAdminAdBanner3.png\"\r\n                  imgSrc2=\"/image/admin/aiAdminAdBanner3.png\"\r\n                ></Banner>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <ChatAi\r\n            AiImageInputText={AiImageInputText}\r\n            setAiImageInputText={setAiImageInputText}\r\n          ></ChatAi>\r\n\r\n          <div style={{ height: \"300px\" }}></div>\r\n        </div> */\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}