{"ast":null,"code":"var _jsxFileName = \"C:\\\\Spring Boot\\\\workspacebranch\\\\flirdog\\\\src\\\\main\\\\webapp\\\\src\\\\components\\\\somoim\\\\detail\\\\ImageModify.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useRef, useState } from 'react';\nimport styles from '../../../css/somoim/detail/modal_styles.module.css';\nimport { UserContext } from '../../../contexts/UserContext';\nimport { Button, Carousel, Form, InputGroup, Modal } from 'react-bootstrap';\nimport axios from 'axios';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ImageModify = ({\n  modifiedPhotoInfo\n}) => {\n  _s();\n  console.log('Selected Photo Info - Modify :', modifiedPhotoInfo);\n  const {\n    user\n  } = useContext(UserContext); // 유저 컨텍스트\n  console.log('사진첩 수정창에서 부르는 로그인 유저 아이디 : ' + (user ? user.id : 'User 정보 없음'));\n\n  // 이미지 정보\n  const {\n    createdAt,\n    modifiedAt,\n    id,\n    photoTitle,\n    photoContent,\n    photoLink,\n    photoLike,\n    hit,\n    somoimPhoto,\n    somoim\n  } = modifiedPhotoInfo;\n  console.log('사진첩 수정페이지 somoimId : ', somoim.id);\n  const [pinDetails, setPinDetails] = useState({\n    id: id,\n    user: {\n      id: user.id\n    },\n    photoTitle: modifiedPhotoInfo.photoTitle || '',\n    photoContent: modifiedPhotoInfo.photoContent || '',\n    photoLink: modifiedPhotoInfo.photoLink || '',\n    hit: hit,\n    photoLike: photoLike,\n    somoim: {\n      id: Number(somoim.id)\n    }\n  });\n  const [images, setImages] = useState([]); // (미리보기) 이미지배열\n  const [currentImageIndex, setCurrentImageIndex] = useState(0); // (미리보기) 현재 표시되는 이미지의 인덱스스\n  const [imgFiles, setImgFiles] = useState([]); // (실제 업로드) 이미지 배열\n\n  const [newImages, setNewImages] = useState([]); // 새로 업로드한 (미리보기) 이미지 배열\n  const [newImgFiles, setNewImgFiles] = useState([]); // 새로 업로드한 (실제 업로드) 이미지 배열\n\n  const [somoimPhotoList, setSomoimPhotoList] = useState([]); // 소모임 사진 목록\n\n  const imageRef = useRef(null); // 이미지 엘리먼트에 대한 참조를 만듦\n  const navigate = useNavigate(); // 저장 후 새로고침 및 취소 후 뒤로가기\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setPinDetails(prevDetails => ({\n      ...prevDetails,\n      [name]: value\n    }));\n    console.log('pinDetails : ', pinDetails);\n  };\n  const [imagesLoaded, setImagesLoaded] = useState(false);\n  useEffect(() => {\n    if (modifiedPhotoInfo && modifiedPhotoInfo.somoimPhoto) {\n      const photoArray = modifiedPhotoInfo.somoimPhoto.replace(/\"/g, '').split(',');\n      setSomoimPhotoList(photoArray);\n      setImagesLoaded(true);\n    }\n  }, [modifiedPhotoInfo, newImages]);\n\n  // 이미지 미리보기\n  // const uploadImg = (event) => {\n  //     if (event.target.files && event.target.files.length > 0 && newImages.length < 5) {\n  //         const newImagesArray = [];\n\n  //         for (let i = 0; i < event.target.files.length; i++) {\n  //             const reader = new FileReader();\n\n  //             reader.onload = function () {\n  //                 newImagesArray.push(reader.result);\n  //             };\n\n  //             reader.readAsDataURL(event.target.files[i]);\n  //         }\n\n  //         // 새 이미지로 대체\n  //         //setSomoimPhotoList(newImagesArray)\n  //         setNewImages(newImagesArray);\n  //     }\n  // };\n\n  const uploadImg = event => {\n    if (event.target.files && event.target.files.length > 0 && newImages.length < 5) {\n      setImagesLoaded(false);\n      const newImagesArray = [];\n      const newImgFilesArray = [];\n      for (let i = 0; i < event.target.files.length; i++) {\n        const reader = new FileReader();\n        reader.onload = function () {\n          setSomoimPhotoList([]);\n          newImagesArray.push(reader.result);\n          setCurrentImageIndex(newImagesArray.length - 1);\n        };\n        reader.readAsDataURL(event.target.files[i]);\n        newImgFilesArray.push(event.target.files[i]);\n      }\n\n      // 새 이미지로 대체\n      setSomoimPhotoList(newImagesArray);\n      setNewImages(newImagesArray);\n      setNewImgFiles(newImgFilesArray);\n\n      // 이미지 로딩 상태 업데이트\n      setImagesLoaded(true);\n    }\n  };\n  const getFullNCloudStorageURL = imagePath => {\n    // 여기에 ncloud storage URL을 추가하는 로직을 작성\n    if (imagePath.startsWith('data:image/')) {\n      // 새로 업로드한 이미지의 경우 URL을 생성하지 않음\n      return imagePath;\n    } else {\n      // 기존 이미지의 경우 URL을 생성\n      return `https://kr.object.ncloudstorage.com/bitcamp-edu-bucket-112/${imagePath}`;\n    }\n  };\n\n  //const [somoimPhotoValue, setSomoimPhotoValue] = useState('');\n\n  useEffect(() => {\n    if (somoimPhotoList.length > 0) {\n      //setSomoimPhotoValue(somoimPhotoList.join(','));\n    }\n  }, [somoimPhotoList]);\n\n  // 이미지 전송\n  const savePin = async () => {\n    if (!imagesLoaded) {\n      alert('이미지가 아직 로딩 중입니다. 기다려주세요.');\n      return;\n    }\n    if (window.confirm(\"저장 하시겠습니까?\")) {\n      const formData = new FormData();\n\n      // 기존 이미지를 추가\n      for (let i = 0; i < somoimPhotoList.length; i++) {\n        formData.append(\"imgFiles\", somoimPhotoList[i]);\n      }\n\n      // 새 이미지를 추가\n      for (let i = 0; i < newImgFiles.length; i++) {\n        formData.append(\"newImgFiles\", newImgFiles[i]);\n      }\n\n      // pinDetails를 추가\n      formData.append(\"pinDetails\", new Blob([JSON.stringify(pinDetails)], {\n        type: \"application/json\"\n      }));\n\n      // formData 내용 확인\n      for (let pair of formData.entries()) {\n        const [key, value] = pair;\n        if (value instanceof File) {\n          console.log(key, value.name);\n        } else {\n          console.log(key, value);\n        }\n      }\n      try {\n        const config = {\n          headers: {\n            \"Content-Type\": \"multipart/form-data\"\n          }\n        };\n        await axios.post('/somoim/somoimPhotoUpdate', formData, config).then(res => {\n          console.log('업로드 후 formData', res.data);\n          alert('사진 업로드가 완료되었습니다.');\n          //<Link to={`/somoim/detailPhoto/${somoim.id}?photoId=${id}`}>돌아가기</Link>\n          // navigate(`/somoim/detailPhoto/${somoim.id}?photoId=${id}`);\n          // console.log('navigate 호출 확인');\n          window.location.href = `/somoim/detailPhoto/${somoim.id}?photoId=${id}`;\n        }).catch(e => console.log(e));\n      } catch (error) {\n        console.error('이미지 업로드 오류 : ', error);\n      }\n    }\n  };\n  // 이미지 전송\n  // const savePin = async () => {\n  //     if (!imagesLoaded) {\n  //         alert('이미지가 아직 로딩 중입니다. 기다려주세요.');\n  //         return;\n  //     }\n\n  //     if (window.confirm(\"저장 하시겠습니까?\")) {\n  //         const formData = new FormData();\n\n  //         // 기존 이미지를 추가\n  //         for (let i = 0; i < somoimPhotoList.length; i++) {\n  //             formData.append(\"imgFiles\", somoimPhotoList[i]);\n  //         }\n\n  //         // 새 이미지를 추가\n  //         for (let i = 0; i < newImgFiles.length; i++) {\n  //             formData.append(\"imgFiles\", newImgFiles[i]);\n  //         }\n\n  //         // pinDetails를 추가\n  //         formData.append(\n  //             \"pinDetails\",\n  //             new Blob([JSON.stringify(pinDetails)], { type: \"application/json\" })\n  //         );\n\n  //         try {\n  //             const config = {\n  //                 headers: {\n  //                     \"Content-Type\": \"multipart/form-data\",\n  //                 },\n  //             };\n\n  //             await axios.post('/somoim/somoimPhotoUpdate', formData, config)\n  //                 .then(res => {\n  //                     console.log('업로드 후 formData', res.data);\n  //                     alert('사진 업로드가 완료되었습니다.');\n  //                     // 업로드 성공 시 onSavePin 콜백(사용자 정의 함수) 호출\n  //                 }).catch(e => console.log(e));\n  //         } catch (error) {\n  //             console.error('이미지 업로드 오류 : ', error);\n  //         }\n  //     }\n  // };\n\n  // 데이터 URI를 Blob으로 변환하는 함수\n  const dataURItoBlob = dataURI => {\n    const byteString = atob(dataURI.split(',')[1]);\n    const ab = new ArrayBuffer(byteString.length);\n    const ia = new Uint8Array(ab);\n    for (let i = 0; i < byteString.length; i++) {\n      ia[i] = byteString.charCodeAt(i);\n    }\n    return new Blob([ab], {\n      type: 'image/png'\n    }); // 이미지 타입에 맞게 변경\n  };\n\n  // 이미지 미리보기 캐러셀\n  const generateCarouselItems = () => {\n    // 기존 이미지와 새 이미지를 합친 배열 생성\n    const allImages = [...somoimPhotoList, ...newImages];\n\n    // 해당 배열을 기반으로 Carousel의 items 생성\n    const carouselItems = allImages.map((image, index) => /*#__PURE__*/_jsxDEV(Carousel.Item, {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        className: `${styles.pin_image}`,\n        src: getFullNCloudStorageURL(image),\n        alt: `slide-${index}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 17\n      }, this)\n    }, `image-${index}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 13\n    }, this));\n    return carouselItems;\n  };\n\n  // 취소 후 뒤로가기\n  const handleCancel = () => {\n    //navigate(`/somoim/detailPhoto/${somoim.id}?photoId=${id}`);\n    window.location.href = `/somoim/detailPhoto/${somoim.id}?photoId=${id}`;\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${styles.add_pin_modal} `,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        style: {\n          padding: '0.8rem',\n          backgroundColor: 'pink',\n          color: 'white'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            width: '95%'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Modal.Title, {\n            children: [\"\\uC81C\\uBAA9 : \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: photoTitle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 30\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              marginLeft: 'auto'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              style: {\n                marginLeft: 'auto',\n                marginRight: '1rem',\n                backgroundColor: 'pink'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 29\n            }, this), \"\\uC870\\uD68C\\uC218 : \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${styles.add_pin_container}`,\n        children: /*#__PURE__*/_jsxDEV(Modal.Body, {\n          className: \"d-flex justify-content-center\",\n          style: {\n            overflow: 'hidden',\n            display: 'flex',\n            flexDirection: 'row',\n            paddingBottom: '0px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: `${styles.side}`,\n            id: `${styles.left_side}`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: `${styles.section2}`,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `${styles.modals_pin} mb-5`,\n                style: {\n                  display: 'block',\n                  height: 'fit-content'\n                },\n                children: imagesLoaded && /*#__PURE__*/_jsxDEV(Carousel, {\n                  \"data-bs-theme\": \"dark\",\n                  activeIndex: currentImageIndex,\n                  onSelect: selectedIndex => setCurrentImageIndex(selectedIndex),\n                  interval: null,\n                  style: {\n                    textAlign: 'center'\n                  },\n                  children: generateCarouselItems()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 305,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `${styles.section2}`,\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"upload_img\",\n                id: styles.upload_img_label,\n                style: {\n                  display: 'block'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `${styles.upload_img_container}`,\n                  style: {\n                    height: 'fit-content'\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    id: `${styles.dotted_border}`,\n                    style: {\n                      height: 'fit-content'\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: `${styles.pint_mock_icon_container}`,\n                      style: {\n                        marginBottom: '0px'\n                      },\n                      children: /*#__PURE__*/_jsxDEV(\"img\", {\n                        src: \"/image/somoim/up-arrow.png\",\n                        alt: \"upload_img\",\n                        className: `${styles.pint_mock_icon}`\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 325,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 323,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: `${styles.save_from_site}`,\n                      children: \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 327,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 322,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 321,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  onChange: uploadImg,\n                  type: \"file\",\n                  name: \"upload_img\",\n                  id: \"upload_img\",\n                  value: \"\",\n                  multiple: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 331,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `${styles.side}`,\n            id: `${styles.right_side}`,\n            children: [\"\\uC5C5\\uB85C\\uB4DC\\uD558\\uB294 \\uC720\\uC800\\uC758 \\uC774\\uB984 : \", user.name, \" / id\\uBC88\\uD638 : \", user.id, /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `${styles.section2} gap-3`,\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: `${styles.new_pin_input} pin_title`,\n                id: `${styles.pin_title}_title`,\n                name: \"photoTitle\" // name을 추가\n                ,\n                value: pinDetails.photoTitle // value를 상태 변수로 설정\n                ,\n                onChange: handleChange // onChange 이벤트 추가\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 346,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                type: \"text\",\n                className: `${styles.new_pin_input} pin_description`,\n                id: `${styles.pin_description}_content`,\n                name: \"photoContent\" // name을 추가\n                ,\n                value: pinDetails.photoContent // value를 상태 변수로 설정\n                ,\n                onChange: handleChange // onChange 이벤트 추가\n                ,\n                style: {\n                  height: '15rem'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 354,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: `${styles.new_pin_input} pin_destination`,\n                id: `${styles.pin_destination}_link`,\n                name: \"photoLink\" // name을 추가\n                ,\n                value: pinDetails.photoLink // value를 상태 변수로 설정\n                ,\n                onChange: handleChange // onChange 이벤트 추가\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 363,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 345,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        style: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          backgroundColor: 'pink',\n          color: 'white'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginRight: '0.5rem',\n            gap: '2'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"danger\",\n            size: \"sm\",\n            onClick: savePin,\n            children: \"\\uC800\\uC7A5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"danger\",\n            size: \"sm\",\n            onClick: handleCancel,\n            style: {\n              marginLeft: '0.7rem'\n            },\n            children: \"\\uCDE8\\uC18C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(ImageModify, \"TYrCGHBQhpQ6VWmeF+/kvS4QBY4=\", false, function () {\n  return [useNavigate];\n});\n_c = ImageModify;\nexport default ImageModify;\nvar _c;\n$RefreshReg$(_c, \"ImageModify\");","map":{"version":3,"names":["React","useContext","useEffect","useRef","useState","styles","UserContext","Button","Carousel","Form","InputGroup","Modal","axios","Link","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","ImageModify","modifiedPhotoInfo","_s","console","log","user","id","createdAt","modifiedAt","photoTitle","photoContent","photoLink","photoLike","hit","somoimPhoto","somoim","pinDetails","setPinDetails","Number","images","setImages","currentImageIndex","setCurrentImageIndex","imgFiles","setImgFiles","newImages","setNewImages","newImgFiles","setNewImgFiles","somoimPhotoList","setSomoimPhotoList","imageRef","navigate","handleChange","e","name","value","target","prevDetails","imagesLoaded","setImagesLoaded","photoArray","replace","split","uploadImg","event","files","length","newImagesArray","newImgFilesArray","i","reader","FileReader","onload","push","result","readAsDataURL","getFullNCloudStorageURL","imagePath","startsWith","savePin","alert","window","confirm","formData","FormData","append","Blob","JSON","stringify","type","pair","entries","key","File","config","headers","post","then","res","data","location","href","catch","error","dataURItoBlob","dataURI","byteString","atob","ab","ArrayBuffer","ia","Uint8Array","charCodeAt","generateCarouselItems","allImages","carouselItems","map","image","index","Item","children","className","pin_image","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","handleCancel","add_pin_modal","Header","closeButton","style","padding","backgroundColor","color","display","justifyContent","alignItems","width","Title","marginLeft","marginRight","add_pin_container","Body","overflow","flexDirection","paddingBottom","side","left_side","section2","modals_pin","height","activeIndex","onSelect","selectedIndex","interval","textAlign","htmlFor","upload_img_label","upload_img_container","dotted_border","pint_mock_icon_container","marginBottom","pint_mock_icon","save_from_site","onChange","multiple","right_side","new_pin_input","pin_title","pin_description","pin_destination","Footer","gap","variant","size","onClick","_c","$RefreshReg$"],"sources":["C:/Spring Boot/workspacebranch/flirdog/src/main/webapp/src/components/somoim/detail/ImageModify.js"],"sourcesContent":["import React, { useContext, useEffect, useRef, useState } from 'react';\r\n\r\nimport styles from '../../../css/somoim/detail/modal_styles.module.css';\r\nimport { UserContext } from '../../../contexts/UserContext';\r\nimport { Button, Carousel, Form, InputGroup, Modal } from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\n\r\nconst ImageModify = ({ modifiedPhotoInfo }) => {\r\n    console.log('Selected Photo Info - Modify :', modifiedPhotoInfo);\r\n\r\n    const { user } = useContext(UserContext); // 유저 컨텍스트\r\n    console.log('사진첩 수정창에서 부르는 로그인 유저 아이디 : ' + (user ? user.id : 'User 정보 없음'));\r\n\r\n    // 이미지 정보\r\n    const { createdAt, modifiedAt, id, photoTitle, photoContent, \r\n        photoLink, photoLike, hit, somoimPhoto, somoim } = modifiedPhotoInfo;\r\n    console.log('사진첩 수정페이지 somoimId : ', somoim.id)\r\n\r\n    const [pinDetails, setPinDetails] = useState({\r\n        id: id,\r\n        user : {\r\n            id: user.id\r\n        },\r\n        photoTitle: modifiedPhotoInfo.photoTitle || '',\r\n        photoContent: modifiedPhotoInfo.photoContent || '',\r\n        photoLink: modifiedPhotoInfo.photoLink || '',\r\n        hit: hit,\r\n        photoLike: photoLike,\r\n        somoim : {\r\n            id : Number(somoim.id)\r\n        }\r\n    });\r\n\r\n    const [images, setImages] = useState([]);  // (미리보기) 이미지배열\r\n    const [currentImageIndex, setCurrentImageIndex] = useState(0); // (미리보기) 현재 표시되는 이미지의 인덱스스\r\n    const [imgFiles, setImgFiles] = useState([]); // (실제 업로드) 이미지 배열\r\n\r\n    const [newImages, setNewImages] = useState([]);  // 새로 업로드한 (미리보기) 이미지 배열\r\n    const [newImgFiles, setNewImgFiles] = useState([]); // 새로 업로드한 (실제 업로드) 이미지 배열\r\n\r\n    const [somoimPhotoList, setSomoimPhotoList] = useState([]); // 소모임 사진 목록\r\n\r\n    const imageRef = useRef(null); // 이미지 엘리먼트에 대한 참조를 만듦\r\n    const navigate = useNavigate(); // 저장 후 새로고침 및 취소 후 뒤로가기\r\n    \r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setPinDetails((prevDetails) => ({\r\n            ...prevDetails,\r\n            [name]: value,\r\n        }));\r\n\r\n        console.log('pinDetails : ', pinDetails)\r\n    };\r\n\r\n    const [imagesLoaded, setImagesLoaded] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (modifiedPhotoInfo && modifiedPhotoInfo.somoimPhoto) {\r\n            const photoArray = modifiedPhotoInfo.somoimPhoto.replace(/\"/g, '').split(',');\r\n            setSomoimPhotoList(photoArray);\r\n            setImagesLoaded(true);\r\n          }\r\n    }, [modifiedPhotoInfo, newImages]);\r\n\r\n\r\n    // 이미지 미리보기\r\n    // const uploadImg = (event) => {\r\n    //     if (event.target.files && event.target.files.length > 0 && newImages.length < 5) {\r\n    //         const newImagesArray = [];\r\n\r\n    //         for (let i = 0; i < event.target.files.length; i++) {\r\n    //             const reader = new FileReader();\r\n\r\n    //             reader.onload = function () {\r\n    //                 newImagesArray.push(reader.result);\r\n    //             };\r\n\r\n    //             reader.readAsDataURL(event.target.files[i]);\r\n    //         }\r\n\r\n    //         // 새 이미지로 대체\r\n    //         //setSomoimPhotoList(newImagesArray)\r\n    //         setNewImages(newImagesArray);\r\n    //     }\r\n    // };\r\n\r\n    const uploadImg = (event) => {\r\n        if (event.target.files && event.target.files.length > 0 && newImages.length < 5) {\r\n          setImagesLoaded(false);\r\n        \r\n          const newImagesArray = [];\r\n          const newImgFilesArray = [];\r\n        \r\n          for (let i = 0; i < event.target.files.length; i++) {\r\n            const reader = new FileReader();\r\n        \r\n            reader.onload = function () {\r\n              setSomoimPhotoList([])\r\n              newImagesArray.push(reader.result);\r\n              setCurrentImageIndex(newImagesArray.length - 1);\r\n            };\r\n        \r\n            reader.readAsDataURL(event.target.files[i]);\r\n            newImgFilesArray.push(event.target.files[i]);\r\n          }\r\n        \r\n            // 새 이미지로 대체\r\n            setSomoimPhotoList(newImagesArray);\r\n            setNewImages(newImagesArray);\r\n            setNewImgFiles(newImgFilesArray);\r\n\r\n            // 이미지 로딩 상태 업데이트\r\n            setImagesLoaded(true);\r\n            }\r\n      };\r\n\r\n    const getFullNCloudStorageURL = (imagePath) => {\r\n        // 여기에 ncloud storage URL을 추가하는 로직을 작성\r\n        if (imagePath.startsWith('data:image/')) {\r\n            // 새로 업로드한 이미지의 경우 URL을 생성하지 않음\r\n            return imagePath;\r\n        } else {\r\n            // 기존 이미지의 경우 URL을 생성\r\n            return `https://kr.object.ncloudstorage.com/bitcamp-edu-bucket-112/${imagePath}`;\r\n        }\r\n    };\r\n\r\n    //const [somoimPhotoValue, setSomoimPhotoValue] = useState('');\r\n\r\n    useEffect(() => {\r\n        if (somoimPhotoList.length > 0) {\r\n            //setSomoimPhotoValue(somoimPhotoList.join(','));\r\n        }\r\n    }, [somoimPhotoList]);\r\n\r\n\r\n    // 이미지 전송\r\n    const savePin = async () => {\r\n        if (!imagesLoaded) {\r\n            alert('이미지가 아직 로딩 중입니다. 기다려주세요.');\r\n            return;\r\n        }\r\n\r\n        if (window.confirm(\"저장 하시겠습니까?\")) {\r\n            const formData = new FormData();\r\n\r\n            // 기존 이미지를 추가\r\n            for (let i = 0; i < somoimPhotoList.length; i++) {\r\n                formData.append(\"imgFiles\", somoimPhotoList[i]);\r\n            }\r\n\r\n            // 새 이미지를 추가\r\n            for (let i = 0; i < newImgFiles.length; i++) {\r\n                formData.append(\"newImgFiles\", newImgFiles[i]);\r\n            }\r\n\r\n            // pinDetails를 추가\r\n            formData.append(\r\n                \"pinDetails\",\r\n                new Blob([JSON.stringify(pinDetails)], { type: \"application/json\" })\r\n            );\r\n\r\n            // formData 내용 확인\r\n            for (let pair of formData.entries()) {\r\n                const [key, value] = pair;\r\n    \r\n                if (value instanceof File) {\r\n                    console.log(key, value.name);\r\n                } else {\r\n                    console.log(key, value);\r\n                }\r\n            }\r\n\r\n            try {\r\n                const config = {\r\n                    headers: {\r\n                        \"Content-Type\": \"multipart/form-data\",\r\n                    },\r\n                };\r\n   \r\n                await axios.post('/somoim/somoimPhotoUpdate', formData, config)\r\n                    .then(res => {\r\n                        console.log('업로드 후 formData', res.data);\r\n                        alert('사진 업로드가 완료되었습니다.');\r\n                        //<Link to={`/somoim/detailPhoto/${somoim.id}?photoId=${id}`}>돌아가기</Link>\r\n                        // navigate(`/somoim/detailPhoto/${somoim.id}?photoId=${id}`);\r\n                        // console.log('navigate 호출 확인');\r\n                        window.location.href = `/somoim/detailPhoto/${somoim.id}?photoId=${id}`;\r\n                    }).catch(e => console.log(e));\r\n                } catch (error) {\r\n                    console.error('이미지 업로드 오류 : ', error);\r\n                    \r\n                }\r\n            }\r\n           \r\n    };\r\n    // 이미지 전송\r\n    // const savePin = async () => {\r\n    //     if (!imagesLoaded) {\r\n    //         alert('이미지가 아직 로딩 중입니다. 기다려주세요.');\r\n    //         return;\r\n    //     }\r\n\r\n    //     if (window.confirm(\"저장 하시겠습니까?\")) {\r\n    //         const formData = new FormData();\r\n\r\n    //         // 기존 이미지를 추가\r\n    //         for (let i = 0; i < somoimPhotoList.length; i++) {\r\n    //             formData.append(\"imgFiles\", somoimPhotoList[i]);\r\n    //         }\r\n\r\n    //         // 새 이미지를 추가\r\n    //         for (let i = 0; i < newImgFiles.length; i++) {\r\n    //             formData.append(\"imgFiles\", newImgFiles[i]);\r\n    //         }\r\n\r\n    //         // pinDetails를 추가\r\n    //         formData.append(\r\n    //             \"pinDetails\",\r\n    //             new Blob([JSON.stringify(pinDetails)], { type: \"application/json\" })\r\n    //         );\r\n\r\n    //         try {\r\n    //             const config = {\r\n    //                 headers: {\r\n    //                     \"Content-Type\": \"multipart/form-data\",\r\n    //                 },\r\n    //             };\r\n\r\n    //             await axios.post('/somoim/somoimPhotoUpdate', formData, config)\r\n    //                 .then(res => {\r\n    //                     console.log('업로드 후 formData', res.data);\r\n    //                     alert('사진 업로드가 완료되었습니다.');\r\n    //                     // 업로드 성공 시 onSavePin 콜백(사용자 정의 함수) 호출\r\n    //                 }).catch(e => console.log(e));\r\n    //         } catch (error) {\r\n    //             console.error('이미지 업로드 오류 : ', error);\r\n    //         }\r\n    //     }\r\n    // };\r\n\r\n\r\n    // 데이터 URI를 Blob으로 변환하는 함수\r\n    const dataURItoBlob = (dataURI) => {\r\n        const byteString = atob(dataURI.split(',')[1]);\r\n        const ab = new ArrayBuffer(byteString.length);\r\n        const ia = new Uint8Array(ab);\r\n        for (let i = 0; i < byteString.length; i++) {\r\n            ia[i] = byteString.charCodeAt(i);\r\n        }\r\n        return new Blob([ab], { type: 'image/png' }); // 이미지 타입에 맞게 변경\r\n    };\r\n    \r\n    // 이미지 미리보기 캐러셀\r\n    const generateCarouselItems = () => {\r\n        // 기존 이미지와 새 이미지를 합친 배열 생성\r\n        const allImages = [...somoimPhotoList, ...newImages];\r\n      \r\n        // 해당 배열을 기반으로 Carousel의 items 생성\r\n        const carouselItems = allImages.map((image, index) => (\r\n            <Carousel.Item key={`image-${index}`}>\r\n                <img className={`${styles.pin_image}`} src={getFullNCloudStorageURL(image)} alt={`slide-${index}`} />\r\n            </Carousel.Item>\r\n        ));\r\n        \r\n      \r\n        return carouselItems;\r\n    };\r\n\r\n\r\n    // 취소 후 뒤로가기\r\n    const handleCancel = () => {\r\n        //navigate(`/somoim/detailPhoto/${somoim.id}?photoId=${id}`);\r\n        window.location.href = `/somoim/detailPhoto/${somoim.id}?photoId=${id}`;\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className={`${styles.add_pin_modal} `}>\r\n            <Modal.Header closeButton style={{ padding: '0.8rem', backgroundColor: 'pink', color: 'white' }}>\r\n                    <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', width: '95%' }}>\r\n                        <Modal.Title>\r\n                        제목 : <strong>{photoTitle}</strong>\r\n                        </Modal.Title>        \r\n                        <span style={{ marginLeft: 'auto' }}>\r\n                            <button style={{ marginLeft: 'auto', marginRight:'1rem', backgroundColor: 'pink' }}>\r\n\r\n                            </button>\r\n                            조회수 : </span>\r\n                    </div>\r\n                </Modal.Header>\r\n                <div className={`${styles.add_pin_container}`}>\r\n                    <Modal.Body\r\n                    className=\"d-flex justify-content-center\"\r\n                    style={{ overflow: 'hidden', display: 'flex', flexDirection: 'row', paddingBottom: '0px' }}\r\n                    >\r\n                        <div className={`${styles.side}`} id={`${styles.left_side}`}>\r\n                            <div className={`${styles.section2}`}>\r\n                                \r\n                                <div className={`${styles.modals_pin} mb-5`}\r\n                                    style={{display: 'block', height: 'fit-content' }}>\r\n                                        {imagesLoaded && (\r\n                                    <Carousel\r\n                                        data-bs-theme=\"dark\"\r\n                                        activeIndex={currentImageIndex}\r\n                                        onSelect={(selectedIndex) => setCurrentImageIndex(selectedIndex)}\r\n                                        interval={null}\r\n                                        style={{ textAlign: 'center' }}\r\n                                    >\r\n                                    {generateCarouselItems()}\r\n                                    </Carousel>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                            \r\n                            <div className={`${styles.section2}`}>\r\n                                <label htmlFor=\"upload_img\" id={styles.upload_img_label} \r\n                                    style={{ display: 'block' }}>\r\n                                    <div className={`${styles.upload_img_container}`} style={{ height: 'fit-content' }}>\r\n                                        <div id={`${styles.dotted_border}`} style={{ height: 'fit-content' }}>\r\n                                            <div className={`${styles.pint_mock_icon_container}`} \r\n                                                    style={{ marginBottom: '0px' }}>\r\n                                                <img src=\"/image/somoim/up-arrow.png\" alt=\"upload_img\" className={`${styles.pint_mock_icon}`} />\r\n                                            </div>\r\n                                            <div className={`${styles.save_from_site}`}>이미지 업로드</div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <input\r\n                                        onChange={uploadImg}\r\n                                        type=\"file\"\r\n                                        name=\"upload_img\"\r\n                                        id=\"upload_img\"\r\n                                        value=\"\"\r\n                                        multiple\r\n                                    />\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                        <div className={`${styles.side}`} id={`${styles.right_side}`}>\r\n                            업로드하는 유저의 이름 : {user.name} / id번호 : {user.id}\r\n\r\n                            <div className={`${styles.section2} gap-3`}>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className={`${styles.new_pin_input} pin_title`}\r\n                                    id={`${styles.pin_title}_title`}\r\n                                    name=\"photoTitle\" // name을 추가\r\n                                    value={pinDetails.photoTitle} // value를 상태 변수로 설정\r\n                                    onChange={handleChange} // onChange 이벤트 추가\r\n                                />\r\n                                <textarea\r\n                                    type=\"text\"\r\n                                    className={`${styles.new_pin_input} pin_description`}\r\n                                    id={`${styles.pin_description}_content`}\r\n                                    name=\"photoContent\" // name을 추가\r\n                                    value={pinDetails.photoContent} // value를 상태 변수로 설정\r\n                                    onChange={handleChange} // onChange 이벤트 추가\r\n                                    style={{ height: '15rem' }}\r\n                                />\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className={`${styles.new_pin_input} pin_destination`}\r\n                                    id={`${styles.pin_destination}_link`}\r\n                                    name=\"photoLink\" // name을 추가\r\n                                    value={pinDetails.photoLink} // value를 상태 변수로 설정\r\n                                    onChange={handleChange} // onChange 이벤트 추가\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </Modal.Body>\r\n                </div>\r\n                    <Modal.Footer style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', backgroundColor: 'pink', color: 'white' }}>\r\n                        <div></div>\r\n                        <div style={{ marginRight: '0.5rem', gap: '2' }}>\r\n                                <Button variant=\"danger\" size=\"sm\" onClick={savePin}>저장</Button>\r\n                                <Button variant=\"danger\" size=\"sm\" onClick={handleCancel}\r\n                                                    style={{ marginLeft: '0.7rem' }}>취소</Button>\r\n                        </div>\r\n                    </Modal.Footer>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ImageModify;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}