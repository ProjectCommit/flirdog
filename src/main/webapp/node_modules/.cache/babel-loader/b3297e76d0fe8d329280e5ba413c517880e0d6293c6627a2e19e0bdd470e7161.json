{"ast":null,"code":"var _jsxFileName = \"C:\\\\Spring Boot\\\\workspacebranch\\\\flirdog\\\\src\\\\main\\\\webapp\\\\src\\\\components\\\\somoim\\\\SomoimTest.js\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport React, { useContext, useState } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { UserContext } from '../../contexts/UserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SomoimTest = () => {\n  _s();\n  const [isAdmin, setIsAdmin] = useState();\n  const [somoimJoin, setSomoimJoin] = useState({});\n  const navigate = useNavigate();\n  const {\n    subMenu = 'detailMain',\n    somoimId\n  } = useParams();\n  const {\n    user\n  } = useContext(UserContext); // 유저 컨텍스트\n  const {\n    id,\n    name\n  } = user;\n  const joinSomoim = async e => {\n    // 소모임 회원가입\n    const confirmed = window.confirm('해당 소모임에 참여하시겠습니까?');\n    if (!id) {\n      alert('먼저 로그인해 주십시오.');\n      navigate('/login');\n    }\n    if (confirmed) {\n      await axios.post(`/somoim/joinSomoim`, {\n        somoimId: somoimId,\n        userId: id\n      }).then(res => {\n        setSomoimJoin(res.data);\n        console.log(somoimJoin);\n        alert('소모임에 가입하셨습니다.');\n      }).catch(e => console.log(e));\n    } else {\n      console.log(\"유저 id 또는 소모임 id가 없습니다.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [isAdmin === 0 ? '가입자' : '미가입자', \" / \", isAdmin === 1 ? '가입자' : '미가입자', isAdmin !== 0 && isAdmin !== 1 && /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"outline-danger\",\n      onClick: joinSomoim,\n      style: {\n        alignSelf: 'center'\n      },\n      children: \"\\uAC00\\uC785\\uD558\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n_s(SomoimTest, \"nsJpTZ3cl8mUp5TMRZqRSmSX01s=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = SomoimTest;\nexport default SomoimTest;\nvar _c;\n$RefreshReg$(_c, \"SomoimTest\");","map":{"version":3,"names":["axios","React","useContext","useState","Button","useNavigate","useParams","UserContext","jsxDEV","_jsxDEV","SomoimTest","_s","isAdmin","setIsAdmin","somoimJoin","setSomoimJoin","navigate","subMenu","somoimId","user","id","name","joinSomoim","e","confirmed","window","confirm","alert","post","userId","then","res","data","console","log","catch","children","variant","onClick","style","alignSelf","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Spring Boot/workspacebranch/flirdog/src/main/webapp/src/components/somoim/SomoimTest.js"],"sourcesContent":["import axios from 'axios';\r\nimport React, { useContext, useState } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport { UserContext } from '../../contexts/UserContext';\r\n\r\nconst SomoimTest = () => {\r\n    const [isAdmin, setIsAdmin] = useState();\r\n    const [somoimJoin, setSomoimJoin] = useState({});\r\n    const navigate = useNavigate();\r\n    const { subMenu = 'detailMain', somoimId } = useParams();\r\n    const { user } = useContext(UserContext); // 유저 컨텍스트\r\n    const { id, name } = user\r\n\r\n    const joinSomoim = async (e) => { // 소모임 회원가입\r\n        const confirmed = window.confirm('해당 소모임에 참여하시겠습니까?');\r\n        if(!id) {\r\n            alert('먼저 로그인해 주십시오.')\r\n            navigate('/login')\r\n        }\r\n        if (confirmed) {\r\n            await axios.post(`/somoim/joinSomoim`, {\r\n              somoimId: somoimId,\r\n              userId: id,\r\n            }).then(res => {\r\n                setSomoimJoin(res.data)\r\n                console.log(somoimJoin)\r\n                alert('소모임에 가입하셨습니다.');\r\n            }).catch(e => console.log(e));\r\n      \r\n          } else {\r\n            console.log(\"유저 id 또는 소모임 id가 없습니다.\");\r\n          }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {isAdmin === 0 ? '가입자' : '미가입자'} / {isAdmin === 1 ? '가입자' : '미가입자'}\r\n            {\r\n                isAdmin !== 0 && isAdmin !== 1 && (\r\n                    <Button variant=\"outline-danger\" onClick={joinSomoim} style={{ alignSelf: 'center' }}>\r\n                        가입하기\r\n                    </Button>\r\n                )\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SomoimTest;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,IAAIC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AACnD,SAASC,MAAM,QAAQ,iBAAiB;AACxC,SAASC,WAAW,EAAEC,SAAS,QAAQ,kBAAkB;AACzD,SAASC,WAAW,QAAQ,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,CAAC;EACxC,MAAM,CAACW,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC,CAAC;EAChD,MAAMa,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEY,OAAO,GAAG,YAAY;IAAEC;EAAS,CAAC,GAAGZ,SAAS,CAAC,CAAC;EACxD,MAAM;IAAEa;EAAK,CAAC,GAAGjB,UAAU,CAACK,WAAW,CAAC,CAAC,CAAC;EAC1C,MAAM;IAAEa,EAAE;IAAEC;EAAK,CAAC,GAAGF,IAAI;EAEzB,MAAMG,UAAU,GAAG,MAAOC,CAAC,IAAK;IAAE;IAC9B,MAAMC,SAAS,GAAGC,MAAM,CAACC,OAAO,CAAC,mBAAmB,CAAC;IACrD,IAAG,CAACN,EAAE,EAAE;MACJO,KAAK,CAAC,eAAe,CAAC;MACtBX,QAAQ,CAAC,QAAQ,CAAC;IACtB;IACA,IAAIQ,SAAS,EAAE;MACX,MAAMxB,KAAK,CAAC4B,IAAI,CAAE,oBAAmB,EAAE;QACrCV,QAAQ,EAAEA,QAAQ;QAClBW,MAAM,EAAET;MACV,CAAC,CAAC,CAACU,IAAI,CAACC,GAAG,IAAI;QACXhB,aAAa,CAACgB,GAAG,CAACC,IAAI,CAAC;QACvBC,OAAO,CAACC,GAAG,CAACpB,UAAU,CAAC;QACvBa,KAAK,CAAC,eAAe,CAAC;MAC1B,CAAC,CAAC,CAACQ,KAAK,CAACZ,CAAC,IAAIU,OAAO,CAACC,GAAG,CAACX,CAAC,CAAC,CAAC;IAE/B,CAAC,MAAM;MACLU,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;IACvC;EACN,CAAC;EAED,oBACIzB,OAAA;IAAA2B,QAAA,GACKxB,OAAO,KAAK,CAAC,GAAG,KAAK,GAAG,MAAM,EAAC,KAAG,EAACA,OAAO,KAAK,CAAC,GAAG,KAAK,GAAG,MAAM,EAE9DA,OAAO,KAAK,CAAC,IAAIA,OAAO,KAAK,CAAC,iBAC1BH,OAAA,CAACL,MAAM;MAACiC,OAAO,EAAC,gBAAgB;MAACC,OAAO,EAAEhB,UAAW;MAACiB,KAAK,EAAE;QAAEC,SAAS,EAAE;MAAS,CAAE;MAAAJ,QAAA,EAAC;IAEtF;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CACX;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEJ,CAAC;AAEd,CAAC;AAACjC,EAAA,CAzCID,UAAU;EAAA,QAGKL,WAAW,EACiBC,SAAS;AAAA;AAAAuC,EAAA,GAJpDnC,UAAU;AA2ChB,eAAeA,UAAU;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}