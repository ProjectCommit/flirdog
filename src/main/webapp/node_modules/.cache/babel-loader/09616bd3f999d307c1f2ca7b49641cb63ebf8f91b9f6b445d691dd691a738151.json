{"ast":null,"code":"var _jsxFileName = \"C:\\\\Spring Boot\\\\workspacebranch\\\\flirdog\\\\src\\\\main\\\\webapp\\\\src\\\\components\\\\product\\\\Object\\\\MainCategoryCheckbox.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport CheckBox from \"../resouce/CheckBox\";\nimport SubCategory from \"../resouce/SubCategory\";\nimport SubCategoryCheckbox from \"./SubCategoryCheckbox\";\nimport MaincheckBoxStyles from \"../../../css/product/MainCheckBoxStyles.t.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MainCategoryCheckbox = props => {\n  _s();\n  const {\n    value\n  } = props.mainCategoey;\n  const [isChecked, setIsChecked] = useState(false);\n  const [countSubChecked, setCountSubChecked] = useState(0);\n  const {\n    onSetMainSortList,\n    onSetSubSortList\n  } = props;\n  const totalSubCategory = SubCategory.valueOf(value).subCategory.length;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: MaincheckBoxStyles.mainCheckBoxDiv,\n      children: /*#__PURE__*/_jsxDEV(CheckBox, {\n        isClicked: isChecked,\n        onSetIsClicked: isClicked => setIsChecked(!isChecked),\n        category: props.mainCategoey,\n        onSetSortList: onSetMainSortList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: isChecked || countSubChecked > 0 ? \"block\" : \"none\"\n      },\n      children: SubCategory.valueOf(value).subCategory.map(item => /*#__PURE__*/_jsxDEV(SubCategoryCheckbox, {\n        subCategory: item,\n        onSetSortList: onSetSubSortList,\n        countSubChecked: countSubChecked,\n        setCountSubChecked: setCountSubChecked,\n        totalSubCategory: totalSubCategory,\n        reset: props.reset,\n        SetMainIsChecked: setIsChecked\n      }, item.text, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(MainCategoryCheckbox, \"3f1mVLyqvALo1ALzGffAdQyk9Gg=\");\n_c = MainCategoryCheckbox;\nexport default MainCategoryCheckbox;\nvar _c;\n$RefreshReg$(_c, \"MainCategoryCheckbox\");","map":{"version":3,"names":["React","useState","CheckBox","SubCategory","SubCategoryCheckbox","MaincheckBoxStyles","jsxDEV","_jsxDEV","Fragment","_Fragment","MainCategoryCheckbox","props","_s","value","mainCategoey","isChecked","setIsChecked","countSubChecked","setCountSubChecked","onSetMainSortList","onSetSubSortList","totalSubCategory","valueOf","subCategory","length","children","className","mainCheckBoxDiv","isClicked","onSetIsClicked","category","onSetSortList","fileName","_jsxFileName","lineNumber","columnNumber","style","display","map","item","reset","SetMainIsChecked","text","_c","$RefreshReg$"],"sources":["C:/Spring Boot/workspacebranch/flirdog/src/main/webapp/src/components/product/Object/MainCategoryCheckbox.tsx"],"sourcesContent":["import React, {useState} from 'react';\r\nimport CheckBox from \"../resouce/CheckBox\";\r\nimport SubCategory from \"../resouce/SubCategory\";\r\nimport SubCategoryCheckbox from \"./SubCategoryCheckbox\";\r\nimport MaincheckBoxStyles from \"../../../css/product/MainCheckBoxStyles.t.module.css\";\r\n\r\ntype MainCategoeyCheckboxPropsType = {\r\n    mainCategoey: {\r\n        value: string;\r\n        text: string;\r\n    };\r\n    onSetMainSortList: (value: string) => void;\r\n    onSetSubSortList: (value: string) => void;\r\n    reset : React.MutableRefObject<number>;\r\n};\r\n\r\nconst MainCategoryCheckbox = (props: MainCategoeyCheckboxPropsType) => {\r\n    const { value } = props.mainCategoey;\r\n    const [isChecked, setIsChecked] = useState(false);\r\n    const [countSubChecked, setCountSubChecked] = useState(0);\r\n    const { onSetMainSortList, onSetSubSortList } = props;\r\n    const totalSubCategory = SubCategory.valueOf<SubCategory>(value).subCategory.length;\r\n\r\n    return (\r\n        <>\r\n            <div className={MaincheckBoxStyles.mainCheckBoxDiv}>\r\n                <CheckBox\r\n                    isClicked={isChecked}\r\n                    onSetIsClicked={(isClicked: Boolean) => setIsChecked(!isChecked)}\r\n                    category={props.mainCategoey}\r\n                    onSetSortList={onSetMainSortList}\r\n                />\r\n            </div>\r\n            <div style={{ display: isChecked || countSubChecked > 0 ? \"block\" : \"none\" }}>\r\n                {SubCategory.valueOf<SubCategory>(value).subCategory.map((item) => (\r\n                    <SubCategoryCheckbox\r\n                        key={item.text}\r\n                        subCategory={item}\r\n                        onSetSortList={onSetSubSortList}\r\n                        countSubChecked={countSubChecked}\r\n                        setCountSubChecked={setCountSubChecked}\r\n                        totalSubCategory={totalSubCategory}\r\n                        reset={props.reset}\r\n                        SetMainIsChecked={setIsChecked}\r\n                    />\r\n                ))}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default MainCategoryCheckbox;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAOC,QAAQ,MAAM,qBAAqB;AAC1C,OAAOC,WAAW,MAAM,wBAAwB;AAChD,OAAOC,mBAAmB,MAAM,uBAAuB;AACvD,OAAOC,kBAAkB,MAAM,sDAAsD;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAYtF,MAAMC,oBAAoB,GAAIC,KAAoC,IAAK;EAAAC,EAAA;EACnE,MAAM;IAAEC;EAAM,CAAC,GAAGF,KAAK,CAACG,YAAY;EACpC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACgB,eAAe,EAAEC,kBAAkB,CAAC,GAAGjB,QAAQ,CAAC,CAAC,CAAC;EACzD,MAAM;IAAEkB,iBAAiB;IAAEC;EAAiB,CAAC,GAAGT,KAAK;EACrD,MAAMU,gBAAgB,GAAGlB,WAAW,CAACmB,OAAO,CAAcT,KAAK,CAAC,CAACU,WAAW,CAACC,MAAM;EAEnF,oBACIjB,OAAA,CAAAE,SAAA;IAAAgB,QAAA,gBACIlB,OAAA;MAAKmB,SAAS,EAAErB,kBAAkB,CAACsB,eAAgB;MAAAF,QAAA,eAC/ClB,OAAA,CAACL,QAAQ;QACL0B,SAAS,EAAEb,SAAU;QACrBc,cAAc,EAAGD,SAAkB,IAAKZ,YAAY,CAAC,CAACD,SAAS,CAAE;QACjEe,QAAQ,EAAEnB,KAAK,CAACG,YAAa;QAC7BiB,aAAa,EAAEZ;MAAkB;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eACN5B,OAAA;MAAK6B,KAAK,EAAE;QAAEC,OAAO,EAAEtB,SAAS,IAAIE,eAAe,GAAG,CAAC,GAAG,OAAO,GAAG;MAAO,CAAE;MAAAQ,QAAA,EACxEtB,WAAW,CAACmB,OAAO,CAAcT,KAAK,CAAC,CAACU,WAAW,CAACe,GAAG,CAAEC,IAAI,iBAC1DhC,OAAA,CAACH,mBAAmB;QAEhBmB,WAAW,EAAEgB,IAAK;QAClBR,aAAa,EAAEX,gBAAiB;QAChCH,eAAe,EAAEA,eAAgB;QACjCC,kBAAkB,EAAEA,kBAAmB;QACvCG,gBAAgB,EAAEA,gBAAiB;QACnCmB,KAAK,EAAE7B,KAAK,CAAC6B,KAAM;QACnBC,gBAAgB,EAAEzB;MAAa,GAP1BuB,IAAI,CAACG,IAAI;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAQjB,CACJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA,eACR,CAAC;AAEX,CAAC;AAACvB,EAAA,CAjCIF,oBAAoB;AAAAiC,EAAA,GAApBjC,oBAAoB;AAmC1B,eAAeA,oBAAoB;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}