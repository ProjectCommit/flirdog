{"ast":null,"code":"var _jsxFileName = \"C:\\\\Spring Boot\\\\workspacebranch\\\\flirdog\\\\src\\\\main\\\\webapp\\\\src\\\\components\\\\mypage\\\\6\\uD14C\\uC2A4\\uD2B8\\uD398\\uC774\\uC9C0\\\\Kakaopay.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Kakaopay = () => {\n  _s();\n  // useRef를 사용하여 버튼 엘리먼트를 참조\n  const buttonRef = useRef(null);\n  useEffect(() => {\n    // IMP 초기화\n    const IMP = window.IMP;\n    IMP.init(\"imp15772586\");\n\n    // useRef로 참조한 버튼 엘리먼트를 사용\n    const button = buttonRef.current;\n\n    // onClickpay 함수 정의\n    const onClickpay = async () => {\n      IMP.request_pay({\n        pg: \"kakaopay\",\n        pay_method: \"card\",\n        amount: \"10\",\n        name: \"강아지껌\",\n        merchant_uid: \"ORD20231203-000005\"\n      });\n    };\n\n    // 버튼이 정상적으로 찾아지면 클릭 이벤트를 할당\n    if (button) {\n      button.addEventListener(\"click\", onClickpay);\n    }\n\n    // cleanup 함수\n    return () => {\n      // 버튼이 정상적으로 찾아지면 이벤트 핸들러 제거\n      if (button) {\n        button.removeEventListener(\"click\", onClickpay);\n      }\n    };\n  }, []); // 빈 배열을 전달하여 컴포넌트가 처음 마운트될 때만 실행\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      id: \"naverPayBtn\",\n      value: \"\\uB124\\uC774\\uBC84\\uD398\\uC774 \\uACB0\\uC81C \\uBC84\\uD2BC\",\n      ref: buttonRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(Kakaopay, \"PyOyHPIzTUj62NAf35stQiG1Ma8=\");\n_c = Kakaopay;\nexport default Kakaopay;\nvar _c;\n$RefreshReg$(_c, \"Kakaopay\");","map":{"version":3,"names":["React","useEffect","useRef","jsxDEV","_jsxDEV","Kakaopay","_s","buttonRef","IMP","window","init","button","current","onClickpay","request_pay","pg","pay_method","amount","name","merchant_uid","addEventListener","removeEventListener","children","type","id","value","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Spring Boot/workspacebranch/flirdog/src/main/webapp/src/components/mypage/6테스트페이지/Kakaopay.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\n\r\nconst Kakaopay = () => {\r\n  // useRef를 사용하여 버튼 엘리먼트를 참조\r\n  const buttonRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    // IMP 초기화\r\n    const IMP = window.IMP;\r\n    IMP.init(\"imp15772586\");\r\n\r\n    // useRef로 참조한 버튼 엘리먼트를 사용\r\n    const button = buttonRef.current;\r\n\r\n    // onClickpay 함수 정의\r\n    const onClickpay = async () => {\r\n      IMP.request_pay({\r\n        pg: \"kakaopay\",\r\n        pay_method: \"card\",\r\n        amount: \"10\",\r\n        name: \"강아지껌\",\r\n        merchant_uid: \"ORD20231203-000005\",\r\n      });\r\n    };\r\n\r\n    // 버튼이 정상적으로 찾아지면 클릭 이벤트를 할당\r\n    if (button) {\r\n      button.addEventListener(\"click\", onClickpay);\r\n    }\r\n\r\n    // cleanup 함수\r\n    return () => {\r\n      // 버튼이 정상적으로 찾아지면 이벤트 핸들러 제거\r\n      if (button) {\r\n        button.removeEventListener(\"click\", onClickpay);\r\n      }\r\n    };\r\n  }, []); // 빈 배열을 전달하여 컴포넌트가 처음 마운트될 때만 실행\r\n\r\n  return (\r\n    <div>\r\n      {/* 버튼에 ref를 추가하여 참조할 수 있도록 함 */}\r\n      <input type=\"button\" id=\"naverPayBtn\" value=\"네이버페이 결제 버튼\" ref={buttonRef} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Kakaopay;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB;EACA,MAAMC,SAAS,GAAGL,MAAM,CAAC,IAAI,CAAC;EAE9BD,SAAS,CAAC,MAAM;IACd;IACA,MAAMO,GAAG,GAAGC,MAAM,CAACD,GAAG;IACtBA,GAAG,CAACE,IAAI,CAAC,aAAa,CAAC;;IAEvB;IACA,MAAMC,MAAM,GAAGJ,SAAS,CAACK,OAAO;;IAEhC;IACA,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7BL,GAAG,CAACM,WAAW,CAAC;QACdC,EAAE,EAAE,UAAU;QACdC,UAAU,EAAE,MAAM;QAClBC,MAAM,EAAE,IAAI;QACZC,IAAI,EAAE,MAAM;QACZC,YAAY,EAAE;MAChB,CAAC,CAAC;IACJ,CAAC;;IAED;IACA,IAAIR,MAAM,EAAE;MACVA,MAAM,CAACS,gBAAgB,CAAC,OAAO,EAAEP,UAAU,CAAC;IAC9C;;IAEA;IACA,OAAO,MAAM;MACX;MACA,IAAIF,MAAM,EAAE;QACVA,MAAM,CAACU,mBAAmB,CAAC,OAAO,EAAER,UAAU,CAAC;MACjD;IACF,CAAC;EACH,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACET,OAAA;IAAAkB,QAAA,eAEElB,OAAA;MAAOmB,IAAI,EAAC,QAAQ;MAACC,EAAE,EAAC,aAAa;MAACC,KAAK,EAAC,0DAAa;MAACC,GAAG,EAAEnB;IAAU;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzE,CAAC;AAEV,CAAC;AAACxB,EAAA,CA3CID,QAAQ;AAAA0B,EAAA,GAAR1B,QAAQ;AA6Cd,eAAeA,QAAQ;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}