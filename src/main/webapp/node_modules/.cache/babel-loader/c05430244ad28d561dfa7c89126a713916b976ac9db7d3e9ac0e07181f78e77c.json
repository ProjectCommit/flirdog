{"ast":null,"code":"const {\n  kakao\n} = window;\nexport const convertAddressToCoords = (address, callback) => {\n  const geocoder = new kakao.maps.services.Geocoder();\n  geocoder.addressSearch(address, function (result, status) {\n    if (status === kakao.maps.services.Status.OK) {\n      const coords = new kakao.maps.LatLng(result[0].y, result[0].x);\n      callback(coords);\n    }\n  });\n};\nexport const calculateCoordsDistance = (coords1, coords2) => {\n  const toRadian = angle => Math.PI / 180 * angle;\n  const earthRadius = 6371; // 지구 반지름 (킬로미터 단위)\n\n  const lat1 = coords1.getLat();\n  const lon1 = coords1.getLng();\n  const lat2 = coords2.getLat();\n  const lon2 = coords2.getLng();\n  const dLat = toRadian(lat2 - lat1);\n  const dLon = toRadian(lon2 - lon1);\n  const a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos(toRadian(lat1)) * Math.cos(toRadian(lat2)) * Math.sin(dLon / 2) * Math.sin(dLon / 2);\n  const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n  return earthRadius * c; // 결과는 킬로미터 단위\n};","map":{"version":3,"names":["kakao","window","convertAddressToCoords","address","callback","geocoder","maps","services","Geocoder","addressSearch","result","status","Status","OK","coords","LatLng","y","x","calculateCoordsDistance","coords1","coords2","toRadian","angle","Math","PI","earthRadius","lat1","getLat","lon1","getLng","lat2","lon2","dLat","dLon","a","sin","cos","c","atan2","sqrt"],"sources":["C:/Spring Boot/workspacebranch/flirdog/src/main/webapp/src/components/login/utils.js"],"sourcesContent":["const { kakao } = window;\r\n\r\nexport const convertAddressToCoords = (address, callback) => {\r\n  const geocoder = new kakao.maps.services.Geocoder();\r\n\r\n  geocoder.addressSearch(address, function (result, status) {\r\n    if (status === kakao.maps.services.Status.OK) {\r\n      const coords = new kakao.maps.LatLng(result[0].y, result[0].x);\r\n      callback(coords);\r\n    }\r\n  });\r\n};\r\n\r\nexport const calculateCoordsDistance = (coords1, coords2) => {\r\n  const toRadian = (angle) => (Math.PI / 180) * angle;\r\n  const earthRadius = 6371; // 지구 반지름 (킬로미터 단위)\r\n\r\n  const lat1 = coords1.getLat();\r\n  const lon1 = coords1.getLng();\r\n  const lat2 = coords2.getLat();\r\n  const lon2 = coords2.getLng();\r\n\r\n  const dLat = toRadian(lat2 - lat1);\r\n  const dLon = toRadian(lon2 - lon1);\r\n\r\n  const a =\r\n    Math.sin(dLat / 2) * Math.sin(dLat / 2) +\r\n    Math.cos(toRadian(lat1)) *\r\n      Math.cos(toRadian(lat2)) *\r\n      Math.sin(dLon / 2) *\r\n      Math.sin(dLon / 2);\r\n  const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\r\n\r\n  return earthRadius * c; // 결과는 킬로미터 단위\r\n};\r\n"],"mappings":"AAAA,MAAM;EAAEA;AAAM,CAAC,GAAGC,MAAM;AAExB,OAAO,MAAMC,sBAAsB,GAAGA,CAACC,OAAO,EAAEC,QAAQ,KAAK;EAC3D,MAAMC,QAAQ,GAAG,IAAIL,KAAK,CAACM,IAAI,CAACC,QAAQ,CAACC,QAAQ,CAAC,CAAC;EAEnDH,QAAQ,CAACI,aAAa,CAACN,OAAO,EAAE,UAAUO,MAAM,EAAEC,MAAM,EAAE;IACxD,IAAIA,MAAM,KAAKX,KAAK,CAACM,IAAI,CAACC,QAAQ,CAACK,MAAM,CAACC,EAAE,EAAE;MAC5C,MAAMC,MAAM,GAAG,IAAId,KAAK,CAACM,IAAI,CAACS,MAAM,CAACL,MAAM,CAAC,CAAC,CAAC,CAACM,CAAC,EAAEN,MAAM,CAAC,CAAC,CAAC,CAACO,CAAC,CAAC;MAC9Db,QAAQ,CAACU,MAAM,CAAC;IAClB;EACF,CAAC,CAAC;AACJ,CAAC;AAED,OAAO,MAAMI,uBAAuB,GAAGA,CAACC,OAAO,EAAEC,OAAO,KAAK;EAC3D,MAAMC,QAAQ,GAAIC,KAAK,IAAMC,IAAI,CAACC,EAAE,GAAG,GAAG,GAAIF,KAAK;EACnD,MAAMG,WAAW,GAAG,IAAI,CAAC,CAAC;;EAE1B,MAAMC,IAAI,GAAGP,OAAO,CAACQ,MAAM,CAAC,CAAC;EAC7B,MAAMC,IAAI,GAAGT,OAAO,CAACU,MAAM,CAAC,CAAC;EAC7B,MAAMC,IAAI,GAAGV,OAAO,CAACO,MAAM,CAAC,CAAC;EAC7B,MAAMI,IAAI,GAAGX,OAAO,CAACS,MAAM,CAAC,CAAC;EAE7B,MAAMG,IAAI,GAAGX,QAAQ,CAACS,IAAI,GAAGJ,IAAI,CAAC;EAClC,MAAMO,IAAI,GAAGZ,QAAQ,CAACU,IAAI,GAAGH,IAAI,CAAC;EAElC,MAAMM,CAAC,GACLX,IAAI,CAACY,GAAG,CAACH,IAAI,GAAG,CAAC,CAAC,GAAGT,IAAI,CAACY,GAAG,CAACH,IAAI,GAAG,CAAC,CAAC,GACvCT,IAAI,CAACa,GAAG,CAACf,QAAQ,CAACK,IAAI,CAAC,CAAC,GACtBH,IAAI,CAACa,GAAG,CAACf,QAAQ,CAACS,IAAI,CAAC,CAAC,GACxBP,IAAI,CAACY,GAAG,CAACF,IAAI,GAAG,CAAC,CAAC,GAClBV,IAAI,CAACY,GAAG,CAACF,IAAI,GAAG,CAAC,CAAC;EACtB,MAAMI,CAAC,GAAG,CAAC,GAAGd,IAAI,CAACe,KAAK,CAACf,IAAI,CAACgB,IAAI,CAACL,CAAC,CAAC,EAAEX,IAAI,CAACgB,IAAI,CAAC,CAAC,GAAGL,CAAC,CAAC,CAAC;EAExD,OAAOT,WAAW,GAAGY,CAAC,CAAC,CAAC;AAC1B,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}