{"ast":null,"code":"var _jsxFileName = \"C:\\\\Spring Boot\\\\workspacebranch\\\\flirdog\\\\src\\\\main\\\\webapp\\\\src\\\\components\\\\product\\\\Object\\\\SubCategoryCheckbox.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport CheckBox from \"../resouce/CheckBox\";\nimport SubCheckboxStyles from \"../../../css/product/SubCheckBoxStyles.t.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SubCategoryCheckbox = props => {\n  _s();\n  const [isChecked, setIsChecked] = useState(false);\n  const {\n    onSetSortList\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: SubCheckboxStyles.subCheckBoxDiv,\n    children: /*#__PURE__*/_jsxDEV(CheckBox, {\n      isClicked: isChecked,\n      onSetIsClicked: isClicked => setIsChecked(!isChecked),\n      category: props.subCategory,\n      onSetSortList: onSetSortList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n_s(SubCategoryCheckbox, \"ZhOKOS+Td3oentFkMpi7jRDXPaI=\");\n_c = SubCategoryCheckbox;\nexport default SubCategoryCheckbox;\nvar _c;\n$RefreshReg$(_c, \"SubCategoryCheckbox\");","map":{"version":3,"names":["React","useState","CheckBox","SubCheckboxStyles","jsxDEV","_jsxDEV","SubCategoryCheckbox","props","_s","isChecked","setIsChecked","onSetSortList","className","subCheckBoxDiv","children","isClicked","onSetIsClicked","category","subCategory","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Spring Boot/workspacebranch/flirdog/src/main/webapp/src/components/product/Object/SubCategoryCheckbox.tsx"],"sourcesContent":["import React, {useState} from 'react';\r\nimport CheckBox from \"../resouce/CheckBox\";\r\nimport SubCheckboxStyles from \"../../../css/product/SubCheckBoxStyles.t.module.css\";\r\n\r\ntype SubCategoeyCheckboxPropsType = {\r\n    subCategory: {\r\n        value: string;\r\n        text: string\r\n    }\r\n    onSetSortList: (value: string) => void;\r\n    countSubChecked:number;\r\n    setCountSubChecked: React.Dispatch<React.SetStateAction<number>>;\r\n    reset : React.MutableRefObject<number>;\r\n    totalSubCategory:number;\r\n    SetMainIsChecked: React.Dispatch<React.SetStateAction<boolean>>;\r\n}\r\n\r\nconst SubCategoryCheckbox = (props: SubCategoeyCheckboxPropsType) => {\r\n    const [isChecked, setIsChecked] = useState(false)\r\n    const {onSetSortList} = props\r\n\r\n\r\n    return (\r\n        <div className={SubCheckboxStyles.subCheckBoxDiv}>\r\n            <CheckBox\r\n                isClicked={isChecked}\r\n                onSetIsClicked={(isClicked: Boolean) => setIsChecked(!isChecked)}\r\n                category={props.subCategory}\r\n                onSetSortList={onSetSortList}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SubCategoryCheckbox;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAOC,QAAQ,MAAM,qBAAqB;AAC1C,OAAOC,iBAAiB,MAAM,qDAAqD;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAepF,MAAMC,mBAAmB,GAAIC,KAAmC,IAAK;EAAAC,EAAA;EACjE,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM;IAACU;EAAa,CAAC,GAAGJ,KAAK;EAG7B,oBACIF,OAAA;IAAKO,SAAS,EAAET,iBAAiB,CAACU,cAAe;IAAAC,QAAA,eAC7CT,OAAA,CAACH,QAAQ;MACLa,SAAS,EAAEN,SAAU;MACrBO,cAAc,EAAGD,SAAkB,IAAKL,YAAY,CAAC,CAACD,SAAS,CAAE;MACjEQ,QAAQ,EAAEV,KAAK,CAACW,WAAY;MAC5BP,aAAa,EAAEA;IAAc;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CAAC;AAACd,EAAA,CAfIF,mBAAmB;AAAAiB,EAAA,GAAnBjB,mBAAmB;AAiBzB,eAAeA,mBAAmB;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}