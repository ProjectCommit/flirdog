{"ast":null,"code":"var _jsxFileName = \"C:\\\\Spring Boot\\\\workspacebranch\\\\flirdog\\\\src\\\\main\\\\webapp\\\\src\\\\components\\\\login\\\\KaKaoMapOnlyMap.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  kakao\n} = window;\nconst KakaoMap = ({\n  matchingAddress,\n  onAddressSelected\n}) => {\n  _s();\n  const [address, setAddress] = useState(matchingAddress);\n  const infowindow = new kakao.maps.InfoWindow({\n    zIndex: 1\n  });\n  const onAddressClick = item => {\n    const selectedAddress = item.road_address_name || item.address_name;\n    console.log(address);\n    console.log(infowindow);\n    setAddress(selectedAddress);\n    onAddressSelected(selectedAddress);\n    console.log(selectedAddress);\n  };\n\n  // 검색결과 배열에 담아줌\n  const [Places, setPlaces] = useState([]);\n  useEffect(() => {\n    const container = document.getElementById(\"kakaoMap\");\n    const options = {\n      center: new kakao.maps.LatLng(37.498776, 127.029105),\n      level: 3\n    };\n    //지도 객체 생성\n    const map = new kakao.maps.Map(container, options);\n\n    //주소-좌표 변환 객체 생성\n    const geocoder = new kakao.maps.services.Geocoder();\n\n    // 주소로 좌표를 검색합니다\n    if (matchingAddress !== \"\") {\n      geocoder.addressSearch(matchingAddress, function (result, status) {\n        // 정상적으로 검색이 완료됐으면\n        if (status === kakao.maps.services.Status.OK) {\n          const coords = new kakao.maps.LatLng(result[0].y, result[0].x);\n\n          // 결과값으로 받은 위치를 마커로 표시합니다\n          const marker = new kakao.maps.Marker({\n            map: map,\n            position: coords\n          });\n\n          // 인포윈도우로 장소에 대한 설명을 표시합니다\n          const infowindow = new kakao.maps.InfoWindow({\n            content: '<div style=\"width:150px;text-align:center;padding:6px 0;\">만남 장소</div>'\n          });\n          infowindow.open(map, marker);\n\n          // 지도의 중심을 결과값으로 받은 위치로 이동시킵니다\n          map.setCenter(coords);\n        }\n      });\n    }\n  }, [matchingAddress]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"kakaoMap\",\n    style: {\n      width: \"100%\",\n      height: \"100%\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(KakaoMap, \"yd4n1vasilohKf/iXvQPGsMAM/4=\");\n_c = KakaoMap;\nexport default KakaoMap;\nvar _c;\n$RefreshReg$(_c, \"KakaoMap\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","kakao","window","KakaoMap","matchingAddress","onAddressSelected","_s","address","setAddress","infowindow","maps","InfoWindow","zIndex","onAddressClick","item","selectedAddress","road_address_name","address_name","console","log","Places","setPlaces","container","document","getElementById","options","center","LatLng","level","map","Map","geocoder","services","Geocoder","addressSearch","result","status","Status","OK","coords","y","x","marker","Marker","position","content","open","setCenter","id","style","width","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Spring Boot/workspacebranch/flirdog/src/main/webapp/src/components/login/KaKaoMapOnlyMap.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nconst { kakao } = window;\r\n\r\nconst KakaoMap = ({ matchingAddress, onAddressSelected }) => {\r\n  const [address, setAddress] = useState(matchingAddress);\r\n  const infowindow = new kakao.maps.InfoWindow({ zIndex: 1 });\r\n\r\n  const onAddressClick = (item) => {\r\n    const selectedAddress = item.road_address_name || item.address_name;\r\n    console.log(address);\r\n    console.log(infowindow);\r\n    setAddress(selectedAddress);\r\n    onAddressSelected(selectedAddress);\r\n    console.log(selectedAddress);\r\n  };\r\n\r\n  // 검색결과 배열에 담아줌\r\n  const [Places, setPlaces] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const container = document.getElementById(\"kakaoMap\");\r\n    const options = {\r\n      center: new kakao.maps.LatLng(37.498776, 127.029105),\r\n      level: 3,\r\n    };\r\n    //지도 객체 생성\r\n    const map = new kakao.maps.Map(container, options);\r\n\r\n    //주소-좌표 변환 객체 생성\r\n    const geocoder = new kakao.maps.services.Geocoder();\r\n\r\n    // 주소로 좌표를 검색합니다\r\n    if (matchingAddress !== \"\") {\r\n      geocoder.addressSearch(matchingAddress, function (result, status) {\r\n        // 정상적으로 검색이 완료됐으면\r\n        if (status === kakao.maps.services.Status.OK) {\r\n          const coords = new kakao.maps.LatLng(result[0].y, result[0].x);\r\n\r\n          // 결과값으로 받은 위치를 마커로 표시합니다\r\n          const marker = new kakao.maps.Marker({\r\n            map: map,\r\n            position: coords,\r\n          });\r\n\r\n          // 인포윈도우로 장소에 대한 설명을 표시합니다\r\n          const infowindow = new kakao.maps.InfoWindow({\r\n            content:\r\n              '<div style=\"width:150px;text-align:center;padding:6px 0;\">만남 장소</div>',\r\n          });\r\n          infowindow.open(map, marker);\r\n\r\n          // 지도의 중심을 결과값으로 받은 위치로 이동시킵니다\r\n          map.setCenter(coords);\r\n        }\r\n      });\r\n    }\r\n  }, [matchingAddress]);\r\n\r\n  return (\r\n    <div\r\n      id=\"kakaoMap\"\r\n      style={{\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n      }}\r\n    ></div>\r\n  );\r\n};\r\n\r\nexport default KakaoMap;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}