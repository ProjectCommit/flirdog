{"version":3,"file":"infinitegrid.cjs.js","sources":["../src/consts.ts","../src/utils.ts","../src/InfiniteGrid.tsx","../src/grids/MasonryInfiniteGrid.tsx","../src/grids/JustifiedInfiniteGrid.tsx","../src/grids/FrameInfiniteGrid.tsx","../src/grids/PackingInfiniteGrid.tsx"],"sourcesContent":["\nexport const REACT_INFINITEGRID_EVENT_MAP = {\n  \"onContentError\": \"contentError\",\n  \"onRenderComplete\": \"renderComplete\",\n  \"onRequestAppend\": \"requestAppend\",\n  \"onRequestPrepend\": \"requestPrepend\",\n  \"onChangeScroll\": \"changeScroll\",\n} as const;\n\nexport const REACT_INFINITEGRID_EVENTS: string[] = [];\n\nfor (const name in REACT_INFINITEGRID_EVENT_MAP) {\n  REACT_INFINITEGRID_EVENTS.push(name);\n}\n\nexport const REACT_INFINITEGRID_PROPS = [\n  \"tag\",\n  \"placeholder\",\n  \"status\",\n  \"useFirstRender\",\n  \"loading\",\n  \"itemBy\",\n  \"groupBy\",\n  ...REACT_INFINITEGRID_EVENTS,\n];\n","export function isFunction(val: any): val is Function {\n  return typeof val === \"function\";\n}\n","/**\n * egjs-infinitegrid\n * Copyright (c) 2021-present NAVER Corp.\n * MIT license\n */\nimport * as React from \"react\";\nimport VanillaInfiniteGrid, {\n  InfiniteGridOptions, InfiniteGridFunction,\n  Renderer,\n  InfiniteGridItemInfo,\n  ITEM_TYPE,\n  InfiniteGridMethods,\n  withInfiniteGridMethods,\n  getRenderingItems,\n  mountRenderingItems,\n} from \"@egjs/infinitegrid\";\nimport { ReactInfiniteGridProps } from \"./types\";\nimport { REACT_INFINITEGRID_PROPS, REACT_INFINITEGRID_EVENT_MAP } from \"./consts\";\nimport { isFunction } from \"./utils\";\n\nexport abstract class InfiniteGrid<T extends InfiniteGridOptions>\n  extends React.Component<T & ReactInfiniteGridProps & { [key: string]: any }> {\n  public static GridClass: InfiniteGridFunction;\n  @withInfiniteGridMethods\n  private _grid!: VanillaInfiniteGrid;\n  private _wrapperRef = React.createRef<HTMLDivElement>();\n  private _containerRef = React.createRef<HTMLDivElement>();\n  private _renderer!: Renderer;\n\n  public render() {\n    const attributes: { [key: string]: any } = {};\n    const props = this.props;\n    const GridClass = (this.constructor as typeof InfiniteGrid).GridClass;\n    const defaultOptions = GridClass.defaultOptions;\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const Tag = props.tag as any || \"div\";\n\n    for (const name in props) {\n      if (name in defaultOptions || REACT_INFINITEGRID_PROPS.indexOf(name as any) > -1) {\n        continue;\n      }\n      attributes[name] = props[name];\n    }\n\n    return <Tag ref={this._wrapperRef} {...attributes}>\n      {this._renderContainer()}\n    </Tag>;\n  }\n  public componentDidMount() {\n    const GridClass = (this.constructor as typeof InfiniteGrid).GridClass;\n    const defaultOptions = GridClass.defaultOptions;\n    const options: Partial<InfiniteGridOptions> = {};\n    const props = this.props;\n    const containerElement = this._containerRef.current;\n\n    for (const name in defaultOptions) {\n      if (name in props) {\n        (options as any)[name] = (props as any)[name];\n      }\n    }\n    if (containerElement) {\n      options.container = containerElement;\n    }\n    this._renderer = new Renderer();\n    options.renderer = this._renderer;\n    const grid = new GridClass(this._wrapperRef.current!, options);\n\n    for (const eventName in REACT_INFINITEGRID_EVENT_MAP) {\n      const nativeEventName = (REACT_INFINITEGRID_EVENT_MAP as any)[eventName];\n\n      grid.on(nativeEventName, (e: any) => {\n        const callback = this.props[eventName];\n\n        callback && callback(e);\n      });\n    }\n\n    this._grid = grid;\n    this._renderer.on(\"update\", () => {\n      this.setState({});\n    });\n\n    mountRenderingItems(this._getItemInfos(), {\n      grid,\n      useFirstRender: props.useFirstRender,\n      useLoading: props.loading,\n      usePlaceholder: props.placeholder,\n      horizontal: props.horizontal,\n      status: props.status,\n    });\n    this._renderer.updated();\n  }\n\n  public componentDidUpdate() {\n    const GridClass = (this.constructor as typeof InfiniteGrid).GridClass;\n    const propertyTypes = GridClass.propertyTypes;\n    const props = this.props;\n    const grid = this._grid;\n\n    for (const name in propertyTypes) {\n      if (name in props) {\n        (grid as any)[name] = (props as any)[name];\n      }\n    }\n    this._renderer.updated();\n  }\n\n  public componentWillUnmount() {\n    this._grid.destroy();\n  }\n\n  private _getItemInfos(): InfiniteGridItemInfo[] {\n    const props = this.props;\n    const children = React.Children.toArray(props.children) as React.ReactElement[];\n    const attributePrefix = props.attributePrefix || VanillaInfiniteGrid.defaultOptions.attributePrefix;\n    const itemBy = props.itemBy || ((item: React.ReactElement) => item.key);\n    const groupBy = props.groupBy || ((item: React.ReactElement) => item.props[`${attributePrefix}groupkey`]);\n    const infoBy = props.infoBy || (() => ({}));\n\n    \n    return children.map((child, i) => {\n      const {\n        data,\n        ...rest\n      } = infoBy(child, i) || {};\n\n      \n      return {\n        groupKey: groupBy(child, i),\n        key: itemBy(child, i),\n        ...rest,\n        data: {\n          ...data,\n          jsx: child,\n        },\n      };\n    });\n  }\n  private _renderContainer() {\n    const props = this.props;\n    const visibleChildren = this._getVisibleChildren();\n    const container = props.container;\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const ContainerTag = props.containerTag as any || \"div\";\n\n    if (container === true) {\n      return <ContainerTag ref={this._containerRef}>\n        {visibleChildren}\n      </ContainerTag>;\n    } else {\n      return visibleChildren;\n    }\n  }\n  private _getVisibleChildren() {\n    const props = this.props;\n    const placeholder = props.placeholder;\n    const loading = props.loading;\n    const visibleItems = getRenderingItems(this._getItemInfos(), {\n      grid: this._grid,\n      status: props.status,\n      horizontal: props.horizontal,\n      useFirstRender: props.useFirstRender,\n      useLoading: props.loading,\n      usePlaceholder: props.placeholder,\n    });\n\n    return visibleItems.map((item) => {\n      if (item.type === ITEM_TYPE.VIRTUAL) {\n        return React.cloneElement(isFunction(placeholder) ? placeholder(item) : placeholder, { key: item.key });\n      } else if (item.type === ITEM_TYPE.LOADING) {\n        return React.cloneElement(isFunction(loading) ? loading(item) : loading, { key: item.key });\n      } else {\n        return item.data.jsx;\n      }\n    });\n  }\n}\nexport interface InfiniteGrid<T extends InfiniteGridOptions> extends InfiniteGridMethods<InfiniteGrid<T>> { }\n","import {\n  MasonryInfiniteGrid as VanillaMasonryInfiniteGrid,\n  MasonryInfiniteGridOptions,\n} from \"@egjs/infinitegrid\";\nimport { InfiniteGrid } from \"../InfiniteGrid\";\n\nexport class MasonryInfiniteGrid extends InfiniteGrid<MasonryInfiniteGridOptions> {\n  public static GridClass = VanillaMasonryInfiniteGrid;\n}\n","import {\n  JustifiedInfiniteGrid as VanillaJustifiedInfiniteGrid,\n  JustifiedInfiniteGridOptions,\n} from \"@egjs/infinitegrid\";\nimport { InfiniteGrid } from \"../InfiniteGrid\";\n\nexport class JustifiedInfiniteGrid extends InfiniteGrid<JustifiedInfiniteGridOptions> {\n  public static GridClass = VanillaJustifiedInfiniteGrid;\n}\n","import {\n  FrameInfiniteGrid as VanillaFrameInfiniteGrid,\n  FrameInfiniteGridOptions,\n} from \"@egjs/infinitegrid\";\nimport { InfiniteGrid } from \"../InfiniteGrid\";\n\nexport class FrameInfiniteGrid extends InfiniteGrid<FrameInfiniteGridOptions> {\n  public static GridClass = VanillaFrameInfiniteGrid;\n}\n","import {\n  PackingInfiniteGrid as VanillaPackingInfiniteGrid,\n  PackingInfiniteGridOptions,\n} from \"@egjs/infinitegrid\";\nimport { InfiniteGrid } from \"../InfiniteGrid\";\n\nexport class PackingInfiniteGrid extends InfiniteGrid<PackingInfiniteGridOptions> {\n  public static GridClass = VanillaPackingInfiniteGrid;\n}\n"],"names":["REACT_INFINITEGRID_EVENT_MAP","REACT_INFINITEGRID_EVENTS","name","push","REACT_INFINITEGRID_PROPS","isFunction","val","__extends","_this","React","__proto","InfiniteGrid","prototype","attributes","props","GridClass","constructor","defaultOptions","Tag","tag","indexOf","ref","_wrapperRef","_renderContainer","options","containerElement","_containerRef","current","container","_renderer","Renderer","renderer","grid","eventName","nativeEventName","on","e","callback","_grid","setState","mountRenderingItems","_getItemInfos","useFirstRender","useLoading","loading","usePlaceholder","placeholder","horizontal","status","updated","propertyTypes","destroy","children","toArray","attributePrefix","VanillaInfiniteGrid","itemBy","item","key","groupBy","infoBy","map","child","i","_a","data","rest","groupKey","jsx","visibleChildren","_getVisibleChildren","ContainerTag","containerTag","visibleItems","getRenderingItems","type","ITEM_TYPE","VIRTUAL","LOADING","__decorate","withInfiniteGridMethods","MasonryInfiniteGrid","VanillaMasonryInfiniteGrid","JustifiedInfiniteGrid","VanillaJustifiedInfiniteGrid","FrameInfiniteGrid","VanillaFrameInfiniteGrid","PackingInfiniteGrid","VanillaPackingInfiniteGrid"],"mappings":"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"}